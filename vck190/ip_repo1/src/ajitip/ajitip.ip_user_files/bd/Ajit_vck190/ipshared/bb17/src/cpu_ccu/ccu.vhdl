-- VHDL global package produced by vc2vhdl from virtual circuit (vc) description 
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
package ccu_global_package is -- 
  constant ACCESS_ASR : std_logic_vector(2 downto 0) := "101";
  constant ACCESS_PSR : std_logic_vector(2 downto 0) := "001";
  constant ACCESS_REG : std_logic_vector(2 downto 0) := "110";
  constant ACCESS_TBR : std_logic_vector(2 downto 0) := "010";
  constant ACCESS_WIM : std_logic_vector(2 downto 0) := "011";
  constant ACCESS_Y : std_logic_vector(2 downto 0) := "100";
  constant ALU_INSTR : std_logic_vector(2 downto 0) := "010";
  constant ANNUL_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000000000000000001000";
  constant ANNUL_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000000011";
  constant ASI_AJIT_BRIDGE_CONFIG : std_logic_vector(7 downto 0) := "00110000";
  constant ASI_BLOCK_COPY : std_logic_vector(7 downto 0) := "00010111";
  constant ASI_BLOCK_FILL : std_logic_vector(7 downto 0) := "00011111";
  constant ASI_CACHE_DATA_I : std_logic_vector(7 downto 0) := "00001101";
  constant ASI_CACHE_DATA_I_D : std_logic_vector(7 downto 0) := "00001111";
  constant ASI_CACHE_TAG_I : std_logic_vector(7 downto 0) := "00001100";
  constant ASI_CACHE_TAG_I_D : std_logic_vector(7 downto 0) := "00001110";
  constant ASI_FLUSH_I_CONTEXT : std_logic_vector(7 downto 0) := "00011011";
  constant ASI_FLUSH_I_D_CONTEXT : std_logic_vector(7 downto 0) := "00010011";
  constant ASI_FLUSH_I_D_PAGE : std_logic_vector(7 downto 0) := "00010000";
  constant ASI_FLUSH_I_D_REGION : std_logic_vector(7 downto 0) := "00010010";
  constant ASI_FLUSH_I_D_SEGMENT : std_logic_vector(7 downto 0) := "00010001";
  constant ASI_FLUSH_I_D_USER : std_logic_vector(7 downto 0) := "00010100";
  constant ASI_FLUSH_I_PAGE : std_logic_vector(7 downto 0) := "00011000";
  constant ASI_FLUSH_I_REGION : std_logic_vector(7 downto 0) := "00011010";
  constant ASI_FLUSH_I_SEGMENT : std_logic_vector(7 downto 0) := "00011001";
  constant ASI_FLUSH_I_USER : std_logic_vector(7 downto 0) := "00011100";
  constant ASI_MMU_DIAGNOSTIC_I : std_logic_vector(7 downto 0) := "00000101";
  constant ASI_MMU_DIAGNOSTIC_IO : std_logic_vector(7 downto 0) := "00000111";
  constant ASI_MMU_DIAGNOSTIC_I_D : std_logic_vector(7 downto 0) := "00000110";
  constant ASI_MMU_FLUSH_PROBE : std_logic_vector(7 downto 0) := "00000011";
  constant ASI_MMU_REGISTER : std_logic_vector(7 downto 0) := "00000100";
  constant ASI_SUPERVISOR_DATA : std_logic_vector(7 downto 0) := "00001011";
  constant ASI_SUPERVISOR_INSTRUCTION : std_logic_vector(7 downto 0) := "00001001";
  constant ASI_USER_DATA : std_logic_vector(7 downto 0) := "00001010";
  constant ASI_USER_INSTRUCTION : std_logic_vector(7 downto 0) := "00001000";
  constant BLOCK_READ : std_logic_vector(0 downto 0) := "1";
  constant CACHE_ARRAY_NOP : std_logic_vector(2 downto 0) := "011";
  constant CACHE_ARRAY_PASS_THROUGH : std_logic_vector(2 downto 0) := "100";
  constant CACHE_ARRAY_READ_DWORD : std_logic_vector(2 downto 0) := "001";
  constant CACHE_ARRAY_WRITE_DWORD : std_logic_vector(2 downto 0) := "010";
  constant CACHE_TAG_CLEAR_ALL : std_logic_vector(2 downto 0) := "100";
  constant CACHE_TAG_CLEAR_LINE : std_logic_vector(2 downto 0) := "011";
  constant CACHE_TAG_INSERT : std_logic_vector(2 downto 0) := "010";
  constant CACHE_TAG_LOOKUP : std_logic_vector(2 downto 0) := "001";
  constant CACHE_TAG_NOP : std_logic_vector(2 downto 0) := "101";
  constant CCD_GOT_COMMAND : std_logic_vector(2 downto 0) := "101";
  constant CCD_GOT_FIRST : std_logic_vector(2 downto 0) := "001";
  constant CCD_GOT_FOURTH : std_logic_vector(2 downto 0) := "100";
  constant CCD_GOT_SECOND : std_logic_vector(2 downto 0) := "010";
  constant CCD_GOT_THIRD : std_logic_vector(2 downto 0) := "011";
  constant CCD_IDLE : std_logic_vector(2 downto 0) := "000";
  constant CCU_DBG_BP_HIT : std_logic_vector(7 downto 0) := "00000010";
  constant CCU_DBG_CONNECT_RQST : std_logic_vector(7 downto 0) := "00000001";
  constant CCU_DBG_ERROR : std_logic_vector(7 downto 0) := "00000111";
  constant CCU_DBG_ERROR_MODE : std_logic_vector(7 downto 0) := "00000110";
  constant CCU_DBG_OK : std_logic_vector(7 downto 0) := "00001000";
  constant CCU_DBG_READ_RESPONSE : std_logic_vector(7 downto 0) := "00001001";
  constant CCU_DBG_READ_WP_HIT : std_logic_vector(7 downto 0) := "00000011";
  constant CCU_DBG_THREAD_FINISH : std_logic_vector(7 downto 0) := "00000101";
  constant CCU_DBG_WRITE_WP_HIT : std_logic_vector(7 downto 0) := "00000100";
  constant CCU_TEU_CLEAR_BP : std_logic_vector(2 downto 0) := "010";
  constant CCU_TEU_CLEAR_WP : std_logic_vector(2 downto 0) := "100";
  constant CCU_TEU_INTR : std_logic_vector(2 downto 0) := "101";
  constant CCU_TEU_SET_BP : std_logic_vector(2 downto 0) := "001";
  constant CCU_TEU_SET_WP : std_logic_vector(2 downto 0) := "011";
  constant CONTROL_TRANSFER_INSTR : std_logic_vector(2 downto 0) := "011";
  constant CP_DISABLED_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000000010000000000000";
  constant CP_DISABLED_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000001100";
  constant CP_EXCEPTION_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000010000000000000000000";
  constant CP_EXCEPTION_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000010010";
  constant CP_INSTR : std_logic_vector(2 downto 0) := "110";
  constant DATA_ACCESS_ERROR_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000100000000000000000000";
  constant DATA_ACCESS_ERROR_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000010011";
  constant DATA_ACCESS_EXCEPTION_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000001000000000000000000000";
  constant DATA_ACCESS_EXCEPTION_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000010100";
  constant DATA_STORE_ERROR_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000000000000000100000";
  constant DATA_STORE_ERROR_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000000101";
  constant DATA_TRANSFER_INSTR : std_logic_vector(2 downto 0) := "001";
  constant DEBUG_MODE_MASK : std_logic_vector(7 downto 0) := "00000010";
  constant DIVISION_BY_ZERO_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000100000000000000000000000";
  constant DIVISION_BY_ZERO_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000010110";
  constant EXCEPTION_FOUND : std_logic_vector(7 downto 0) := "00000010";
  constant FOUR_3 : std_logic_vector(2 downto 0) := "100";
  constant FP_DISABLED_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000000001000000000000";
  constant FP_DISABLED_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000001011";
  constant FP_EXCEPTION_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000001000000000000000000";
  constant FP_EXCEPTION_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000010001";
  constant FP_INSTR : std_logic_vector(2 downto 0) := "101";
  constant GDB_DBG_CONNECT : std_logic_vector(7 downto 0) := "00001110";
  constant GDB_DBG_CONTINUE : std_logic_vector(7 downto 0) := "00010000";
  constant GDB_DBG_DETACH : std_logic_vector(7 downto 0) := "00001111";
  constant GDB_DBG_KILL : std_logic_vector(7 downto 0) := "00010011";
  constant GDB_DBG_READ_CONTROL_REG : std_logic_vector(7 downto 0) := "00001101";
  constant GDB_DBG_READ_CPUNIT_REG : std_logic_vector(7 downto 0) := "00010001";
  constant GDB_DBG_READ_FPUNIT_REG : std_logic_vector(7 downto 0) := "00000011";
  constant GDB_DBG_READ_INIT_NPC : std_logic_vector(7 downto 0) := "00011101";
  constant GDB_DBG_READ_INIT_PC : std_logic_vector(7 downto 0) := "00011100";
  constant GDB_DBG_READ_INIT_PSR : std_logic_vector(7 downto 0) := "00011110";
  constant GDB_DBG_READ_IUNIT_REG : std_logic_vector(7 downto 0) := "00000001";
  constant GDB_DBG_READ_MEM : std_logic_vector(7 downto 0) := "00000110";
  constant GDB_DBG_READ_MODE : std_logic_vector(7 downto 0) := "00011111";
  constant GDB_DBG_REMOVE_BREAK_POINT : std_logic_vector(7 downto 0) := "00001001";
  constant GDB_DBG_REMOVE_WATCH_POINT : std_logic_vector(7 downto 0) := "00001011";
  constant GDB_DBG_SET_BREAK_POINT : std_logic_vector(7 downto 0) := "00001000";
  constant GDB_DBG_SET_WATCH_POINT : std_logic_vector(7 downto 0) := "00001010";
  constant GDB_DBG_WRITE_CONTROL_REG : std_logic_vector(7 downto 0) := "00010100";
  constant GDB_DBG_WRITE_CPUNIT_REG : std_logic_vector(7 downto 0) := "00010010";
  constant GDB_DBG_WRITE_FPUNIT_REG : std_logic_vector(7 downto 0) := "00000100";
  constant GDB_DBG_WRITE_INIT_NPC : std_logic_vector(7 downto 0) := "00011010";
  constant GDB_DBG_WRITE_INIT_PC : std_logic_vector(7 downto 0) := "00011001";
  constant GDB_DBG_WRITE_INIT_PSR : std_logic_vector(7 downto 0) := "00011011";
  constant GDB_DBG_WRITE_IUNIT_REG : std_logic_vector(7 downto 0) := "00000010";
  constant GDB_DBG_WRITE_MEM : std_logic_vector(7 downto 0) := "00000111";
  constant GDB_DBG_WRITE_RESET : std_logic_vector(7 downto 0) := "00011000";
  constant GET_NPC : std_logic_vector(1 downto 0) := "10";
  constant GET_PC : std_logic_vector(1 downto 0) := "01";
  constant GET_PSR : std_logic_vector(1 downto 0) := "11";
  constant HARDWARE_ERROR_TRAP_BIT_VEC : std_logic_vector(7 downto 0) := "00100000";
  constant HARDWARE_ERROR_TRAP_INDEX : std_logic_vector(7 downto 0) := "00000101";
  constant HARD_RESET_MASK : std_logic_vector(7 downto 0) := "00000001";
  constant IEEE_754_EXCEPTION_TRAP_BIT_VEC : std_logic_vector(7 downto 0) := "00000010";
  constant IEEE_754_EXCEPTION_TRAP_INDEX : std_logic_vector(7 downto 0) := "00000001";
  constant ILLEGAL_INSTR : std_logic_vector(2 downto 0) := "111";
  constant ILLEGAL_INSTRUCTION_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000000000010000000000";
  constant ILLEGAL_INSTRUCTION_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000001001";
  constant ILLEGAL_IU_INSTRUCTION_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000000000100000000000";
  constant ILLEGAL_IU_INSTRUCTION_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000001010";
  constant INIT_ASR_AND_WINDOW_REGS : std_logic_vector(2 downto 0) := "111";
  constant INSTRUCTION_ACCESS_ERROR_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000000000000010000000";
  constant INSTRUCTION_ACCESS_ERROR_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000000110";
  constant INSTRUCTION_ACCESS_EXCEPTION_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000000000000000010000";
  constant INSTRUCTION_ACCESS_EXCEPTION_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000000100";
  constant INTERRUPT_FOUND : std_logic_vector(7 downto 0) := "00000001";
  constant INVALID_FP_REGISTER_TRAP_BIT_VEC : std_logic_vector(7 downto 0) := "01000000";
  constant INVALID_FP_REGISTER_TRAP_INDEX : std_logic_vector(7 downto 0) := "00000110";
  constant KILL_STREAM_MASK : std_logic_vector(7 downto 0) := "10000000";
  constant KILL_THREAD_MASK : std_logic_vector(7 downto 0) := "10000000";
  constant LOGGER_ACTIVE_MASK : std_logic_vector(7 downto 0) := "00001000";
  constant MACHINE_ERROR : std_logic_vector(7 downto 0) := "00000011";
  constant MAE_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000000000000000000100";
  constant MAE_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000000010";
  constant MEM_ADDRESS_NOT_ALIGNED_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000100000000000000000";
  constant MEM_ADDRESS_NOT_ALIGNED_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000010000";
  constant MISC_INSTR : std_logic_vector(2 downto 0) := "100";
  constant MMU_PASS_THROUGH_HLIMIT : std_logic_vector(7 downto 0) := "00101111";
  constant MMU_PASS_THROUGH_LLIMIT : std_logic_vector(7 downto 0) := "00100000";
  constant MMU_READ_DWORD : std_logic_vector(7 downto 0) := "00000010";
  constant MMU_READ_LINE : std_logic_vector(7 downto 0) := "00000011";
  constant MMU_WRITE_DWORD : std_logic_vector(7 downto 0) := "00000001";
  constant MMU_WRITE_DWORD_AND_READ_LINE : std_logic_vector(7 downto 0) := "00000111";
  constant MMU_WRITE_DWORD_NO_RESPONSE : std_logic_vector(7 downto 0) := "00000101";
  constant MMU_WRITE_FSR : std_logic_vector(7 downto 0) := "00000100";
  constant NEW_STREAM_MASK : std_logic_vector(7 downto 0) := "10000000";
  constant NEW_THREAD_MASK : std_logic_vector(7 downto 0) := "10000000";
  constant NONE_TRAP_BIT_VEC : std_logic_vector(7 downto 0) := "00000001";
  constant NONE_TRAP_INDEX : std_logic_vector(7 downto 0) := "00000000";
  constant NOP_INSTRUCTION : std_logic_vector(31 downto 0) := "00000001000000000000000000000000";
  constant NO_BLOCK_READ : std_logic_vector(0 downto 0) := "0";
  constant NPC_RESET_VALUE : std_logic_vector(31 downto 0) := "00000000000000000000000000000100";
  constant NWINDOWS : std_logic_vector(31 downto 0) := "00000000000000000000000000001000";
  constant NWINDOWS_MOD_MASK_32 : std_logic_vector(31 downto 0) := "00000000000000000000000000000111";
  constant NWINDOWS_MOD_MASK_5 : std_logic_vector(4 downto 0) := "00111";
  constant NWINDOWSx16 : std_logic_vector(31 downto 0) := "00000000000000000000000010000000";
  constant NWINDOWSx16_MOD_MASK_32 : std_logic_vector(31 downto 0) := "00000000000000000000000001111111";
  constant NWINDOWSx2 : std_logic_vector(31 downto 0) := "00000000000000000000000000010000";
  constant ONE_1 : std_logic_vector(0 downto 0) := "1";
  constant ONE_10 : std_logic_vector(9 downto 0) := "0000000001";
  constant ONE_11 : std_logic_vector(10 downto 0) := "00000000001";
  constant ONE_12 : std_logic_vector(11 downto 0) := "000000000001";
  constant ONE_128 : std_logic_vector(127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
  constant ONE_13 : std_logic_vector(12 downto 0) := "0000000000001";
  constant ONE_14 : std_logic_vector(13 downto 0) := "00000000000001";
  constant ONE_16 : std_logic_vector(15 downto 0) := "0000000000000001";
  constant ONE_17 : std_logic_vector(16 downto 0) := "00000000000000001";
  constant ONE_18 : std_logic_vector(17 downto 0) := "000000000000000001";
  constant ONE_19 : std_logic_vector(18 downto 0) := "0000000000000000001";
  constant ONE_2 : std_logic_vector(1 downto 0) := "01";
  constant ONE_20 : std_logic_vector(19 downto 0) := "00000000000000000001";
  constant ONE_23 : std_logic_vector(22 downto 0) := "00000000000000000000001";
  constant ONE_24 : std_logic_vector(23 downto 0) := "000000000000000000000001";
  constant ONE_25 : std_logic_vector(24 downto 0) := "0000000000000000000000001";
  constant ONE_256 : std_logic_vector(255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
  constant ONE_29 : std_logic_vector(28 downto 0) := "00000000000000000000000000001";
  constant ONE_3 : std_logic_vector(2 downto 0) := "001";
  constant ONE_31 : std_logic_vector(30 downto 0) := "0000000000000000000000000000001";
  constant ONE_32 : std_logic_vector(31 downto 0) := "00000000000000000000000000000001";
  constant ONE_36 : std_logic_vector(35 downto 0) := "000000000000000000000000000000000001";
  constant ONE_4 : std_logic_vector(3 downto 0) := "0001";
  constant ONE_48 : std_logic_vector(47 downto 0) := "000000000000000000000000000000000000000000000001";
  constant ONE_5 : std_logic_vector(4 downto 0) := "00001";
  constant ONE_52 : std_logic_vector(51 downto 0) := "0000000000000000000000000000000000000000000000000001";
  constant ONE_6 : std_logic_vector(5 downto 0) := "000001";
  constant ONE_62 : std_logic_vector(61 downto 0) := "00000000000000000000000000000000000000000000000000000000000001";
  constant ONE_63 : std_logic_vector(62 downto 0) := "000000000000000000000000000000000000000000000000000000000000001";
  constant ONE_64 : std_logic_vector(63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
  constant ONE_7 : std_logic_vector(6 downto 0) := "0000001";
  constant ONE_8 : std_logic_vector(7 downto 0) := "00000001";
  constant ONE_9 : std_logic_vector(8 downto 0) := "000000001";
  constant PC_RESET_VALUE : std_logic_vector(31 downto 0) := "00000000000000000000000000000000";
  constant PRIVILEGED_INSTRUCTION_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000000000001000000000";
  constant PRIVILEGED_INSTRUCTION_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000001000";
  constant PROCESSOR_ERROR_MODE : std_logic_vector(1 downto 0) := "11";
  constant PROCESSOR_EXECUTE_MODE : std_logic_vector(1 downto 0) := "10";
  constant PROCESSOR_RESET_MODE : std_logic_vector(1 downto 0) := "01";
  constant PROCESSOR_UNDEFINED_MODE : std_logic_vector(1 downto 0) := "00";
  constant PSR_RESET_VALUE : std_logic_vector(31 downto 0) := "00000000000000000001000011000000";
  constant REQUEST_TYPE_BRIDGE_CONFIG_READ : std_logic_vector(3 downto 0) := "1001";
  constant REQUEST_TYPE_BRIDGE_CONFIG_WRITE : std_logic_vector(3 downto 0) := "1000";
  constant REQUEST_TYPE_CCU_CACHE_READ : std_logic_vector(3 downto 0) := "0101";
  constant REQUEST_TYPE_CCU_CACHE_WRITE : std_logic_vector(3 downto 0) := "0110";
  constant REQUEST_TYPE_IFETCH : std_logic_vector(3 downto 0) := "0000";
  constant REQUEST_TYPE_NOP : std_logic_vector(3 downto 0) := "0111";
  constant REQUEST_TYPE_READ : std_logic_vector(3 downto 0) := "0001";
  constant REQUEST_TYPE_STBAR : std_logic_vector(3 downto 0) := "0011";
  constant REQUEST_TYPE_WRFSRFAR : std_logic_vector(3 downto 0) := "0100";
  constant REQUEST_TYPE_WRITE : std_logic_vector(3 downto 0) := "0010";
  constant RESERVED_TRAP_BIT_VEC : std_logic_vector(7 downto 0) := "10000000";
  constant RESERVED_TRAP_INDEX : std_logic_vector(7 downto 0) := "00000111";
  constant RESET_TRAP_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000000000000000000010";
  constant RESET_TRAP_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000000001";
  constant R_REGISTER_ACCESS_ERROR_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000000000000100000000";
  constant R_REGISTER_ACCESS_ERROR_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000000111";
  constant SEQUENCE_ERROR_TRAP_BIT_VEC : std_logic_vector(7 downto 0) := "00010000";
  constant SEQUENCE_ERROR_TRAP_INDEX : std_logic_vector(7 downto 0) := "00000100";
  constant SINGLE_STEP_MASK : std_logic_vector(7 downto 0) := "00000100";
  constant SKIP_CMD : std_logic_vector(1 downto 0) := "00";
  constant TAG_OVERFLOW_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000010000000000000000000000";
  constant TAG_OVERFLOW_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000010101";
  constant TEU_ANNUL_NEXT_INDEX : std_logic_vector(7 downto 0) := "00000110";
  constant TEU_DBG_BREAK_POINT_INDEX : std_logic_vector(7 downto 0) := "00000011";
  constant TEU_DBG_WATCH_POINT_INDEX : std_logic_vector(7 downto 0) := "00000100";
  constant TEU_EXCEPTION_INDEX : std_logic_vector(7 downto 0) := "00000010";
  constant TEU_FETCH_IS_SPINNING : std_logic_vector(7 downto 0) := "00000111";
  constant TEU_INTERRUPT_INDEX : std_logic_vector(7 downto 0) := "00000001";
  constant TEU_MACHINE_ERROR_INDEX : std_logic_vector(7 downto 0) := "00000000";
  constant TEU_SINGLE_STEP_INDEX : std_logic_vector(7 downto 0) := "00000101";
  constant THREE_2 : std_logic_vector(1 downto 0) := "11";
  constant THREE_3 : std_logic_vector(2 downto 0) := "011";
  constant TRACE_ON : std_logic_vector(0 downto 0) := "1";
  constant TRAP_INSTRUCTION_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000001000000000000000000000000";
  constant TRAP_INSTRUCTION_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000010111";
  constant TRAP_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000000000000000000001";
  constant TRAP_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000000000";
  constant TT_MASK : std_logic_vector(31 downto 0) := "11111111111111111111000000001111";
  constant TWO_2 : std_logic_vector(1 downto 0) := "10";
  constant TWO_3 : std_logic_vector(2 downto 0) := "010";
  constant UNFINISHED_FPOP_TRAP_BIT_VEC : std_logic_vector(7 downto 0) := "00000100";
  constant UNFINISHED_FPOP_TRAP_INDEX : std_logic_vector(7 downto 0) := "00000010";
  constant UNIMPLEMENTED_FLUSH_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000000100000000000000";
  constant UNIMPLEMENTED_FLUSH_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000001101";
  constant UNIMPLEMENTED_FPOP_TRAP_BIT_VEC : std_logic_vector(7 downto 0) := "00001000";
  constant UNIMPLEMENTED_FPOP_TRAP_INDEX : std_logic_vector(7 downto 0) := "00000011";
  constant WIM_MASK : std_logic_vector(31 downto 0) := "00000000000000000000000011111111";
  constant WINDOW_OVERFLOW_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000001000000000000000";
  constant WINDOW_OVERFLOW_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000001110";
  constant WINDOW_UNDERFLOW_TRAP_BIT_VEC : std_logic_vector(31 downto 0) := "00000000000000010000000000000000";
  constant WINDOW_UNDERFLOW_TRAP_INDEX : std_logic_vector(31 downto 0) := "00000000000000000000000000001111";
  constant ZERO_1 : std_logic_vector(0 downto 0) := "0";
  constant ZERO_10 : std_logic_vector(9 downto 0) := "0000000000";
  constant ZERO_11 : std_logic_vector(10 downto 0) := "00000000000";
  constant ZERO_12 : std_logic_vector(11 downto 0) := "000000000000";
  constant ZERO_128 : std_logic_vector(127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
  constant ZERO_13 : std_logic_vector(12 downto 0) := "0000000000000";
  constant ZERO_14 : std_logic_vector(13 downto 0) := "00000000000000";
  constant ZERO_16 : std_logic_vector(15 downto 0) := "0000000000000000";
  constant ZERO_17 : std_logic_vector(16 downto 0) := "00000000000000000";
  constant ZERO_18 : std_logic_vector(17 downto 0) := "000000000000000000";
  constant ZERO_19 : std_logic_vector(18 downto 0) := "0000000000000000000";
  constant ZERO_2 : std_logic_vector(1 downto 0) := "00";
  constant ZERO_20 : std_logic_vector(19 downto 0) := "00000000000000000000";
  constant ZERO_23 : std_logic_vector(22 downto 0) := "00000000000000000000000";
  constant ZERO_24 : std_logic_vector(23 downto 0) := "000000000000000000000000";
  constant ZERO_25 : std_logic_vector(24 downto 0) := "0000000000000000000000000";
  constant ZERO_256 : std_logic_vector(255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
  constant ZERO_29 : std_logic_vector(28 downto 0) := "00000000000000000000000000000";
  constant ZERO_3 : std_logic_vector(2 downto 0) := "000";
  constant ZERO_31 : std_logic_vector(30 downto 0) := "0000000000000000000000000000000";
  constant ZERO_32 : std_logic_vector(31 downto 0) := "00000000000000000000000000000000";
  constant ZERO_36 : std_logic_vector(35 downto 0) := "000000000000000000000000000000000000";
  constant ZERO_4 : std_logic_vector(3 downto 0) := "0000";
  constant ZERO_48 : std_logic_vector(47 downto 0) := "000000000000000000000000000000000000000000000000";
  constant ZERO_5 : std_logic_vector(4 downto 0) := "00000";
  constant ZERO_52 : std_logic_vector(51 downto 0) := "0000000000000000000000000000000000000000000000000000";
  constant ZERO_6 : std_logic_vector(5 downto 0) := "000000";
  constant ZERO_62 : std_logic_vector(61 downto 0) := "00000000000000000000000000000000000000000000000000000000000000";
  constant ZERO_63 : std_logic_vector(62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
  constant ZERO_64 : std_logic_vector(63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
  constant ZERO_7 : std_logic_vector(6 downto 0) := "0000000";
  constant ZERO_8 : std_logic_vector(7 downto 0) := "00000000";
  constant ZERO_9 : std_logic_vector(8 downto 0) := "000000000";
  constant default_mem_pool_base_address : std_logic_vector(0 downto 0) := "0";
  constant tt_21 : std_logic_vector(7 downto 0) := "00000000";
  component ccu is -- 
    port (-- 
      clk : in std_logic;
      reset : in std_logic;
      AJIT_to_ENV_processor_mode_pipe_read_data: out std_logic_vector(7 downto 0);
      AJIT_to_ENV_processor_mode_pipe_read_req : in std_logic_vector(0 downto 0);
      AJIT_to_ENV_processor_mode_pipe_read_ack : out std_logic_vector(0 downto 0);
      BROADCAST_INIT_PC: out std_logic_vector(31 downto 0);
      DCACHE_to_CPU_reset_ack_pipe_write_data: in std_logic_vector(0 downto 0);
      DCACHE_to_CPU_reset_ack_pipe_write_req : in std_logic_vector(0 downto 0);
      DCACHE_to_CPU_reset_ack_pipe_write_ack : out std_logic_vector(0 downto 0);
      ENV_to_AJIT_reset: in std_logic_vector(7 downto 0);
      ICACHE_to_CPU_reset_ack_pipe_write_data: in std_logic_vector(0 downto 0);
      ICACHE_to_CPU_reset_ack_pipe_write_req : in std_logic_vector(0 downto 0);
      ICACHE_to_CPU_reset_ack_pipe_write_ack : out std_logic_vector(0 downto 0);
      MMU_to_CPU_reset_ack_pipe_write_data: in std_logic_vector(0 downto 0);
      MMU_to_CPU_reset_ack_pipe_write_req : in std_logic_vector(0 downto 0);
      MMU_to_CPU_reset_ack_pipe_write_ack : out std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_DCACHE_reset_pipe_read_data: out std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_DCACHE_reset_pipe_read_req : in std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_DCACHE_reset_pipe_read_ack : out std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_ICACHE_reset_pipe_read_data: out std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_ICACHE_reset_pipe_read_req : in std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_ICACHE_reset_pipe_read_ack : out std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_MMU_reset_pipe_read_data: out std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_MMU_reset_pipe_read_req : in std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_MMU_reset_pipe_read_ack : out std_logic_vector(0 downto 0);
      ccu_to_debug_interface_pipe_read_data: out std_logic_vector(32 downto 0);
      ccu_to_debug_interface_pipe_read_req : in std_logic_vector(0 downto 0);
      ccu_to_debug_interface_pipe_read_ack : out std_logic_vector(0 downto 0);
      ccu_to_teu_pipe_read_data: out std_logic_vector(106 downto 0);
      ccu_to_teu_pipe_read_req : in std_logic_vector(0 downto 0);
      ccu_to_teu_pipe_read_ack : out std_logic_vector(0 downto 0);
      ccu_to_teu_debug_command_pipe_read_data: out std_logic_vector(7 downto 0);
      ccu_to_teu_debug_command_pipe_read_req : in std_logic_vector(0 downto 0);
      ccu_to_teu_debug_command_pipe_read_ack : out std_logic_vector(0 downto 0);
      ccu_to_teu_fpunit_register_access_command_pipe_read_data: out std_logic_vector(39 downto 0);
      ccu_to_teu_fpunit_register_access_command_pipe_read_req : in std_logic_vector(0 downto 0);
      ccu_to_teu_fpunit_register_access_command_pipe_read_ack : out std_logic_vector(0 downto 0);
      ccu_to_teu_iunit_register_access_command_pipe_read_data: out std_logic_vector(41 downto 0);
      ccu_to_teu_iunit_register_access_command_pipe_read_req : in std_logic_vector(0 downto 0);
      ccu_to_teu_iunit_register_access_command_pipe_read_ack : out std_logic_vector(0 downto 0);
      ccu_to_teu_load_store_command_pipe_read_data: out std_logic_vector(72 downto 0);
      ccu_to_teu_load_store_command_pipe_read_req : in std_logic_vector(0 downto 0);
      ccu_to_teu_load_store_command_pipe_read_ack : out std_logic_vector(0 downto 0);
      debug_interface_to_ccu_pipe_write_data: in std_logic_vector(32 downto 0);
      debug_interface_to_ccu_pipe_write_req : in std_logic_vector(0 downto 0);
      debug_interface_to_ccu_pipe_write_ack : out std_logic_vector(0 downto 0);
      teu_debug_to_ccu_response_pipe_write_data: in std_logic_vector(0 downto 0);
      teu_debug_to_ccu_response_pipe_write_req : in std_logic_vector(0 downto 0);
      teu_debug_to_ccu_response_pipe_write_ack : out std_logic_vector(0 downto 0);
      teu_to_ccu_pipe_write_data: in std_logic_vector(225 downto 0);
      teu_to_ccu_pipe_write_req : in std_logic_vector(0 downto 0);
      teu_to_ccu_pipe_write_ack : out std_logic_vector(0 downto 0);
      teu_to_ccu_fpunit_register_access_response_pipe_write_data: in std_logic_vector(32 downto 0);
      teu_to_ccu_fpunit_register_access_response_pipe_write_req : in std_logic_vector(0 downto 0);
      teu_to_ccu_fpunit_register_access_response_pipe_write_ack : out std_logic_vector(0 downto 0);
      teu_to_ccu_iunit_register_access_response_pipe_write_data: in std_logic_vector(31 downto 0);
      teu_to_ccu_iunit_register_access_response_pipe_write_req : in std_logic_vector(0 downto 0);
      teu_to_ccu_iunit_register_access_response_pipe_write_ack : out std_logic_vector(0 downto 0);
      teu_to_ccu_load_store_response_pipe_write_data: in std_logic_vector(32 downto 0);
      teu_to_ccu_load_store_response_pipe_write_req : in std_logic_vector(0 downto 0);
      teu_to_ccu_load_store_response_pipe_write_ack : out std_logic_vector(0 downto 0)); -- 
    -- 
  end component;
  -- 
end package ccu_global_package;
-- VHDL produced by vc2vhdl from virtual circuit (vc) description 
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity access_ccu_to_teu_debug is -- 
  generic (tag_length : integer); 
  port ( -- 
    command : in  std_logic_vector(39 downto 0);
    response : out  std_logic_vector(0 downto 0);
    teu_debug_to_ccu_response_pipe_read_req : out  std_logic_vector(0 downto 0);
    teu_debug_to_ccu_response_pipe_read_ack : in   std_logic_vector(0 downto 0);
    teu_debug_to_ccu_response_pipe_read_data : in   std_logic_vector(0 downto 0);
    ccu_to_teu_debug_command_pipe_write_req : out  std_logic_vector(0 downto 0);
    ccu_to_teu_debug_command_pipe_write_ack : in   std_logic_vector(0 downto 0);
    ccu_to_teu_debug_command_pipe_write_data : out  std_logic_vector(7 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity access_ccu_to_teu_debug;
architecture access_ccu_to_teu_debug_arch of access_ccu_to_teu_debug is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 40)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 1)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal command_buffer :  std_logic_vector(39 downto 0);
  signal command_update_enable: Boolean;
  -- output port buffer signals
  signal response_buffer :  std_logic_vector(0 downto 0);
  signal response_update_enable: Boolean;
  signal access_ccu_to_teu_debug_CP_0_start: Boolean;
  signal access_ccu_to_teu_debug_CP_0_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal do_while_stmt_1042_branch_req_0 : boolean;
  signal phi_stmt_1044_req_0 : boolean;
  signal phi_stmt_1044_req_1 : boolean;
  signal phi_stmt_1044_ack_0 : boolean;
  signal nI_1054_1046_buf_req_0 : boolean;
  signal nI_1054_1046_buf_ack_0 : boolean;
  signal nI_1054_1046_buf_req_1 : boolean;
  signal nI_1054_1046_buf_ack_1 : boolean;
  signal OR_u8_u8_1089_inst_req_0 : boolean;
  signal OR_u8_u8_1089_inst_ack_0 : boolean;
  signal OR_u8_u8_1089_inst_req_1 : boolean;
  signal OR_u8_u8_1089_inst_ack_1 : boolean;
  signal WPIPE_ccu_to_teu_debug_command_1055_inst_req_0 : boolean;
  signal WPIPE_ccu_to_teu_debug_command_1055_inst_ack_0 : boolean;
  signal WPIPE_ccu_to_teu_debug_command_1055_inst_req_1 : boolean;
  signal WPIPE_ccu_to_teu_debug_command_1055_inst_ack_1 : boolean;
  signal do_while_stmt_1042_branch_ack_0 : boolean;
  signal do_while_stmt_1042_branch_ack_1 : boolean;
  signal RPIPE_teu_debug_to_ccu_response_1103_inst_req_0 : boolean;
  signal RPIPE_teu_debug_to_ccu_response_1103_inst_ack_0 : boolean;
  signal RPIPE_teu_debug_to_ccu_response_1103_inst_req_1 : boolean;
  signal RPIPE_teu_debug_to_ccu_response_1103_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "access_ccu_to_teu_debug_input_buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      data_width => tag_length + 40) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(39 downto 0) <= command;
  command_buffer <= in_buffer_data_out(39 downto 0);
  in_buffer_data_in(tag_length + 39 downto 40) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 39 downto 40);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  access_ccu_to_teu_debug_CP_0_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "access_ccu_to_teu_debug_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 1) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(0 downto 0) <= response_buffer;
  response <= out_buffer_data_out(0 downto 0);
  out_buffer_data_in(tag_length + 0 downto 1) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 0 downto 1);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= access_ccu_to_teu_debug_CP_0_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= access_ccu_to_teu_debug_CP_0_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= access_ccu_to_teu_debug_CP_0_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  access_ccu_to_teu_debug_CP_0: Block -- control-path 
    signal access_ccu_to_teu_debug_CP_0_elements: BooleanArray(42 downto 0);
    -- 
  begin -- 
    access_ccu_to_teu_debug_CP_0_elements(0) <= access_ccu_to_teu_debug_CP_0_start;
    access_ccu_to_teu_debug_CP_0_symbol <= access_ccu_to_teu_debug_CP_0_elements(42);
    -- CP-element group 0:  transition  place  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	2 
    -- CP-element group 0:  members (6) 
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_1017_to_assign_stmt_1037/$entry
      -- CP-element group 0: 	 assign_stmt_1017_to_assign_stmt_1037/$exit
      -- CP-element group 0: 	 branch_block_stmt_1041/$entry
      -- CP-element group 0: 	 branch_block_stmt_1041/branch_block_stmt_1041__entry__
      -- CP-element group 0: 	 branch_block_stmt_1041/do_while_stmt_1042__entry__
      -- 
    -- CP-element group 1:  transition  place  output  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	40 
    -- CP-element group 1: successors 
    -- CP-element group 1: 	41 
    -- CP-element group 1:  members (7) 
      -- CP-element group 1: 	 branch_block_stmt_1041/$exit
      -- CP-element group 1: 	 branch_block_stmt_1041/branch_block_stmt_1041__exit__
      -- CP-element group 1: 	 branch_block_stmt_1041/do_while_stmt_1042__exit__
      -- CP-element group 1: 	 assign_stmt_1104/$entry
      -- CP-element group 1: 	 assign_stmt_1104/RPIPE_teu_debug_to_ccu_response_1103_sample_start_
      -- CP-element group 1: 	 assign_stmt_1104/RPIPE_teu_debug_to_ccu_response_1103_Sample/$entry
      -- CP-element group 1: 	 assign_stmt_1104/RPIPE_teu_debug_to_ccu_response_1103_Sample/rr
      -- 
    rr_126_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_126_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_ccu_to_teu_debug_CP_0_elements(1), ack => RPIPE_teu_debug_to_ccu_response_1103_inst_req_0); -- 
    access_ccu_to_teu_debug_CP_0_elements(1) <= access_ccu_to_teu_debug_CP_0_elements(40);
    -- CP-element group 2:  transition  place  bypass  pipeline-parent 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	8 
    -- CP-element group 2:  members (2) 
      -- CP-element group 2: 	 branch_block_stmt_1041/do_while_stmt_1042/$entry
      -- CP-element group 2: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042__entry__
      -- 
    access_ccu_to_teu_debug_CP_0_elements(2) <= access_ccu_to_teu_debug_CP_0_elements(0);
    -- CP-element group 3:  merge  place  bypass  pipeline-parent 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	40 
    -- CP-element group 3:  members (1) 
      -- CP-element group 3: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042__exit__
      -- 
    -- Element group access_ccu_to_teu_debug_CP_0_elements(3) is bound as output of CP function.
    -- CP-element group 4:  merge  place  bypass  pipeline-parent 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	7 
    -- CP-element group 4:  members (1) 
      -- CP-element group 4: 	 branch_block_stmt_1041/do_while_stmt_1042/loop_back
      -- 
    -- Element group access_ccu_to_teu_debug_CP_0_elements(4) is bound as output of CP function.
    -- CP-element group 5:  branch  transition  place  bypass  pipeline-parent 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	10 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	39 
    -- CP-element group 5: 	38 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 branch_block_stmt_1041/do_while_stmt_1042/condition_done
      -- CP-element group 5: 	 branch_block_stmt_1041/do_while_stmt_1042/loop_exit/$entry
      -- CP-element group 5: 	 branch_block_stmt_1041/do_while_stmt_1042/loop_taken/$entry
      -- 
    access_ccu_to_teu_debug_CP_0_elements(5) <= access_ccu_to_teu_debug_CP_0_elements(10);
    -- CP-element group 6:  branch  place  bypass  pipeline-parent 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	37 
    -- CP-element group 6: successors 
    -- CP-element group 6:  members (1) 
      -- CP-element group 6: 	 branch_block_stmt_1041/do_while_stmt_1042/loop_body_done
      -- 
    access_ccu_to_teu_debug_CP_0_elements(6) <= access_ccu_to_teu_debug_CP_0_elements(37);
    -- CP-element group 7:  transition  bypass  pipeline-parent 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	4 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	17 
    -- CP-element group 7:  members (1) 
      -- CP-element group 7: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/back_edge_to_loop_body
      -- 
    access_ccu_to_teu_debug_CP_0_elements(7) <= access_ccu_to_teu_debug_CP_0_elements(4);
    -- CP-element group 8:  transition  bypass  pipeline-parent 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	2 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	19 
    -- CP-element group 8:  members (1) 
      -- CP-element group 8: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/first_time_through_loop_body
      -- 
    access_ccu_to_teu_debug_CP_0_elements(8) <= access_ccu_to_teu_debug_CP_0_elements(2);
    -- CP-element group 9:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	36 
    -- CP-element group 9: 	13 
    -- CP-element group 9: 	14 
    -- CP-element group 9:  members (2) 
      -- CP-element group 9: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/$entry
      -- CP-element group 9: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/loop_body_start
      -- 
    -- Element group access_ccu_to_teu_debug_CP_0_elements(9) is bound as output of CP function.
    -- CP-element group 10:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	16 
    -- CP-element group 10: 	36 
    -- CP-element group 10: 	12 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	5 
    -- CP-element group 10:  members (1) 
      -- CP-element group 10: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/condition_evaluated
      -- 
    condition_evaluated_27_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " condition_evaluated_27_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_ccu_to_teu_debug_CP_0_elements(10), ack => do_while_stmt_1042_branch_req_0); -- 
    access_ccu_to_teu_debug_cp_element_group_10: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 0);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 43) := "access_ccu_to_teu_debug_cp_element_group_10"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= access_ccu_to_teu_debug_CP_0_elements(16) & access_ccu_to_teu_debug_CP_0_elements(36) & access_ccu_to_teu_debug_CP_0_elements(12);
      gj_access_ccu_to_teu_debug_cp_element_group_10 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_ccu_to_teu_debug_CP_0_elements(10), clk => clk, reset => reset); --
    end block;
    -- CP-element group 11:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	13 
    -- CP-element group 11: marked-predecessors 
    -- CP-element group 11: 	16 
    -- CP-element group 11: successors 
    -- CP-element group 11:  members (2) 
      -- CP-element group 11: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/aggregated_phi_sample_req
      -- CP-element group 11: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/phi_stmt_1044_sample_start__ps
      -- 
    access_ccu_to_teu_debug_cp_element_group_11: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 43) := "access_ccu_to_teu_debug_cp_element_group_11"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_ccu_to_teu_debug_CP_0_elements(13) & access_ccu_to_teu_debug_CP_0_elements(16);
      gj_access_ccu_to_teu_debug_cp_element_group_11 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_ccu_to_teu_debug_CP_0_elements(11), clk => clk, reset => reset); --
    end block;
    -- CP-element group 12:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	15 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	10 
    -- CP-element group 12:  members (1) 
      -- CP-element group 12: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/aggregated_phi_sample_ack_d
      -- 
    -- Element group access_ccu_to_teu_debug_CP_0_elements(12) is a control-delay.
    cp_element_12_delay: control_delay_element  generic map(name => " 12_delay", delay_value => 1)  port map(req => access_ccu_to_teu_debug_CP_0_elements(15), ack => access_ccu_to_teu_debug_CP_0_elements(12), clk => clk, reset =>reset);
    -- CP-element group 13:  join  transition  bypass  pipeline-parent 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	9 
    -- CP-element group 13: marked-predecessors 
    -- CP-element group 13: 	15 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	11 
    -- CP-element group 13:  members (1) 
      -- CP-element group 13: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/phi_stmt_1044_sample_start_
      -- 
    access_ccu_to_teu_debug_cp_element_group_13: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 43) := "access_ccu_to_teu_debug_cp_element_group_13"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_ccu_to_teu_debug_CP_0_elements(9) & access_ccu_to_teu_debug_CP_0_elements(15);
      gj_access_ccu_to_teu_debug_cp_element_group_13 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_ccu_to_teu_debug_CP_0_elements(13), clk => clk, reset => reset); --
    end block;
    -- CP-element group 14:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	9 
    -- CP-element group 14: marked-predecessors 
    -- CP-element group 14: 	31 
    -- CP-element group 14: successors 
    -- CP-element group 14:  members (3) 
      -- CP-element group 14: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/aggregated_phi_update_req
      -- CP-element group 14: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/phi_stmt_1044_update_start_
      -- CP-element group 14: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/phi_stmt_1044_update_start__ps
      -- 
    access_ccu_to_teu_debug_cp_element_group_14: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 43) := "access_ccu_to_teu_debug_cp_element_group_14"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_ccu_to_teu_debug_CP_0_elements(9) & access_ccu_to_teu_debug_CP_0_elements(31);
      gj_access_ccu_to_teu_debug_cp_element_group_14 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_ccu_to_teu_debug_CP_0_elements(14), clk => clk, reset => reset); --
    end block;
    -- CP-element group 15:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: successors 
    -- CP-element group 15: 	37 
    -- CP-element group 15: 	12 
    -- CP-element group 15: marked-successors 
    -- CP-element group 15: 	13 
    -- CP-element group 15:  members (3) 
      -- CP-element group 15: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/aggregated_phi_sample_ack
      -- CP-element group 15: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/phi_stmt_1044_sample_completed_
      -- CP-element group 15: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/phi_stmt_1044_sample_completed__ps
      -- 
    -- Element group access_ccu_to_teu_debug_CP_0_elements(15) is bound as output of CP function.
    -- CP-element group 16:  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	10 
    -- CP-element group 16: 	31 
    -- CP-element group 16: marked-successors 
    -- CP-element group 16: 	11 
    -- CP-element group 16:  members (6) 
      -- CP-element group 16: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/aggregated_phi_update_ack
      -- CP-element group 16: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/phi_stmt_1044_update_completed_
      -- CP-element group 16: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/phi_stmt_1044_update_completed__ps
      -- CP-element group 16: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/OR_u8_u8_1089_sample_start_
      -- CP-element group 16: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/OR_u8_u8_1089_Sample/$entry
      -- CP-element group 16: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/OR_u8_u8_1089_Sample/rr
      -- 
    rr_85_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_85_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_ccu_to_teu_debug_CP_0_elements(16), ack => OR_u8_u8_1089_inst_req_0); -- 
    -- Element group access_ccu_to_teu_debug_CP_0_elements(16) is bound as output of CP function.
    -- CP-element group 17:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	7 
    -- CP-element group 17: successors 
    -- CP-element group 17:  members (1) 
      -- CP-element group 17: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/phi_stmt_1044_loopback_trigger
      -- 
    access_ccu_to_teu_debug_CP_0_elements(17) <= access_ccu_to_teu_debug_CP_0_elements(7);
    -- CP-element group 18:  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: successors 
    -- CP-element group 18:  members (2) 
      -- CP-element group 18: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/phi_stmt_1044_loopback_sample_req
      -- CP-element group 18: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/phi_stmt_1044_loopback_sample_req_ps
      -- 
    phi_stmt_1044_loopback_sample_req_43_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1044_loopback_sample_req_43_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_ccu_to_teu_debug_CP_0_elements(18), ack => phi_stmt_1044_req_0); -- 
    -- Element group access_ccu_to_teu_debug_CP_0_elements(18) is bound as output of CP function.
    -- CP-element group 19:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	8 
    -- CP-element group 19: successors 
    -- CP-element group 19:  members (1) 
      -- CP-element group 19: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/phi_stmt_1044_entry_trigger
      -- 
    access_ccu_to_teu_debug_CP_0_elements(19) <= access_ccu_to_teu_debug_CP_0_elements(8);
    -- CP-element group 20:  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: successors 
    -- CP-element group 20:  members (2) 
      -- CP-element group 20: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/phi_stmt_1044_entry_sample_req
      -- CP-element group 20: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/phi_stmt_1044_entry_sample_req_ps
      -- 
    phi_stmt_1044_entry_sample_req_46_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1044_entry_sample_req_46_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_ccu_to_teu_debug_CP_0_elements(20), ack => phi_stmt_1044_req_1); -- 
    -- Element group access_ccu_to_teu_debug_CP_0_elements(20) is bound as output of CP function.
    -- CP-element group 21:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: successors 
    -- CP-element group 21:  members (2) 
      -- CP-element group 21: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/phi_stmt_1044_phi_mux_ack
      -- CP-element group 21: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/phi_stmt_1044_phi_mux_ack_ps
      -- 
    phi_stmt_1044_phi_mux_ack_49_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 21_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_1044_ack_0, ack => access_ccu_to_teu_debug_CP_0_elements(21)); -- 
    -- CP-element group 22:  join  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: successors 
    -- CP-element group 22: 	24 
    -- CP-element group 22:  members (4) 
      -- CP-element group 22: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/R_nI_1046_sample_start__ps
      -- CP-element group 22: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/R_nI_1046_sample_start_
      -- CP-element group 22: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/R_nI_1046_Sample/$entry
      -- CP-element group 22: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/R_nI_1046_Sample/req
      -- 
    req_62_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_62_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_ccu_to_teu_debug_CP_0_elements(22), ack => nI_1054_1046_buf_req_0); -- 
    -- Element group access_ccu_to_teu_debug_CP_0_elements(22) is bound as output of CP function.
    -- CP-element group 23:  join  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: successors 
    -- CP-element group 23: 	25 
    -- CP-element group 23:  members (4) 
      -- CP-element group 23: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/R_nI_1046_update_start__ps
      -- CP-element group 23: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/R_nI_1046_update_start_
      -- CP-element group 23: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/R_nI_1046_Update/$entry
      -- CP-element group 23: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/R_nI_1046_Update/req
      -- 
    req_67_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_67_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_ccu_to_teu_debug_CP_0_elements(23), ack => nI_1054_1046_buf_req_1); -- 
    -- Element group access_ccu_to_teu_debug_CP_0_elements(23) is bound as output of CP function.
    -- CP-element group 24:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: 	22 
    -- CP-element group 24: successors 
    -- CP-element group 24:  members (4) 
      -- CP-element group 24: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/R_nI_1046_sample_completed__ps
      -- CP-element group 24: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/R_nI_1046_sample_completed_
      -- CP-element group 24: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/R_nI_1046_Sample/$exit
      -- CP-element group 24: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/R_nI_1046_Sample/ack
      -- 
    ack_63_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 24_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nI_1054_1046_buf_ack_0, ack => access_ccu_to_teu_debug_CP_0_elements(24)); -- 
    -- CP-element group 25:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: 	23 
    -- CP-element group 25: successors 
    -- CP-element group 25:  members (4) 
      -- CP-element group 25: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/R_nI_1046_update_completed__ps
      -- CP-element group 25: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/R_nI_1046_update_completed_
      -- CP-element group 25: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/R_nI_1046_Update/$exit
      -- CP-element group 25: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/R_nI_1046_Update/ack
      -- 
    ack_68_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 25_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nI_1054_1046_buf_ack_1, ack => access_ccu_to_teu_debug_CP_0_elements(25)); -- 
    -- CP-element group 26:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: successors 
    -- CP-element group 26:  members (4) 
      -- CP-element group 26: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/type_cast_1048_sample_start__ps
      -- CP-element group 26: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/type_cast_1048_sample_completed__ps
      -- CP-element group 26: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/type_cast_1048_sample_start_
      -- CP-element group 26: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/type_cast_1048_sample_completed_
      -- 
    -- Element group access_ccu_to_teu_debug_CP_0_elements(26) is bound as output of CP function.
    -- CP-element group 27:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: successors 
    -- CP-element group 27: 	29 
    -- CP-element group 27:  members (2) 
      -- CP-element group 27: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/type_cast_1048_update_start__ps
      -- CP-element group 27: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/type_cast_1048_update_start_
      -- 
    -- Element group access_ccu_to_teu_debug_CP_0_elements(27) is bound as output of CP function.
    -- CP-element group 28:  join  transition  bypass  pipeline-parent 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: 	29 
    -- CP-element group 28: successors 
    -- CP-element group 28:  members (1) 
      -- CP-element group 28: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/type_cast_1048_update_completed__ps
      -- 
    access_ccu_to_teu_debug_CP_0_elements(28) <= access_ccu_to_teu_debug_CP_0_elements(29);
    -- CP-element group 29:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: 	27 
    -- CP-element group 29: successors 
    -- CP-element group 29: 	28 
    -- CP-element group 29:  members (1) 
      -- CP-element group 29: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/type_cast_1048_update_completed_
      -- 
    -- Element group access_ccu_to_teu_debug_CP_0_elements(29) is a control-delay.
    cp_element_29_delay: control_delay_element  generic map(name => " 29_delay", delay_value => 1)  port map(req => access_ccu_to_teu_debug_CP_0_elements(27), ack => access_ccu_to_teu_debug_CP_0_elements(29), clk => clk, reset =>reset);
    -- CP-element group 30:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: marked-predecessors 
    -- CP-element group 30: 	34 
    -- CP-element group 30: successors 
    -- CP-element group 30: 	32 
    -- CP-element group 30:  members (3) 
      -- CP-element group 30: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/OR_u8_u8_1089_update_start_
      -- CP-element group 30: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/OR_u8_u8_1089_Update/$entry
      -- CP-element group 30: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/OR_u8_u8_1089_Update/cr
      -- 
    cr_90_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_90_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_ccu_to_teu_debug_CP_0_elements(30), ack => OR_u8_u8_1089_inst_req_1); -- 
    access_ccu_to_teu_debug_cp_element_group_30: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 43) := "access_ccu_to_teu_debug_cp_element_group_30"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= access_ccu_to_teu_debug_CP_0_elements(34);
      gj_access_ccu_to_teu_debug_cp_element_group_30 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_ccu_to_teu_debug_CP_0_elements(30), clk => clk, reset => reset); --
    end block;
    -- CP-element group 31:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: 	16 
    -- CP-element group 31: successors 
    -- CP-element group 31: marked-successors 
    -- CP-element group 31: 	14 
    -- CP-element group 31:  members (3) 
      -- CP-element group 31: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/OR_u8_u8_1089_sample_completed_
      -- CP-element group 31: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/OR_u8_u8_1089_Sample/$exit
      -- CP-element group 31: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/OR_u8_u8_1089_Sample/ra
      -- 
    ra_86_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 31_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => OR_u8_u8_1089_inst_ack_0, ack => access_ccu_to_teu_debug_CP_0_elements(31)); -- 
    -- CP-element group 32:  transition  input  bypass  pipeline-parent 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	30 
    -- CP-element group 32: successors 
    -- CP-element group 32: 	33 
    -- CP-element group 32:  members (3) 
      -- CP-element group 32: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/OR_u8_u8_1089_update_completed_
      -- CP-element group 32: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/OR_u8_u8_1089_Update/$exit
      -- CP-element group 32: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/OR_u8_u8_1089_Update/ca
      -- 
    ca_91_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 32_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => OR_u8_u8_1089_inst_ack_1, ack => access_ccu_to_teu_debug_CP_0_elements(32)); -- 
    -- CP-element group 33:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: 	32 
    -- CP-element group 33: marked-predecessors 
    -- CP-element group 33: 	35 
    -- CP-element group 33: successors 
    -- CP-element group 33: 	34 
    -- CP-element group 33:  members (3) 
      -- CP-element group 33: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/WPIPE_ccu_to_teu_debug_command_1055_sample_start_
      -- CP-element group 33: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/WPIPE_ccu_to_teu_debug_command_1055_Sample/$entry
      -- CP-element group 33: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/WPIPE_ccu_to_teu_debug_command_1055_Sample/req
      -- 
    req_99_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_99_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_ccu_to_teu_debug_CP_0_elements(33), ack => WPIPE_ccu_to_teu_debug_command_1055_inst_req_0); -- 
    access_ccu_to_teu_debug_cp_element_group_33: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 43) := "access_ccu_to_teu_debug_cp_element_group_33"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_ccu_to_teu_debug_CP_0_elements(32) & access_ccu_to_teu_debug_CP_0_elements(35);
      gj_access_ccu_to_teu_debug_cp_element_group_33 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_ccu_to_teu_debug_CP_0_elements(33), clk => clk, reset => reset); --
    end block;
    -- CP-element group 34:  fork  transition  input  output  bypass  pipeline-parent 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: 	33 
    -- CP-element group 34: successors 
    -- CP-element group 34: 	35 
    -- CP-element group 34: marked-successors 
    -- CP-element group 34: 	30 
    -- CP-element group 34:  members (6) 
      -- CP-element group 34: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/WPIPE_ccu_to_teu_debug_command_1055_sample_completed_
      -- CP-element group 34: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/WPIPE_ccu_to_teu_debug_command_1055_update_start_
      -- CP-element group 34: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/WPIPE_ccu_to_teu_debug_command_1055_Sample/$exit
      -- CP-element group 34: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/WPIPE_ccu_to_teu_debug_command_1055_Sample/ack
      -- CP-element group 34: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/WPIPE_ccu_to_teu_debug_command_1055_Update/$entry
      -- CP-element group 34: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/WPIPE_ccu_to_teu_debug_command_1055_Update/req
      -- 
    ack_100_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 34_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_teu_debug_command_1055_inst_ack_0, ack => access_ccu_to_teu_debug_CP_0_elements(34)); -- 
    req_104_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_104_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_ccu_to_teu_debug_CP_0_elements(34), ack => WPIPE_ccu_to_teu_debug_command_1055_inst_req_1); -- 
    -- CP-element group 35:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: 	34 
    -- CP-element group 35: successors 
    -- CP-element group 35: 	37 
    -- CP-element group 35: marked-successors 
    -- CP-element group 35: 	33 
    -- CP-element group 35:  members (3) 
      -- CP-element group 35: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/WPIPE_ccu_to_teu_debug_command_1055_update_completed_
      -- CP-element group 35: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/WPIPE_ccu_to_teu_debug_command_1055_Update/$exit
      -- CP-element group 35: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/WPIPE_ccu_to_teu_debug_command_1055_Update/ack
      -- 
    ack_105_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 35_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_teu_debug_command_1055_inst_ack_1, ack => access_ccu_to_teu_debug_CP_0_elements(35)); -- 
    -- CP-element group 36:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: 	9 
    -- CP-element group 36: successors 
    -- CP-element group 36: 	10 
    -- CP-element group 36:  members (1) 
      -- CP-element group 36: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/loop_body_delay_to_condition_start
      -- 
    -- Element group access_ccu_to_teu_debug_CP_0_elements(36) is a control-delay.
    cp_element_36_delay: control_delay_element  generic map(name => " 36_delay", delay_value => 1)  port map(req => access_ccu_to_teu_debug_CP_0_elements(9), ack => access_ccu_to_teu_debug_CP_0_elements(36), clk => clk, reset =>reset);
    -- CP-element group 37:  join  transition  bypass  pipeline-parent 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: 	35 
    -- CP-element group 37: 	15 
    -- CP-element group 37: successors 
    -- CP-element group 37: 	6 
    -- CP-element group 37:  members (1) 
      -- CP-element group 37: 	 branch_block_stmt_1041/do_while_stmt_1042/do_while_stmt_1042_loop_body/$exit
      -- 
    access_ccu_to_teu_debug_cp_element_group_37: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 7);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 43) := "access_ccu_to_teu_debug_cp_element_group_37"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_ccu_to_teu_debug_CP_0_elements(35) & access_ccu_to_teu_debug_CP_0_elements(15);
      gj_access_ccu_to_teu_debug_cp_element_group_37 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_ccu_to_teu_debug_CP_0_elements(37), clk => clk, reset => reset); --
    end block;
    -- CP-element group 38:  transition  input  bypass  pipeline-parent 
    -- CP-element group 38: predecessors 
    -- CP-element group 38: 	5 
    -- CP-element group 38: successors 
    -- CP-element group 38:  members (2) 
      -- CP-element group 38: 	 branch_block_stmt_1041/do_while_stmt_1042/loop_exit/$exit
      -- CP-element group 38: 	 branch_block_stmt_1041/do_while_stmt_1042/loop_exit/ack
      -- 
    ack_110_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 38_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => do_while_stmt_1042_branch_ack_0, ack => access_ccu_to_teu_debug_CP_0_elements(38)); -- 
    -- CP-element group 39:  transition  input  bypass  pipeline-parent 
    -- CP-element group 39: predecessors 
    -- CP-element group 39: 	5 
    -- CP-element group 39: successors 
    -- CP-element group 39:  members (2) 
      -- CP-element group 39: 	 branch_block_stmt_1041/do_while_stmt_1042/loop_taken/$exit
      -- CP-element group 39: 	 branch_block_stmt_1041/do_while_stmt_1042/loop_taken/ack
      -- 
    ack_114_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 39_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => do_while_stmt_1042_branch_ack_1, ack => access_ccu_to_teu_debug_CP_0_elements(39)); -- 
    -- CP-element group 40:  transition  bypass  pipeline-parent 
    -- CP-element group 40: predecessors 
    -- CP-element group 40: 	3 
    -- CP-element group 40: successors 
    -- CP-element group 40: 	1 
    -- CP-element group 40:  members (1) 
      -- CP-element group 40: 	 branch_block_stmt_1041/do_while_stmt_1042/$exit
      -- 
    access_ccu_to_teu_debug_CP_0_elements(40) <= access_ccu_to_teu_debug_CP_0_elements(3);
    -- CP-element group 41:  transition  input  output  bypass 
    -- CP-element group 41: predecessors 
    -- CP-element group 41: 	1 
    -- CP-element group 41: successors 
    -- CP-element group 41: 	42 
    -- CP-element group 41:  members (6) 
      -- CP-element group 41: 	 assign_stmt_1104/RPIPE_teu_debug_to_ccu_response_1103_sample_completed_
      -- CP-element group 41: 	 assign_stmt_1104/RPIPE_teu_debug_to_ccu_response_1103_update_start_
      -- CP-element group 41: 	 assign_stmt_1104/RPIPE_teu_debug_to_ccu_response_1103_Sample/$exit
      -- CP-element group 41: 	 assign_stmt_1104/RPIPE_teu_debug_to_ccu_response_1103_Sample/ra
      -- CP-element group 41: 	 assign_stmt_1104/RPIPE_teu_debug_to_ccu_response_1103_Update/$entry
      -- CP-element group 41: 	 assign_stmt_1104/RPIPE_teu_debug_to_ccu_response_1103_Update/cr
      -- 
    ra_127_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 41_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_teu_debug_to_ccu_response_1103_inst_ack_0, ack => access_ccu_to_teu_debug_CP_0_elements(41)); -- 
    cr_131_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_131_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_ccu_to_teu_debug_CP_0_elements(41), ack => RPIPE_teu_debug_to_ccu_response_1103_inst_req_1); -- 
    -- CP-element group 42:  transition  input  bypass 
    -- CP-element group 42: predecessors 
    -- CP-element group 42: 	41 
    -- CP-element group 42: successors 
    -- CP-element group 42:  members (5) 
      -- CP-element group 42: 	 $exit
      -- CP-element group 42: 	 assign_stmt_1104/$exit
      -- CP-element group 42: 	 assign_stmt_1104/RPIPE_teu_debug_to_ccu_response_1103_update_completed_
      -- CP-element group 42: 	 assign_stmt_1104/RPIPE_teu_debug_to_ccu_response_1103_Update/$exit
      -- CP-element group 42: 	 assign_stmt_1104/RPIPE_teu_debug_to_ccu_response_1103_Update/ca
      -- 
    ca_132_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 42_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_teu_debug_to_ccu_response_1103_inst_ack_1, ack => access_ccu_to_teu_debug_CP_0_elements(42)); -- 
    access_ccu_to_teu_debug_do_while_stmt_1042_terminator_115: loop_terminator -- 
      generic map (name => " access_ccu_to_teu_debug_do_while_stmt_1042_terminator_115", max_iterations_in_flight =>7) 
      port map(loop_body_exit => access_ccu_to_teu_debug_CP_0_elements(6),loop_continue => access_ccu_to_teu_debug_CP_0_elements(39),loop_terminate => access_ccu_to_teu_debug_CP_0_elements(38),loop_back => access_ccu_to_teu_debug_CP_0_elements(4),loop_exit => access_ccu_to_teu_debug_CP_0_elements(3),clk => clk, reset => reset); -- 
    phi_stmt_1044_phi_seq_77_block : block -- 
      signal triggers, src_sample_reqs, src_sample_acks, src_update_reqs, src_update_acks : BooleanArray(0 to 1);
      signal phi_mux_reqs : BooleanArray(0 to 1); -- 
    begin -- 
      triggers(0)  <= access_ccu_to_teu_debug_CP_0_elements(17);
      access_ccu_to_teu_debug_CP_0_elements(22)<= src_sample_reqs(0);
      src_sample_acks(0)  <= access_ccu_to_teu_debug_CP_0_elements(24);
      access_ccu_to_teu_debug_CP_0_elements(23)<= src_update_reqs(0);
      src_update_acks(0)  <= access_ccu_to_teu_debug_CP_0_elements(25);
      access_ccu_to_teu_debug_CP_0_elements(18) <= phi_mux_reqs(0);
      triggers(1)  <= access_ccu_to_teu_debug_CP_0_elements(19);
      access_ccu_to_teu_debug_CP_0_elements(26)<= src_sample_reqs(1);
      src_sample_acks(1)  <= access_ccu_to_teu_debug_CP_0_elements(26);
      access_ccu_to_teu_debug_CP_0_elements(27)<= src_update_reqs(1);
      src_update_acks(1)  <= access_ccu_to_teu_debug_CP_0_elements(28);
      access_ccu_to_teu_debug_CP_0_elements(20) <= phi_mux_reqs(1);
      phi_stmt_1044_phi_seq_77 : phi_sequencer_v2-- 
        generic map (place_capacity => 7, ntriggers => 2, name => "phi_stmt_1044_phi_seq_77") 
        port map ( -- 
          triggers => triggers, src_sample_starts => src_sample_reqs, 
          src_sample_completes => src_sample_acks, src_update_starts => src_update_reqs, 
          src_update_completes => src_update_acks,
          phi_mux_select_reqs => phi_mux_reqs, 
          phi_sample_req => access_ccu_to_teu_debug_CP_0_elements(11), 
          phi_sample_ack => access_ccu_to_teu_debug_CP_0_elements(15), 
          phi_update_req => access_ccu_to_teu_debug_CP_0_elements(14), 
          phi_update_ack => access_ccu_to_teu_debug_CP_0_elements(16), 
          phi_mux_ack => access_ccu_to_teu_debug_CP_0_elements(21), 
          clk => clk, reset => reset -- 
        );
        -- 
    end block;
    entry_tmerge_28_block : block -- 
      signal preds : BooleanArray(0 to 1);
      begin -- 
        preds(0)  <= access_ccu_to_teu_debug_CP_0_elements(7);
        preds(1)  <= access_ccu_to_teu_debug_CP_0_elements(8);
        entry_tmerge_28 : transition_merge -- 
          generic map(name => " entry_tmerge_28")
          port map (preds => preds, symbol_out => access_ccu_to_teu_debug_CP_0_elements(9));
          -- 
    end block;
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal EQ_u3_u1_1058_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_1064_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_1071_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_1078_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_1084_wire : std_logic_vector(0 downto 0);
    signal I_1044 : std_logic_vector(2 downto 0);
    signal MUX_1061_wire : std_logic_vector(7 downto 0);
    signal MUX_1067_wire : std_logic_vector(7 downto 0);
    signal MUX_1074_wire : std_logic_vector(7 downto 0);
    signal MUX_1081_wire : std_logic_vector(7 downto 0);
    signal MUX_1087_wire : std_logic_vector(7 downto 0);
    signal OR_u8_u8_1068_wire : std_logic_vector(7 downto 0);
    signal OR_u8_u8_1075_wire : std_logic_vector(7 downto 0);
    signal OR_u8_u8_1088_wire : std_logic_vector(7 downto 0);
    signal OR_u8_u8_1089_wire : std_logic_vector(7 downto 0);
    signal R_ZERO_1_1096_wire_constant : std_logic_vector(0 downto 0);
    signal ULT_u3_u1_1095_wire : std_logic_vector(0 downto 0);
    signal cmd_len_five_1017 : std_logic_vector(0 downto 0);
    signal continue_flag_1098 : std_logic_vector(0 downto 0);
    signal data0_1037 : std_logic_vector(7 downto 0);
    signal data1_1033 : std_logic_vector(7 downto 0);
    signal data2_1029 : std_logic_vector(7 downto 0);
    signal data3_1025 : std_logic_vector(7 downto 0);
    signal konst_1015_wire_constant : std_logic_vector(39 downto 0);
    signal konst_1052_wire_constant : std_logic_vector(2 downto 0);
    signal konst_1057_wire_constant : std_logic_vector(2 downto 0);
    signal konst_1060_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1063_wire_constant : std_logic_vector(2 downto 0);
    signal konst_1066_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1070_wire_constant : std_logic_vector(2 downto 0);
    signal konst_1073_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1077_wire_constant : std_logic_vector(2 downto 0);
    signal konst_1080_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1083_wire_constant : std_logic_vector(2 downto 0);
    signal konst_1086_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1094_wire_constant : std_logic_vector(2 downto 0);
    signal msg_1021 : std_logic_vector(7 downto 0);
    signal nI_1054 : std_logic_vector(2 downto 0);
    signal nI_1054_1046_buffered : std_logic_vector(2 downto 0);
    signal type_cast_1048_wire_constant : std_logic_vector(2 downto 0);
    -- 
  begin -- 
    R_ZERO_1_1096_wire_constant <= "0";
    konst_1015_wire_constant <= "0000000000000000000000000000000000100111";
    konst_1052_wire_constant <= "001";
    konst_1057_wire_constant <= "000";
    konst_1060_wire_constant <= "00000000";
    konst_1063_wire_constant <= "001";
    konst_1066_wire_constant <= "00000000";
    konst_1070_wire_constant <= "010";
    konst_1073_wire_constant <= "00000000";
    konst_1077_wire_constant <= "011";
    konst_1080_wire_constant <= "00000000";
    konst_1083_wire_constant <= "100";
    konst_1086_wire_constant <= "00000000";
    konst_1094_wire_constant <= "100";
    type_cast_1048_wire_constant <= "000";
    phi_stmt_1044: Block -- phi operator 
      signal idata: std_logic_vector(5 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= nI_1054_1046_buffered & type_cast_1048_wire_constant;
      req <= phi_stmt_1044_req_0 & phi_stmt_1044_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_1044",
          num_reqs => 2,
          bypass_flag => true,
          data_width => 3) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_1044_ack_0,
          idata => idata,
          odata => I_1044,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_1044
    -- flow-through select operator MUX_1061_inst
    MUX_1061_wire <= msg_1021 when (EQ_u3_u1_1058_wire(0) /=  '0') else konst_1060_wire_constant;
    -- flow-through select operator MUX_1067_inst
    MUX_1067_wire <= data3_1025 when (EQ_u3_u1_1064_wire(0) /=  '0') else konst_1066_wire_constant;
    -- flow-through select operator MUX_1074_inst
    MUX_1074_wire <= data2_1029 when (EQ_u3_u1_1071_wire(0) /=  '0') else konst_1073_wire_constant;
    -- flow-through select operator MUX_1081_inst
    MUX_1081_wire <= data1_1033 when (EQ_u3_u1_1078_wire(0) /=  '0') else konst_1080_wire_constant;
    -- flow-through select operator MUX_1087_inst
    MUX_1087_wire <= data0_1037 when (EQ_u3_u1_1084_wire(0) /=  '0') else konst_1086_wire_constant;
    -- flow-through select operator MUX_1097_inst
    continue_flag_1098 <= ULT_u3_u1_1095_wire when (cmd_len_five_1017(0) /=  '0') else R_ZERO_1_1096_wire_constant;
    -- flow-through slice operator slice_1020_inst
    msg_1021 <= command_buffer(39 downto 32);
    -- flow-through slice operator slice_1024_inst
    data3_1025 <= command_buffer(31 downto 24);
    -- flow-through slice operator slice_1028_inst
    data2_1029 <= command_buffer(23 downto 16);
    -- flow-through slice operator slice_1032_inst
    data1_1033 <= command_buffer(15 downto 8);
    -- flow-through slice operator slice_1036_inst
    data0_1037 <= command_buffer(7 downto 0);
    nI_1054_1046_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= nI_1054_1046_buf_req_0;
      nI_1054_1046_buf_ack_0<= wack(0);
      rreq(0) <= nI_1054_1046_buf_req_1;
      nI_1054_1046_buf_ack_1<= rack(0);
      nI_1054_1046_buf : InterlockBuffer generic map ( -- 
        name => "nI_1054_1046_buf",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 3,
        out_data_width => 3,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => nI_1054,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => nI_1054_1046_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    do_while_stmt_1042_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= continue_flag_1098;
      branch_instance: BranchBase -- 
        generic map( name => "do_while_stmt_1042_branch", condition_width => 1,  bypass_flag => true)
        port map( -- 
          condition => condition_sig,
          req => do_while_stmt_1042_branch_req_0,
          ack0 => do_while_stmt_1042_branch_ack_0,
          ack1 => do_while_stmt_1042_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    -- flow through binary operator ADD_u3_u3_1053_inst
    nI_1054 <= std_logic_vector(unsigned(I_1044) + unsigned(konst_1052_wire_constant));
    -- flow through binary operator BITSEL_u40_u1_1016_inst
    process(command_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(command_buffer, konst_1015_wire_constant, tmp_var);
      cmd_len_five_1017 <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_1058_inst
    process(I_1044) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(I_1044, konst_1057_wire_constant, tmp_var);
      EQ_u3_u1_1058_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_1064_inst
    process(I_1044) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(I_1044, konst_1063_wire_constant, tmp_var);
      EQ_u3_u1_1064_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_1071_inst
    process(I_1044) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(I_1044, konst_1070_wire_constant, tmp_var);
      EQ_u3_u1_1071_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_1078_inst
    process(I_1044) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(I_1044, konst_1077_wire_constant, tmp_var);
      EQ_u3_u1_1078_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_1084_inst
    process(I_1044) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(I_1044, konst_1083_wire_constant, tmp_var);
      EQ_u3_u1_1084_wire <= tmp_var; --
    end process;
    -- flow through binary operator OR_u8_u8_1068_inst
    OR_u8_u8_1068_wire <= (MUX_1061_wire or MUX_1067_wire);
    -- flow through binary operator OR_u8_u8_1075_inst
    OR_u8_u8_1075_wire <= (OR_u8_u8_1068_wire or MUX_1074_wire);
    -- flow through binary operator OR_u8_u8_1088_inst
    OR_u8_u8_1088_wire <= (MUX_1081_wire or MUX_1087_wire);
    -- shared split operator group (10) : OR_u8_u8_1089_inst 
    ApIntOr_group_10: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= OR_u8_u8_1075_wire & OR_u8_u8_1088_wire;
      OR_u8_u8_1089_wire <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= OR_u8_u8_1089_inst_req_0;
      OR_u8_u8_1089_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= OR_u8_u8_1089_inst_req_1;
      OR_u8_u8_1089_inst_ack_1 <= ackR_unguarded(0);
      ApIntOr_group_10_gI: SplitGuardInterface generic map(name => "ApIntOr_group_10_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntOr",
          name => "ApIntOr_group_10",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 8,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => true,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 10
    -- flow through binary operator ULT_u3_u1_1095_inst
    process(I_1044) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUlt_proc(I_1044, konst_1094_wire_constant, tmp_var);
      ULT_u3_u1_1095_wire <= tmp_var; --
    end process;
    -- shared inport operator group (0) : RPIPE_teu_debug_to_ccu_response_1103_inst 
    InportGroup_0: Block -- 
      signal data_out: std_logic_vector(0 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 0 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= RPIPE_teu_debug_to_ccu_response_1103_inst_req_0;
      RPIPE_teu_debug_to_ccu_response_1103_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= RPIPE_teu_debug_to_ccu_response_1103_inst_req_1;
      RPIPE_teu_debug_to_ccu_response_1103_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      response_buffer <= data_out(0 downto 0);
      teu_debug_to_ccu_response_read_0_gI: SplitGuardInterface generic map(name => "teu_debug_to_ccu_response_read_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      teu_debug_to_ccu_response_read_0: InputPortRevised -- 
        generic map ( name => "teu_debug_to_ccu_response_read_0", data_width => 1,  num_reqs => 1,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => teu_debug_to_ccu_response_pipe_read_req(0),
          oack => teu_debug_to_ccu_response_pipe_read_ack(0),
          odata => teu_debug_to_ccu_response_pipe_read_data(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 0
    -- shared outport operator group (0) : WPIPE_ccu_to_teu_debug_command_1055_inst 
    OutportGroup_0: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_ccu_to_teu_debug_command_1055_inst_req_0;
      WPIPE_ccu_to_teu_debug_command_1055_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_ccu_to_teu_debug_command_1055_inst_req_1;
      WPIPE_ccu_to_teu_debug_command_1055_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= OR_u8_u8_1089_wire;
      ccu_to_teu_debug_command_write_0_gI: SplitGuardInterface generic map(name => "ccu_to_teu_debug_command_write_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      ccu_to_teu_debug_command_write_0: OutputPortRevised -- 
        generic map ( name => "ccu_to_teu_debug_command", data_width => 8, num_reqs => 1, input_buffering => inBUFs, full_rate => true,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => ccu_to_teu_debug_command_pipe_write_req(0),
          oack => ccu_to_teu_debug_command_pipe_write_ack(0),
          odata => ccu_to_teu_debug_command_pipe_write_data(7 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 0
    -- 
  end Block; -- data_path
  -- 
end access_ccu_to_teu_debug_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity access_fpunit_registers is -- 
  generic (tag_length : integer); 
  port ( -- 
    command : in  std_logic_vector(38 downto 0);
    response : out  std_logic_vector(32 downto 0);
    teu_to_ccu_fpunit_register_access_response_pipe_read_req : out  std_logic_vector(0 downto 0);
    teu_to_ccu_fpunit_register_access_response_pipe_read_ack : in   std_logic_vector(0 downto 0);
    teu_to_ccu_fpunit_register_access_response_pipe_read_data : in   std_logic_vector(32 downto 0);
    ccu_to_teu_fpunit_register_access_command_pipe_write_req : out  std_logic_vector(0 downto 0);
    ccu_to_teu_fpunit_register_access_command_pipe_write_ack : in   std_logic_vector(0 downto 0);
    ccu_to_teu_fpunit_register_access_command_pipe_write_data : out  std_logic_vector(39 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity access_fpunit_registers;
architecture access_fpunit_registers_arch of access_fpunit_registers is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 39)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 33)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal command_buffer :  std_logic_vector(38 downto 0);
  signal command_update_enable: Boolean;
  -- output port buffer signals
  signal response_buffer :  std_logic_vector(32 downto 0);
  signal response_update_enable: Boolean;
  signal access_fpunit_registers_CP_133_start: Boolean;
  signal access_fpunit_registers_CP_133_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal WPIPE_ccu_to_teu_fpunit_register_access_command_1110_inst_ack_0 : boolean;
  signal RPIPE_teu_to_ccu_fpunit_register_access_response_1116_inst_ack_0 : boolean;
  signal RPIPE_teu_to_ccu_fpunit_register_access_response_1116_inst_req_0 : boolean;
  signal CONCAT_u39_u40_1113_inst_ack_1 : boolean;
  signal CONCAT_u39_u40_1113_inst_req_1 : boolean;
  signal CONCAT_u39_u40_1113_inst_ack_0 : boolean;
  signal CONCAT_u39_u40_1113_inst_req_0 : boolean;
  signal WPIPE_ccu_to_teu_fpunit_register_access_command_1110_inst_req_0 : boolean;
  signal WPIPE_ccu_to_teu_fpunit_register_access_command_1110_inst_ack_1 : boolean;
  signal WPIPE_ccu_to_teu_fpunit_register_access_command_1110_inst_req_1 : boolean;
  signal RPIPE_teu_to_ccu_fpunit_register_access_response_1116_inst_req_1 : boolean;
  signal RPIPE_teu_to_ccu_fpunit_register_access_response_1116_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "access_fpunit_registers_input_buffer", -- 
      buffer_size => 0,
      bypass_flag => true,
      data_width => tag_length + 39) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(38 downto 0) <= command;
  command_buffer <= in_buffer_data_out(38 downto 0);
  in_buffer_data_in(tag_length + 38 downto 39) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 38 downto 39);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 7,1 => 1,2 => 7);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 7);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= command_update_enable & in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  access_fpunit_registers_CP_133_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "access_fpunit_registers_out_buffer", -- 
      buffer_size => 0,
      full_rate => false,
      data_width => tag_length + 33) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(32 downto 0) <= response_buffer;
  response <= out_buffer_data_out(32 downto 0);
  out_buffer_data_in(tag_length + 32 downto 33) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 32 downto 33);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 7,1 => 1,2 => 7);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= access_fpunit_registers_CP_133_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  response_update_enable_join: block -- 
    constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
    constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
    constant place_delays: IntegerArray(0 to 0) := (0 => 0);
    constant joinName: string(1 to 27) := "response_update_enable_join"; 
    signal preds: BooleanArray(1 to 1); -- 
  begin -- 
    preds(1) <= out_buffer_write_ack_symbol;
    gj_response_update_enable_join : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => response_update_enable, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 7,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= access_fpunit_registers_CP_133_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 7,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= access_fpunit_registers_CP_133_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  access_fpunit_registers_CP_133: Block -- control-path 
    signal access_fpunit_registers_CP_133_elements: BooleanArray(18 downto 0);
    -- 
  begin -- 
    access_fpunit_registers_CP_133_elements(0) <= access_fpunit_registers_CP_133_start;
    access_fpunit_registers_CP_133_symbol <= access_fpunit_registers_CP_133_elements(18);
    -- CP-element group 0:  transition  bypass  pipeline-parent 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0:  members (1) 
      -- CP-element group 0: 	 $entry
      -- 
    -- CP-element group 1:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1: 	11 
    -- CP-element group 1: 	4 
    -- CP-element group 1:  members (1) 
      -- CP-element group 1: 	 assign_stmt_1114_to_assign_stmt_1117/$entry
      -- 
    access_fpunit_registers_CP_133_elements(1) <= access_fpunit_registers_CP_133_elements(0);
    -- CP-element group 2:  join  transition  bypass  pipeline-parent 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: marked-predecessors 
    -- CP-element group 2: 	6 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	16 
    -- CP-element group 2:  members (2) 
      -- CP-element group 2: 	 assign_stmt_1114_to_assign_stmt_1117/command_update_enable
      -- CP-element group 2: 	 assign_stmt_1114_to_assign_stmt_1117/command_update_enable_out
      -- 
    access_fpunit_registers_cp_element_group_2: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 42) := "access_fpunit_registers_cp_element_group_2"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= access_fpunit_registers_CP_133_elements(6);
      gj_access_fpunit_registers_cp_element_group_2 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_fpunit_registers_CP_133_elements(2), clk => clk, reset => reset); --
    end block;
    -- CP-element group 3:  transition  bypass  pipeline-parent 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	17 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	12 
    -- CP-element group 3:  members (2) 
      -- CP-element group 3: 	 assign_stmt_1114_to_assign_stmt_1117/response_update_enable
      -- CP-element group 3: 	 assign_stmt_1114_to_assign_stmt_1117/response_update_enable_in
      -- 
    access_fpunit_registers_CP_133_elements(3) <= access_fpunit_registers_CP_133_elements(17);
    -- CP-element group 4:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	1 
    -- CP-element group 4: marked-predecessors 
    -- CP-element group 4: 	6 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	6 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 assign_stmt_1114_to_assign_stmt_1117/CONCAT_u39_u40_1113_sample_start_
      -- CP-element group 4: 	 assign_stmt_1114_to_assign_stmt_1117/CONCAT_u39_u40_1113_Sample/rr
      -- CP-element group 4: 	 assign_stmt_1114_to_assign_stmt_1117/CONCAT_u39_u40_1113_Sample/$entry
      -- 
    rr_150_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_150_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_fpunit_registers_CP_133_elements(4), ack => CONCAT_u39_u40_1113_inst_req_0); -- 
    access_fpunit_registers_cp_element_group_4: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 42) := "access_fpunit_registers_cp_element_group_4"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_fpunit_registers_CP_133_elements(1) & access_fpunit_registers_CP_133_elements(6);
      gj_access_fpunit_registers_cp_element_group_4 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_fpunit_registers_CP_133_elements(4), clk => clk, reset => reset); --
    end block;
    -- CP-element group 5:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: marked-predecessors 
    -- CP-element group 5: 	7 
    -- CP-element group 5: 	9 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	7 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 assign_stmt_1114_to_assign_stmt_1117/CONCAT_u39_u40_1113_update_start_
      -- CP-element group 5: 	 assign_stmt_1114_to_assign_stmt_1117/CONCAT_u39_u40_1113_Update/cr
      -- CP-element group 5: 	 assign_stmt_1114_to_assign_stmt_1117/CONCAT_u39_u40_1113_Update/$entry
      -- 
    cr_155_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_155_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_fpunit_registers_CP_133_elements(5), ack => CONCAT_u39_u40_1113_inst_req_1); -- 
    access_fpunit_registers_cp_element_group_5: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 42) := "access_fpunit_registers_cp_element_group_5"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_fpunit_registers_CP_133_elements(7) & access_fpunit_registers_CP_133_elements(9);
      gj_access_fpunit_registers_cp_element_group_5 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_fpunit_registers_CP_133_elements(5), clk => clk, reset => reset); --
    end block;
    -- CP-element group 6:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	4 
    -- CP-element group 6: successors 
    -- CP-element group 6: marked-successors 
    -- CP-element group 6: 	2 
    -- CP-element group 6: 	4 
    -- CP-element group 6:  members (3) 
      -- CP-element group 6: 	 assign_stmt_1114_to_assign_stmt_1117/CONCAT_u39_u40_1113_sample_completed_
      -- CP-element group 6: 	 assign_stmt_1114_to_assign_stmt_1117/CONCAT_u39_u40_1113_Sample/ra
      -- CP-element group 6: 	 assign_stmt_1114_to_assign_stmt_1117/CONCAT_u39_u40_1113_Sample/$exit
      -- 
    ra_151_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u39_u40_1113_inst_ack_0, ack => access_fpunit_registers_CP_133_elements(6)); -- 
    -- CP-element group 7:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	5 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	8 
    -- CP-element group 7: marked-successors 
    -- CP-element group 7: 	5 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 assign_stmt_1114_to_assign_stmt_1117/CONCAT_u39_u40_1113_Update/ca
      -- CP-element group 7: 	 assign_stmt_1114_to_assign_stmt_1117/CONCAT_u39_u40_1113_Update/$exit
      -- CP-element group 7: 	 assign_stmt_1114_to_assign_stmt_1117/CONCAT_u39_u40_1113_update_completed_
      -- 
    ca_156_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u39_u40_1113_inst_ack_1, ack => access_fpunit_registers_CP_133_elements(7)); -- 
    -- CP-element group 8:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	7 
    -- CP-element group 8: marked-predecessors 
    -- CP-element group 8: 	10 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	9 
    -- CP-element group 8:  members (3) 
      -- CP-element group 8: 	 assign_stmt_1114_to_assign_stmt_1117/WPIPE_ccu_to_teu_fpunit_register_access_command_1110_Sample/$entry
      -- CP-element group 8: 	 assign_stmt_1114_to_assign_stmt_1117/WPIPE_ccu_to_teu_fpunit_register_access_command_1110_sample_start_
      -- CP-element group 8: 	 assign_stmt_1114_to_assign_stmt_1117/WPIPE_ccu_to_teu_fpunit_register_access_command_1110_Sample/req
      -- 
    req_164_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_164_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_fpunit_registers_CP_133_elements(8), ack => WPIPE_ccu_to_teu_fpunit_register_access_command_1110_inst_req_0); -- 
    access_fpunit_registers_cp_element_group_8: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 42) := "access_fpunit_registers_cp_element_group_8"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_fpunit_registers_CP_133_elements(7) & access_fpunit_registers_CP_133_elements(10);
      gj_access_fpunit_registers_cp_element_group_8 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_fpunit_registers_CP_133_elements(8), clk => clk, reset => reset); --
    end block;
    -- CP-element group 9:  fork  transition  input  output  bypass  pipeline-parent 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	8 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	10 
    -- CP-element group 9: marked-successors 
    -- CP-element group 9: 	5 
    -- CP-element group 9:  members (6) 
      -- CP-element group 9: 	 assign_stmt_1114_to_assign_stmt_1117/WPIPE_ccu_to_teu_fpunit_register_access_command_1110_Sample/$exit
      -- CP-element group 9: 	 assign_stmt_1114_to_assign_stmt_1117/WPIPE_ccu_to_teu_fpunit_register_access_command_1110_Sample/ack
      -- CP-element group 9: 	 assign_stmt_1114_to_assign_stmt_1117/WPIPE_ccu_to_teu_fpunit_register_access_command_1110_update_start_
      -- CP-element group 9: 	 assign_stmt_1114_to_assign_stmt_1117/WPIPE_ccu_to_teu_fpunit_register_access_command_1110_sample_completed_
      -- CP-element group 9: 	 assign_stmt_1114_to_assign_stmt_1117/WPIPE_ccu_to_teu_fpunit_register_access_command_1110_Update/req
      -- CP-element group 9: 	 assign_stmt_1114_to_assign_stmt_1117/WPIPE_ccu_to_teu_fpunit_register_access_command_1110_Update/$entry
      -- 
    ack_165_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_teu_fpunit_register_access_command_1110_inst_ack_0, ack => access_fpunit_registers_CP_133_elements(9)); -- 
    req_169_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_169_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_fpunit_registers_CP_133_elements(9), ack => WPIPE_ccu_to_teu_fpunit_register_access_command_1110_inst_req_1); -- 
    -- CP-element group 10:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	9 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	15 
    -- CP-element group 10: marked-successors 
    -- CP-element group 10: 	8 
    -- CP-element group 10:  members (3) 
      -- CP-element group 10: 	 assign_stmt_1114_to_assign_stmt_1117/WPIPE_ccu_to_teu_fpunit_register_access_command_1110_update_completed_
      -- CP-element group 10: 	 assign_stmt_1114_to_assign_stmt_1117/WPIPE_ccu_to_teu_fpunit_register_access_command_1110_Update/ack
      -- CP-element group 10: 	 assign_stmt_1114_to_assign_stmt_1117/WPIPE_ccu_to_teu_fpunit_register_access_command_1110_Update/$exit
      -- 
    ack_170_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_teu_fpunit_register_access_command_1110_inst_ack_1, ack => access_fpunit_registers_CP_133_elements(10)); -- 
    -- CP-element group 11:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	1 
    -- CP-element group 11: marked-predecessors 
    -- CP-element group 11: 	14 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	13 
    -- CP-element group 11:  members (3) 
      -- CP-element group 11: 	 assign_stmt_1114_to_assign_stmt_1117/RPIPE_teu_to_ccu_fpunit_register_access_response_1116_Sample/rr
      -- CP-element group 11: 	 assign_stmt_1114_to_assign_stmt_1117/RPIPE_teu_to_ccu_fpunit_register_access_response_1116_Sample/$entry
      -- CP-element group 11: 	 assign_stmt_1114_to_assign_stmt_1117/RPIPE_teu_to_ccu_fpunit_register_access_response_1116_sample_start_
      -- 
    rr_178_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_178_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_fpunit_registers_CP_133_elements(11), ack => RPIPE_teu_to_ccu_fpunit_register_access_response_1116_inst_req_0); -- 
    access_fpunit_registers_cp_element_group_11: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 43) := "access_fpunit_registers_cp_element_group_11"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_fpunit_registers_CP_133_elements(1) & access_fpunit_registers_CP_133_elements(14);
      gj_access_fpunit_registers_cp_element_group_11 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_fpunit_registers_CP_133_elements(11), clk => clk, reset => reset); --
    end block;
    -- CP-element group 12:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	13 
    -- CP-element group 12: 	3 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	14 
    -- CP-element group 12:  members (3) 
      -- CP-element group 12: 	 assign_stmt_1114_to_assign_stmt_1117/RPIPE_teu_to_ccu_fpunit_register_access_response_1116_Update/$entry
      -- CP-element group 12: 	 assign_stmt_1114_to_assign_stmt_1117/RPIPE_teu_to_ccu_fpunit_register_access_response_1116_update_start_
      -- CP-element group 12: 	 assign_stmt_1114_to_assign_stmt_1117/RPIPE_teu_to_ccu_fpunit_register_access_response_1116_Update/cr
      -- 
    cr_183_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_183_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_fpunit_registers_CP_133_elements(12), ack => RPIPE_teu_to_ccu_fpunit_register_access_response_1116_inst_req_1); -- 
    access_fpunit_registers_cp_element_group_12: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 43) := "access_fpunit_registers_cp_element_group_12"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_fpunit_registers_CP_133_elements(13) & access_fpunit_registers_CP_133_elements(3);
      gj_access_fpunit_registers_cp_element_group_12 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_fpunit_registers_CP_133_elements(12), clk => clk, reset => reset); --
    end block;
    -- CP-element group 13:  transition  input  bypass  pipeline-parent 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	11 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	12 
    -- CP-element group 13:  members (3) 
      -- CP-element group 13: 	 assign_stmt_1114_to_assign_stmt_1117/RPIPE_teu_to_ccu_fpunit_register_access_response_1116_Sample/ra
      -- CP-element group 13: 	 assign_stmt_1114_to_assign_stmt_1117/RPIPE_teu_to_ccu_fpunit_register_access_response_1116_Sample/$exit
      -- CP-element group 13: 	 assign_stmt_1114_to_assign_stmt_1117/RPIPE_teu_to_ccu_fpunit_register_access_response_1116_sample_completed_
      -- 
    ra_179_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_teu_to_ccu_fpunit_register_access_response_1116_inst_ack_0, ack => access_fpunit_registers_CP_133_elements(13)); -- 
    -- CP-element group 14:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	12 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	15 
    -- CP-element group 14: marked-successors 
    -- CP-element group 14: 	11 
    -- CP-element group 14:  members (3) 
      -- CP-element group 14: 	 assign_stmt_1114_to_assign_stmt_1117/RPIPE_teu_to_ccu_fpunit_register_access_response_1116_Update/$exit
      -- CP-element group 14: 	 assign_stmt_1114_to_assign_stmt_1117/RPIPE_teu_to_ccu_fpunit_register_access_response_1116_update_completed_
      -- CP-element group 14: 	 assign_stmt_1114_to_assign_stmt_1117/RPIPE_teu_to_ccu_fpunit_register_access_response_1116_Update/ca
      -- 
    ca_184_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_teu_to_ccu_fpunit_register_access_response_1116_inst_ack_1, ack => access_fpunit_registers_CP_133_elements(14)); -- 
    -- CP-element group 15:  join  transition  bypass  pipeline-parent 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	14 
    -- CP-element group 15: 	10 
    -- CP-element group 15: successors 
    -- CP-element group 15: 	18 
    -- CP-element group 15:  members (1) 
      -- CP-element group 15: 	 assign_stmt_1114_to_assign_stmt_1117/$exit
      -- 
    access_fpunit_registers_cp_element_group_15: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 7);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 43) := "access_fpunit_registers_cp_element_group_15"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_fpunit_registers_CP_133_elements(14) & access_fpunit_registers_CP_133_elements(10);
      gj_access_fpunit_registers_cp_element_group_15 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_fpunit_registers_CP_133_elements(15), clk => clk, reset => reset); --
    end block;
    -- CP-element group 16:  place  bypass  pipeline-parent 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	2 
    -- CP-element group 16: successors 
    -- CP-element group 16:  members (1) 
      -- CP-element group 16: 	 command_update_enable
      -- 
    access_fpunit_registers_CP_133_elements(16) <= access_fpunit_registers_CP_133_elements(2);
    -- CP-element group 17:  place  bypass  pipeline-parent 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	3 
    -- CP-element group 17:  members (1) 
      -- CP-element group 17: 	 response_update_enable
      -- 
    -- CP-element group 18:  transition  bypass  pipeline-parent 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	15 
    -- CP-element group 18: successors 
    -- CP-element group 18:  members (1) 
      -- CP-element group 18: 	 $exit
      -- 
    access_fpunit_registers_CP_133_elements(18) <= access_fpunit_registers_CP_133_elements(15);
    --  hookup: inputs to control-path 
    access_fpunit_registers_CP_133_elements(17) <= response_update_enable;
    -- hookup: output from control-path 
    command_update_enable <= access_fpunit_registers_CP_133_elements(16);
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal CONCAT_u39_u40_1113_wire : std_logic_vector(39 downto 0);
    signal R_ONE_1_1112_wire_constant : std_logic_vector(0 downto 0);
    -- 
  begin -- 
    R_ONE_1_1112_wire_constant <= "1";
    -- shared split operator group (0) : CONCAT_u39_u40_1113_inst 
    ApConcat_group_0: Block -- 
      signal data_in: std_logic_vector(38 downto 0);
      signal data_out: std_logic_vector(39 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= command_buffer;
      CONCAT_u39_u40_1113_wire <= data_out(39 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u39_u40_1113_inst_req_0;
      CONCAT_u39_u40_1113_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u39_u40_1113_inst_req_1;
      CONCAT_u39_u40_1113_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_0_gI: SplitGuardInterface generic map(name => "ApConcat_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 39,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 40,
          constant_operand => "1",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- shared inport operator group (0) : RPIPE_teu_to_ccu_fpunit_register_access_response_1116_inst 
    InportGroup_0: Block -- 
      signal data_out: std_logic_vector(32 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 0 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= RPIPE_teu_to_ccu_fpunit_register_access_response_1116_inst_req_0;
      RPIPE_teu_to_ccu_fpunit_register_access_response_1116_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= RPIPE_teu_to_ccu_fpunit_register_access_response_1116_inst_req_1;
      RPIPE_teu_to_ccu_fpunit_register_access_response_1116_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      response_buffer <= data_out(32 downto 0);
      teu_to_ccu_fpunit_register_access_response_read_0_gI: SplitGuardInterface generic map(name => "teu_to_ccu_fpunit_register_access_response_read_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      teu_to_ccu_fpunit_register_access_response_read_0: InputPort_P2P -- 
        generic map ( name => "teu_to_ccu_fpunit_register_access_response_read_0", data_width => 33,    bypass_flag => false,   	nonblocking_read_flag => false,  barrier_flag => false,   queue_depth =>  2)
        port map (-- 
          sample_req => reqL(0) , 
          sample_ack => ackL(0), 
          update_req => reqR(0), 
          update_ack => ackR(0), 
          data => data_out, 
          oreq => teu_to_ccu_fpunit_register_access_response_pipe_read_req(0),
          oack => teu_to_ccu_fpunit_register_access_response_pipe_read_ack(0),
          odata => teu_to_ccu_fpunit_register_access_response_pipe_read_data(32 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 0
    -- shared outport operator group (0) : WPIPE_ccu_to_teu_fpunit_register_access_command_1110_inst 
    OutportGroup_0: Block -- 
      signal data_in: std_logic_vector(39 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_ccu_to_teu_fpunit_register_access_command_1110_inst_req_0;
      WPIPE_ccu_to_teu_fpunit_register_access_command_1110_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_ccu_to_teu_fpunit_register_access_command_1110_inst_req_1;
      WPIPE_ccu_to_teu_fpunit_register_access_command_1110_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= CONCAT_u39_u40_1113_wire;
      ccu_to_teu_fpunit_register_access_command_write_0_gI: SplitGuardInterface generic map(name => "ccu_to_teu_fpunit_register_access_command_write_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      ccu_to_teu_fpunit_register_access_command_write_0: OutputPortRevised -- 
        generic map ( name => "ccu_to_teu_fpunit_register_access_command", data_width => 40, num_reqs => 1, input_buffering => inBUFs, full_rate => true,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => ccu_to_teu_fpunit_register_access_command_pipe_write_req(0),
          oack => ccu_to_teu_fpunit_register_access_command_pipe_write_ack(0),
          odata => ccu_to_teu_fpunit_register_access_command_pipe_write_data(39 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 0
    -- 
  end Block; -- data_path
  -- 
end access_fpunit_registers_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity access_iunit_registers is -- 
  generic (tag_length : integer); 
  port ( -- 
    cmd_word : in  std_logic_vector(40 downto 0);
    response_word : out  std_logic_vector(31 downto 0);
    teu_to_ccu_iunit_register_access_response_pipe_read_req : out  std_logic_vector(0 downto 0);
    teu_to_ccu_iunit_register_access_response_pipe_read_ack : in   std_logic_vector(0 downto 0);
    teu_to_ccu_iunit_register_access_response_pipe_read_data : in   std_logic_vector(31 downto 0);
    ccu_to_teu_iunit_register_access_command_pipe_write_req : out  std_logic_vector(0 downto 0);
    ccu_to_teu_iunit_register_access_command_pipe_write_ack : in   std_logic_vector(0 downto 0);
    ccu_to_teu_iunit_register_access_command_pipe_write_data : out  std_logic_vector(41 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity access_iunit_registers;
architecture access_iunit_registers_arch of access_iunit_registers is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 41)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 32)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal cmd_word_buffer :  std_logic_vector(40 downto 0);
  signal cmd_word_update_enable: Boolean;
  -- output port buffer signals
  signal response_word_buffer :  std_logic_vector(31 downto 0);
  signal response_word_update_enable: Boolean;
  signal access_iunit_registers_CP_187_start: Boolean;
  signal access_iunit_registers_CP_187_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal CONCAT_u41_u42_1127_inst_req_1 : boolean;
  signal CONCAT_u41_u42_1127_inst_ack_1 : boolean;
  signal CONCAT_u41_u42_1127_inst_ack_0 : boolean;
  signal CONCAT_u41_u42_1127_inst_req_0 : boolean;
  signal WPIPE_ccu_to_teu_iunit_register_access_command_1124_inst_req_1 : boolean;
  signal WPIPE_ccu_to_teu_iunit_register_access_command_1124_inst_req_0 : boolean;
  signal WPIPE_ccu_to_teu_iunit_register_access_command_1124_inst_ack_0 : boolean;
  signal RPIPE_teu_to_ccu_iunit_register_access_response_1130_inst_ack_1 : boolean;
  signal RPIPE_teu_to_ccu_iunit_register_access_response_1130_inst_req_1 : boolean;
  signal RPIPE_teu_to_ccu_iunit_register_access_response_1130_inst_req_0 : boolean;
  signal RPIPE_teu_to_ccu_iunit_register_access_response_1130_inst_ack_0 : boolean;
  signal WPIPE_ccu_to_teu_iunit_register_access_command_1124_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "access_iunit_registers_input_buffer", -- 
      buffer_size => 0,
      bypass_flag => true,
      data_width => tag_length + 41) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(40 downto 0) <= cmd_word;
  cmd_word_buffer <= in_buffer_data_out(40 downto 0);
  in_buffer_data_in(tag_length + 40 downto 41) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 40 downto 41);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 7,1 => 1,2 => 7);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 7);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= cmd_word_update_enable & in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  access_iunit_registers_CP_187_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "access_iunit_registers_out_buffer", -- 
      buffer_size => 0,
      full_rate => false,
      data_width => tag_length + 32) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(31 downto 0) <= response_word_buffer;
  response_word <= out_buffer_data_out(31 downto 0);
  out_buffer_data_in(tag_length + 31 downto 32) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 31 downto 32);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 7,1 => 1,2 => 7);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= access_iunit_registers_CP_187_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  response_word_update_enable_join: block -- 
    constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
    constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
    constant place_delays: IntegerArray(0 to 0) := (0 => 0);
    constant joinName: string(1 to 32) := "response_word_update_enable_join"; 
    signal preds: BooleanArray(1 to 1); -- 
  begin -- 
    preds(1) <= out_buffer_write_ack_symbol;
    gj_response_word_update_enable_join : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => response_word_update_enable, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 7,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= access_iunit_registers_CP_187_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 7,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= access_iunit_registers_CP_187_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  access_iunit_registers_CP_187: Block -- control-path 
    signal access_iunit_registers_CP_187_elements: BooleanArray(18 downto 0);
    -- 
  begin -- 
    access_iunit_registers_CP_187_elements(0) <= access_iunit_registers_CP_187_start;
    access_iunit_registers_CP_187_symbol <= access_iunit_registers_CP_187_elements(18);
    -- CP-element group 0:  transition  bypass  pipeline-parent 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0:  members (1) 
      -- CP-element group 0: 	 $entry
      -- 
    -- CP-element group 1:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1: 	4 
    -- CP-element group 1: 	11 
    -- CP-element group 1:  members (1) 
      -- CP-element group 1: 	 stmt_1123_to_stmt_1133/$entry
      -- 
    access_iunit_registers_CP_187_elements(1) <= access_iunit_registers_CP_187_elements(0);
    -- CP-element group 2:  join  transition  bypass  pipeline-parent 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: marked-predecessors 
    -- CP-element group 2: 	6 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	16 
    -- CP-element group 2:  members (2) 
      -- CP-element group 2: 	 stmt_1123_to_stmt_1133/cmd_word_update_enable_out
      -- CP-element group 2: 	 stmt_1123_to_stmt_1133/cmd_word_update_enable
      -- 
    access_iunit_registers_cp_element_group_2: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 41) := "access_iunit_registers_cp_element_group_2"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= access_iunit_registers_CP_187_elements(6);
      gj_access_iunit_registers_cp_element_group_2 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_iunit_registers_CP_187_elements(2), clk => clk, reset => reset); --
    end block;
    -- CP-element group 3:  transition  bypass  pipeline-parent 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	17 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	12 
    -- CP-element group 3:  members (2) 
      -- CP-element group 3: 	 stmt_1123_to_stmt_1133/response_word_update_enable_in
      -- CP-element group 3: 	 stmt_1123_to_stmt_1133/response_word_update_enable
      -- 
    access_iunit_registers_CP_187_elements(3) <= access_iunit_registers_CP_187_elements(17);
    -- CP-element group 4:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	1 
    -- CP-element group 4: marked-predecessors 
    -- CP-element group 4: 	6 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	6 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 stmt_1123_to_stmt_1133/CONCAT_u41_u42_1127_Sample/$entry
      -- CP-element group 4: 	 stmt_1123_to_stmt_1133/CONCAT_u41_u42_1127_Sample/rr
      -- CP-element group 4: 	 stmt_1123_to_stmt_1133/CONCAT_u41_u42_1127_sample_start_
      -- 
    rr_204_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_204_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_iunit_registers_CP_187_elements(4), ack => CONCAT_u41_u42_1127_inst_req_0); -- 
    access_iunit_registers_cp_element_group_4: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 41) := "access_iunit_registers_cp_element_group_4"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_iunit_registers_CP_187_elements(1) & access_iunit_registers_CP_187_elements(6);
      gj_access_iunit_registers_cp_element_group_4 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_iunit_registers_CP_187_elements(4), clk => clk, reset => reset); --
    end block;
    -- CP-element group 5:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: marked-predecessors 
    -- CP-element group 5: 	7 
    -- CP-element group 5: 	9 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	7 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 stmt_1123_to_stmt_1133/CONCAT_u41_u42_1127_Update/cr
      -- CP-element group 5: 	 stmt_1123_to_stmt_1133/CONCAT_u41_u42_1127_Update/$entry
      -- CP-element group 5: 	 stmt_1123_to_stmt_1133/CONCAT_u41_u42_1127_update_start_
      -- 
    cr_209_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_209_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_iunit_registers_CP_187_elements(5), ack => CONCAT_u41_u42_1127_inst_req_1); -- 
    access_iunit_registers_cp_element_group_5: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 41) := "access_iunit_registers_cp_element_group_5"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_iunit_registers_CP_187_elements(7) & access_iunit_registers_CP_187_elements(9);
      gj_access_iunit_registers_cp_element_group_5 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_iunit_registers_CP_187_elements(5), clk => clk, reset => reset); --
    end block;
    -- CP-element group 6:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	4 
    -- CP-element group 6: successors 
    -- CP-element group 6: marked-successors 
    -- CP-element group 6: 	2 
    -- CP-element group 6: 	4 
    -- CP-element group 6:  members (3) 
      -- CP-element group 6: 	 stmt_1123_to_stmt_1133/CONCAT_u41_u42_1127_Sample/$exit
      -- CP-element group 6: 	 stmt_1123_to_stmt_1133/CONCAT_u41_u42_1127_Sample/ra
      -- CP-element group 6: 	 stmt_1123_to_stmt_1133/CONCAT_u41_u42_1127_sample_completed_
      -- 
    ra_205_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u41_u42_1127_inst_ack_0, ack => access_iunit_registers_CP_187_elements(6)); -- 
    -- CP-element group 7:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	5 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	8 
    -- CP-element group 7: marked-successors 
    -- CP-element group 7: 	5 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 stmt_1123_to_stmt_1133/CONCAT_u41_u42_1127_Update/ca
      -- CP-element group 7: 	 stmt_1123_to_stmt_1133/CONCAT_u41_u42_1127_Update/$exit
      -- CP-element group 7: 	 stmt_1123_to_stmt_1133/CONCAT_u41_u42_1127_update_completed_
      -- 
    ca_210_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u41_u42_1127_inst_ack_1, ack => access_iunit_registers_CP_187_elements(7)); -- 
    -- CP-element group 8:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	7 
    -- CP-element group 8: marked-predecessors 
    -- CP-element group 8: 	10 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	9 
    -- CP-element group 8:  members (3) 
      -- CP-element group 8: 	 stmt_1123_to_stmt_1133/WPIPE_ccu_to_teu_iunit_register_access_command_1124_Sample/$entry
      -- CP-element group 8: 	 stmt_1123_to_stmt_1133/WPIPE_ccu_to_teu_iunit_register_access_command_1124_sample_start_
      -- CP-element group 8: 	 stmt_1123_to_stmt_1133/WPIPE_ccu_to_teu_iunit_register_access_command_1124_Sample/req
      -- 
    req_218_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_218_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_iunit_registers_CP_187_elements(8), ack => WPIPE_ccu_to_teu_iunit_register_access_command_1124_inst_req_0); -- 
    access_iunit_registers_cp_element_group_8: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 41) := "access_iunit_registers_cp_element_group_8"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_iunit_registers_CP_187_elements(7) & access_iunit_registers_CP_187_elements(10);
      gj_access_iunit_registers_cp_element_group_8 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_iunit_registers_CP_187_elements(8), clk => clk, reset => reset); --
    end block;
    -- CP-element group 9:  fork  transition  input  output  bypass  pipeline-parent 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	8 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	10 
    -- CP-element group 9: marked-successors 
    -- CP-element group 9: 	5 
    -- CP-element group 9:  members (6) 
      -- CP-element group 9: 	 stmt_1123_to_stmt_1133/WPIPE_ccu_to_teu_iunit_register_access_command_1124_Sample/$exit
      -- CP-element group 9: 	 stmt_1123_to_stmt_1133/WPIPE_ccu_to_teu_iunit_register_access_command_1124_update_start_
      -- CP-element group 9: 	 stmt_1123_to_stmt_1133/WPIPE_ccu_to_teu_iunit_register_access_command_1124_sample_completed_
      -- CP-element group 9: 	 stmt_1123_to_stmt_1133/WPIPE_ccu_to_teu_iunit_register_access_command_1124_Update/req
      -- CP-element group 9: 	 stmt_1123_to_stmt_1133/WPIPE_ccu_to_teu_iunit_register_access_command_1124_Update/$entry
      -- CP-element group 9: 	 stmt_1123_to_stmt_1133/WPIPE_ccu_to_teu_iunit_register_access_command_1124_Sample/ack
      -- 
    ack_219_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_teu_iunit_register_access_command_1124_inst_ack_0, ack => access_iunit_registers_CP_187_elements(9)); -- 
    req_223_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_223_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_iunit_registers_CP_187_elements(9), ack => WPIPE_ccu_to_teu_iunit_register_access_command_1124_inst_req_1); -- 
    -- CP-element group 10:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	9 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	15 
    -- CP-element group 10: marked-successors 
    -- CP-element group 10: 	8 
    -- CP-element group 10:  members (3) 
      -- CP-element group 10: 	 stmt_1123_to_stmt_1133/WPIPE_ccu_to_teu_iunit_register_access_command_1124_update_completed_
      -- CP-element group 10: 	 stmt_1123_to_stmt_1133/WPIPE_ccu_to_teu_iunit_register_access_command_1124_Update/$exit
      -- CP-element group 10: 	 stmt_1123_to_stmt_1133/WPIPE_ccu_to_teu_iunit_register_access_command_1124_Update/ack
      -- 
    ack_224_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_teu_iunit_register_access_command_1124_inst_ack_1, ack => access_iunit_registers_CP_187_elements(10)); -- 
    -- CP-element group 11:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	1 
    -- CP-element group 11: marked-predecessors 
    -- CP-element group 11: 	14 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	13 
    -- CP-element group 11:  members (3) 
      -- CP-element group 11: 	 stmt_1123_to_stmt_1133/RPIPE_teu_to_ccu_iunit_register_access_response_1130_Sample/rr
      -- CP-element group 11: 	 stmt_1123_to_stmt_1133/RPIPE_teu_to_ccu_iunit_register_access_response_1130_Sample/$entry
      -- CP-element group 11: 	 stmt_1123_to_stmt_1133/RPIPE_teu_to_ccu_iunit_register_access_response_1130_sample_start_
      -- 
    rr_232_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_232_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_iunit_registers_CP_187_elements(11), ack => RPIPE_teu_to_ccu_iunit_register_access_response_1130_inst_req_0); -- 
    access_iunit_registers_cp_element_group_11: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 42) := "access_iunit_registers_cp_element_group_11"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_iunit_registers_CP_187_elements(1) & access_iunit_registers_CP_187_elements(14);
      gj_access_iunit_registers_cp_element_group_11 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_iunit_registers_CP_187_elements(11), clk => clk, reset => reset); --
    end block;
    -- CP-element group 12:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	3 
    -- CP-element group 12: 	13 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	14 
    -- CP-element group 12:  members (3) 
      -- CP-element group 12: 	 stmt_1123_to_stmt_1133/RPIPE_teu_to_ccu_iunit_register_access_response_1130_Update/cr
      -- CP-element group 12: 	 stmt_1123_to_stmt_1133/RPIPE_teu_to_ccu_iunit_register_access_response_1130_Update/$entry
      -- CP-element group 12: 	 stmt_1123_to_stmt_1133/RPIPE_teu_to_ccu_iunit_register_access_response_1130_update_start_
      -- 
    cr_237_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_237_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_iunit_registers_CP_187_elements(12), ack => RPIPE_teu_to_ccu_iunit_register_access_response_1130_inst_req_1); -- 
    access_iunit_registers_cp_element_group_12: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 42) := "access_iunit_registers_cp_element_group_12"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_iunit_registers_CP_187_elements(3) & access_iunit_registers_CP_187_elements(13);
      gj_access_iunit_registers_cp_element_group_12 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_iunit_registers_CP_187_elements(12), clk => clk, reset => reset); --
    end block;
    -- CP-element group 13:  transition  input  bypass  pipeline-parent 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	11 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	12 
    -- CP-element group 13:  members (3) 
      -- CP-element group 13: 	 stmt_1123_to_stmt_1133/RPIPE_teu_to_ccu_iunit_register_access_response_1130_Sample/ra
      -- CP-element group 13: 	 stmt_1123_to_stmt_1133/RPIPE_teu_to_ccu_iunit_register_access_response_1130_Sample/$exit
      -- CP-element group 13: 	 stmt_1123_to_stmt_1133/RPIPE_teu_to_ccu_iunit_register_access_response_1130_sample_completed_
      -- 
    ra_233_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_teu_to_ccu_iunit_register_access_response_1130_inst_ack_0, ack => access_iunit_registers_CP_187_elements(13)); -- 
    -- CP-element group 14:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	12 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	15 
    -- CP-element group 14: marked-successors 
    -- CP-element group 14: 	11 
    -- CP-element group 14:  members (3) 
      -- CP-element group 14: 	 stmt_1123_to_stmt_1133/RPIPE_teu_to_ccu_iunit_register_access_response_1130_Update/ca
      -- CP-element group 14: 	 stmt_1123_to_stmt_1133/RPIPE_teu_to_ccu_iunit_register_access_response_1130_Update/$exit
      -- CP-element group 14: 	 stmt_1123_to_stmt_1133/RPIPE_teu_to_ccu_iunit_register_access_response_1130_update_completed_
      -- 
    ca_238_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_teu_to_ccu_iunit_register_access_response_1130_inst_ack_1, ack => access_iunit_registers_CP_187_elements(14)); -- 
    -- CP-element group 15:  join  transition  bypass  pipeline-parent 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	10 
    -- CP-element group 15: 	14 
    -- CP-element group 15: successors 
    -- CP-element group 15: 	18 
    -- CP-element group 15:  members (1) 
      -- CP-element group 15: 	 stmt_1123_to_stmt_1133/$exit
      -- 
    access_iunit_registers_cp_element_group_15: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 42) := "access_iunit_registers_cp_element_group_15"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_iunit_registers_CP_187_elements(10) & access_iunit_registers_CP_187_elements(14);
      gj_access_iunit_registers_cp_element_group_15 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_iunit_registers_CP_187_elements(15), clk => clk, reset => reset); --
    end block;
    -- CP-element group 16:  place  bypass  pipeline-parent 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	2 
    -- CP-element group 16: successors 
    -- CP-element group 16:  members (1) 
      -- CP-element group 16: 	 cmd_word_update_enable
      -- 
    access_iunit_registers_CP_187_elements(16) <= access_iunit_registers_CP_187_elements(2);
    -- CP-element group 17:  place  bypass  pipeline-parent 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	3 
    -- CP-element group 17:  members (1) 
      -- CP-element group 17: 	 response_word_update_enable
      -- 
    -- CP-element group 18:  transition  bypass  pipeline-parent 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	15 
    -- CP-element group 18: successors 
    -- CP-element group 18:  members (1) 
      -- CP-element group 18: 	 $exit
      -- 
    access_iunit_registers_CP_187_elements(18) <= access_iunit_registers_CP_187_elements(15);
    --  hookup: inputs to control-path 
    access_iunit_registers_CP_187_elements(17) <= response_word_update_enable;
    -- hookup: output from control-path 
    cmd_word_update_enable <= access_iunit_registers_CP_187_elements(16);
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal CONCAT_u41_u42_1127_wire : std_logic_vector(41 downto 0);
    signal R_ONE_1_1126_wire_constant : std_logic_vector(0 downto 0);
    -- 
  begin -- 
    R_ONE_1_1126_wire_constant <= "1";
    -- shared split operator group (0) : CONCAT_u41_u42_1127_inst 
    ApConcat_group_0: Block -- 
      signal data_in: std_logic_vector(40 downto 0);
      signal data_out: std_logic_vector(41 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= cmd_word_buffer;
      CONCAT_u41_u42_1127_wire <= data_out(41 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u41_u42_1127_inst_req_0;
      CONCAT_u41_u42_1127_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u41_u42_1127_inst_req_1;
      CONCAT_u41_u42_1127_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_0_gI: SplitGuardInterface generic map(name => "ApConcat_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_0",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 41,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 42,
          constant_operand => "1",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => true,
          use_constant  => true
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- shared inport operator group (0) : RPIPE_teu_to_ccu_iunit_register_access_response_1130_inst 
    InportGroup_0: Block -- 
      signal data_out: std_logic_vector(31 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 0 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= RPIPE_teu_to_ccu_iunit_register_access_response_1130_inst_req_0;
      RPIPE_teu_to_ccu_iunit_register_access_response_1130_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= RPIPE_teu_to_ccu_iunit_register_access_response_1130_inst_req_1;
      RPIPE_teu_to_ccu_iunit_register_access_response_1130_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      response_word_buffer <= data_out(31 downto 0);
      teu_to_ccu_iunit_register_access_response_read_0_gI: SplitGuardInterface generic map(name => "teu_to_ccu_iunit_register_access_response_read_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      teu_to_ccu_iunit_register_access_response_read_0: InputPort_P2P -- 
        generic map ( name => "teu_to_ccu_iunit_register_access_response_read_0", data_width => 32,    bypass_flag => false,   	nonblocking_read_flag => false,  barrier_flag => false,   queue_depth =>  2)
        port map (-- 
          sample_req => reqL(0) , 
          sample_ack => ackL(0), 
          update_req => reqR(0), 
          update_ack => ackR(0), 
          data => data_out, 
          oreq => teu_to_ccu_iunit_register_access_response_pipe_read_req(0),
          oack => teu_to_ccu_iunit_register_access_response_pipe_read_ack(0),
          odata => teu_to_ccu_iunit_register_access_response_pipe_read_data(31 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 0
    -- shared outport operator group (0) : WPIPE_ccu_to_teu_iunit_register_access_command_1124_inst 
    OutportGroup_0: Block -- 
      signal data_in: std_logic_vector(41 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_ccu_to_teu_iunit_register_access_command_1124_inst_req_0;
      WPIPE_ccu_to_teu_iunit_register_access_command_1124_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_ccu_to_teu_iunit_register_access_command_1124_inst_req_1;
      WPIPE_ccu_to_teu_iunit_register_access_command_1124_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= CONCAT_u41_u42_1127_wire;
      ccu_to_teu_iunit_register_access_command_write_0_gI: SplitGuardInterface generic map(name => "ccu_to_teu_iunit_register_access_command_write_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      ccu_to_teu_iunit_register_access_command_write_0: OutputPortRevised -- 
        generic map ( name => "ccu_to_teu_iunit_register_access_command", data_width => 42, num_reqs => 1, input_buffering => inBUFs, full_rate => true,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => ccu_to_teu_iunit_register_access_command_pipe_write_req(0),
          oack => ccu_to_teu_iunit_register_access_command_pipe_write_ack(0),
          odata => ccu_to_teu_iunit_register_access_command_pipe_write_data(41 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 0
    -- 
  end Block; -- data_path
  -- 
end access_iunit_registers_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity access_memory is -- 
  generic (tag_length : integer); 
  port ( -- 
    command : in  std_logic_vector(72 downto 0);
    response : out  std_logic_vector(32 downto 0);
    teu_to_ccu_load_store_response_pipe_read_req : out  std_logic_vector(0 downto 0);
    teu_to_ccu_load_store_response_pipe_read_ack : in   std_logic_vector(0 downto 0);
    teu_to_ccu_load_store_response_pipe_read_data : in   std_logic_vector(32 downto 0);
    ccu_to_teu_load_store_command_pipe_write_req : out  std_logic_vector(0 downto 0);
    ccu_to_teu_load_store_command_pipe_write_ack : in   std_logic_vector(0 downto 0);
    ccu_to_teu_load_store_command_pipe_write_data : out  std_logic_vector(72 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity access_memory;
architecture access_memory_arch of access_memory is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 73)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 33)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal command_buffer :  std_logic_vector(72 downto 0);
  signal command_update_enable: Boolean;
  -- output port buffer signals
  signal response_buffer :  std_logic_vector(32 downto 0);
  signal response_update_enable: Boolean;
  signal access_memory_CP_241_start: Boolean;
  signal access_memory_CP_241_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal WPIPE_ccu_to_teu_load_store_command_1138_inst_req_1 : boolean;
  signal WPIPE_ccu_to_teu_load_store_command_1138_inst_ack_1 : boolean;
  signal WPIPE_ccu_to_teu_load_store_command_1138_inst_req_0 : boolean;
  signal WPIPE_ccu_to_teu_load_store_command_1138_inst_ack_0 : boolean;
  signal RPIPE_teu_to_ccu_load_store_response_1142_inst_req_1 : boolean;
  signal RPIPE_teu_to_ccu_load_store_response_1142_inst_ack_1 : boolean;
  signal RPIPE_teu_to_ccu_load_store_response_1142_inst_req_0 : boolean;
  signal RPIPE_teu_to_ccu_load_store_response_1142_inst_ack_0 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "access_memory_input_buffer", -- 
      buffer_size => 0,
      bypass_flag => true,
      data_width => tag_length + 73) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(72 downto 0) <= command;
  command_buffer <= in_buffer_data_out(72 downto 0);
  in_buffer_data_in(tag_length + 72 downto 73) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 72 downto 73);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  access_memory_CP_241_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "access_memory_out_buffer", -- 
      buffer_size => 0,
      full_rate => false,
      data_width => tag_length + 33) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(32 downto 0) <= response_buffer;
  response <= out_buffer_data_out(32 downto 0);
  out_buffer_data_in(tag_length + 32 downto 33) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 32 downto 33);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= access_memory_CP_241_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= access_memory_CP_241_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= access_memory_CP_241_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  access_memory_CP_241: Block -- control-path 
    signal access_memory_CP_241_elements: BooleanArray(5 downto 0);
    -- 
  begin -- 
    access_memory_CP_241_elements(0) <= access_memory_CP_241_start;
    access_memory_CP_241_symbol <= access_memory_CP_241_elements(5);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	3 
    -- CP-element group 0:  members (8) 
      -- CP-element group 0: 	 assign_stmt_1140_to_assign_stmt_1143/WPIPE_ccu_to_teu_load_store_command_1138_Sample/req
      -- CP-element group 0: 	 assign_stmt_1140_to_assign_stmt_1143/RPIPE_teu_to_ccu_load_store_response_1142_Sample/rr
      -- CP-element group 0: 	 assign_stmt_1140_to_assign_stmt_1143/RPIPE_teu_to_ccu_load_store_response_1142_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1140_to_assign_stmt_1143/RPIPE_teu_to_ccu_load_store_response_1142_sample_start_
      -- CP-element group 0: 	 assign_stmt_1140_to_assign_stmt_1143/WPIPE_ccu_to_teu_load_store_command_1138_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1140_to_assign_stmt_1143/WPIPE_ccu_to_teu_load_store_command_1138_sample_start_
      -- CP-element group 0: 	 assign_stmt_1140_to_assign_stmt_1143/$entry
      -- CP-element group 0: 	 $entry
      -- 
    req_254_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_254_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_memory_CP_241_elements(0), ack => WPIPE_ccu_to_teu_load_store_command_1138_inst_req_0); -- 
    rr_268_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_268_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_memory_CP_241_elements(0), ack => RPIPE_teu_to_ccu_load_store_response_1142_inst_req_0); -- 
    -- CP-element group 1:  transition  input  output  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1: 	2 
    -- CP-element group 1:  members (6) 
      -- CP-element group 1: 	 assign_stmt_1140_to_assign_stmt_1143/WPIPE_ccu_to_teu_load_store_command_1138_Update/req
      -- CP-element group 1: 	 assign_stmt_1140_to_assign_stmt_1143/WPIPE_ccu_to_teu_load_store_command_1138_Update/$entry
      -- CP-element group 1: 	 assign_stmt_1140_to_assign_stmt_1143/WPIPE_ccu_to_teu_load_store_command_1138_Sample/ack
      -- CP-element group 1: 	 assign_stmt_1140_to_assign_stmt_1143/WPIPE_ccu_to_teu_load_store_command_1138_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_1140_to_assign_stmt_1143/WPIPE_ccu_to_teu_load_store_command_1138_sample_completed_
      -- CP-element group 1: 	 assign_stmt_1140_to_assign_stmt_1143/WPIPE_ccu_to_teu_load_store_command_1138_update_start_
      -- 
    ack_255_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_teu_load_store_command_1138_inst_ack_0, ack => access_memory_CP_241_elements(1)); -- 
    req_259_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_259_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_memory_CP_241_elements(1), ack => WPIPE_ccu_to_teu_load_store_command_1138_inst_req_1); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	1 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	5 
    -- CP-element group 2:  members (3) 
      -- CP-element group 2: 	 assign_stmt_1140_to_assign_stmt_1143/WPIPE_ccu_to_teu_load_store_command_1138_Update/ack
      -- CP-element group 2: 	 assign_stmt_1140_to_assign_stmt_1143/WPIPE_ccu_to_teu_load_store_command_1138_Update/$exit
      -- CP-element group 2: 	 assign_stmt_1140_to_assign_stmt_1143/WPIPE_ccu_to_teu_load_store_command_1138_update_completed_
      -- 
    ack_260_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_teu_load_store_command_1138_inst_ack_1, ack => access_memory_CP_241_elements(2)); -- 
    -- CP-element group 3:  transition  input  output  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	0 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	4 
    -- CP-element group 3:  members (6) 
      -- CP-element group 3: 	 assign_stmt_1140_to_assign_stmt_1143/RPIPE_teu_to_ccu_load_store_response_1142_Update/cr
      -- CP-element group 3: 	 assign_stmt_1140_to_assign_stmt_1143/RPIPE_teu_to_ccu_load_store_response_1142_Update/$entry
      -- CP-element group 3: 	 assign_stmt_1140_to_assign_stmt_1143/RPIPE_teu_to_ccu_load_store_response_1142_Sample/ra
      -- CP-element group 3: 	 assign_stmt_1140_to_assign_stmt_1143/RPIPE_teu_to_ccu_load_store_response_1142_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_1140_to_assign_stmt_1143/RPIPE_teu_to_ccu_load_store_response_1142_sample_completed_
      -- CP-element group 3: 	 assign_stmt_1140_to_assign_stmt_1143/RPIPE_teu_to_ccu_load_store_response_1142_update_start_
      -- 
    ra_269_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_teu_to_ccu_load_store_response_1142_inst_ack_0, ack => access_memory_CP_241_elements(3)); -- 
    cr_273_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_273_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => access_memory_CP_241_elements(3), ack => RPIPE_teu_to_ccu_load_store_response_1142_inst_req_1); -- 
    -- CP-element group 4:  transition  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	3 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	5 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 assign_stmt_1140_to_assign_stmt_1143/RPIPE_teu_to_ccu_load_store_response_1142_Update/ca
      -- CP-element group 4: 	 assign_stmt_1140_to_assign_stmt_1143/RPIPE_teu_to_ccu_load_store_response_1142_Update/$exit
      -- CP-element group 4: 	 assign_stmt_1140_to_assign_stmt_1143/RPIPE_teu_to_ccu_load_store_response_1142_update_completed_
      -- 
    ca_274_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_teu_to_ccu_load_store_response_1142_inst_ack_1, ack => access_memory_CP_241_elements(4)); -- 
    -- CP-element group 5:  join  transition  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	2 
    -- CP-element group 5: 	4 
    -- CP-element group 5: successors 
    -- CP-element group 5:  members (2) 
      -- CP-element group 5: 	 assign_stmt_1140_to_assign_stmt_1143/$exit
      -- CP-element group 5: 	 $exit
      -- 
    access_memory_cp_element_group_5: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 32) := "access_memory_cp_element_group_5"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= access_memory_CP_241_elements(2) & access_memory_CP_241_elements(4);
      gj_access_memory_cp_element_group_5 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => access_memory_CP_241_elements(5), clk => clk, reset => reset); --
    end block;
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    -- 
  begin -- 
    -- shared inport operator group (0) : RPIPE_teu_to_ccu_load_store_response_1142_inst 
    InportGroup_0: Block -- 
      signal data_out: std_logic_vector(32 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 0 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= RPIPE_teu_to_ccu_load_store_response_1142_inst_req_0;
      RPIPE_teu_to_ccu_load_store_response_1142_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= RPIPE_teu_to_ccu_load_store_response_1142_inst_req_1;
      RPIPE_teu_to_ccu_load_store_response_1142_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      response_buffer <= data_out(32 downto 0);
      teu_to_ccu_load_store_response_read_0_gI: SplitGuardInterface generic map(name => "teu_to_ccu_load_store_response_read_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      teu_to_ccu_load_store_response_read_0: InputPort_P2P -- 
        generic map ( name => "teu_to_ccu_load_store_response_read_0", data_width => 33,    bypass_flag => false,   	nonblocking_read_flag => false,  barrier_flag => false,   queue_depth =>  2)
        port map (-- 
          sample_req => reqL(0) , 
          sample_ack => ackL(0), 
          update_req => reqR(0), 
          update_ack => ackR(0), 
          data => data_out, 
          oreq => teu_to_ccu_load_store_response_pipe_read_req(0),
          oack => teu_to_ccu_load_store_response_pipe_read_ack(0),
          odata => teu_to_ccu_load_store_response_pipe_read_data(32 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 0
    -- shared outport operator group (0) : WPIPE_ccu_to_teu_load_store_command_1138_inst 
    OutportGroup_0: Block -- 
      signal data_in: std_logic_vector(72 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_ccu_to_teu_load_store_command_1138_inst_req_0;
      WPIPE_ccu_to_teu_load_store_command_1138_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_ccu_to_teu_load_store_command_1138_inst_req_1;
      WPIPE_ccu_to_teu_load_store_command_1138_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= command_buffer;
      ccu_to_teu_load_store_command_write_0_gI: SplitGuardInterface generic map(name => "ccu_to_teu_load_store_command_write_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      ccu_to_teu_load_store_command_write_0: OutputPortRevised -- 
        generic map ( name => "ccu_to_teu_load_store_command", data_width => 73, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => ccu_to_teu_load_store_command_pipe_write_req(0),
          oack => ccu_to_teu_load_store_command_pipe_write_ack(0),
          odata => ccu_to_teu_load_store_command_pipe_write_data(72 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 0
    -- 
  end Block; -- data_path
  -- 
end access_memory_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity advancePC_Volatile is -- 
  port ( -- 
    i_run_thread : in  std_logic_vector(0 downto 0);
    i_debug_mode_selected : in  std_logic_vector(0 downto 0);
    i_single_step_mode : in  std_logic_vector(0 downto 0);
    i_machine_error : in  std_logic_vector(0 downto 0);
    i_exception_found : in  std_logic_vector(0 downto 0);
    i_interrupt_found : in  std_logic_vector(0 downto 0);
    i_annul_instr : in  std_logic_vector(0 downto 0);
    i_annul_next_instr : in  std_logic_vector(0 downto 0);
    i_dbg_status : in  std_logic_vector(7 downto 0);
    i_PC : in  std_logic_vector(31 downto 0);
    i_NPC : in  std_logic_vector(31 downto 0);
    i_NNPC : in  std_logic_vector(31 downto 0);
    o_annul_instr : out  std_logic_vector(0 downto 0);
    o_PC : out  std_logic_vector(31 downto 0);
    o_NPC : out  std_logic_vector(31 downto 0)-- 
  );
  -- 
end entity advancePC_Volatile;
architecture advancePC_Volatile_arch of advancePC_Volatile is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector(112-1 downto 0);
  signal default_zero_sig: std_logic;
  -- input port buffer signals
  signal i_run_thread_buffer :  std_logic_vector(0 downto 0);
  signal i_debug_mode_selected_buffer :  std_logic_vector(0 downto 0);
  signal i_single_step_mode_buffer :  std_logic_vector(0 downto 0);
  signal i_machine_error_buffer :  std_logic_vector(0 downto 0);
  signal i_exception_found_buffer :  std_logic_vector(0 downto 0);
  signal i_interrupt_found_buffer :  std_logic_vector(0 downto 0);
  signal i_annul_instr_buffer :  std_logic_vector(0 downto 0);
  signal i_annul_next_instr_buffer :  std_logic_vector(0 downto 0);
  signal i_dbg_status_buffer :  std_logic_vector(7 downto 0);
  signal i_PC_buffer :  std_logic_vector(31 downto 0);
  signal i_NPC_buffer :  std_logic_vector(31 downto 0);
  signal i_NNPC_buffer :  std_logic_vector(31 downto 0);
  -- output port buffer signals
  signal o_annul_instr_buffer :  std_logic_vector(0 downto 0);
  signal o_PC_buffer :  std_logic_vector(31 downto 0);
  signal o_NPC_buffer :  std_logic_vector(31 downto 0);
  -- volatile/operator module components. 
  -- 
begin --  
  -- input handling ------------------------------------------------
  i_run_thread_buffer <= i_run_thread;
  i_debug_mode_selected_buffer <= i_debug_mode_selected;
  i_single_step_mode_buffer <= i_single_step_mode;
  i_machine_error_buffer <= i_machine_error;
  i_exception_found_buffer <= i_exception_found;
  i_interrupt_found_buffer <= i_interrupt_found;
  i_annul_instr_buffer <= i_annul_instr;
  i_annul_next_instr_buffer <= i_annul_next_instr;
  i_dbg_status_buffer <= i_dbg_status;
  i_PC_buffer <= i_PC;
  i_NPC_buffer <= i_NPC;
  i_NNPC_buffer <= i_NNPC;
  -- output handling  -------------------------------------------------------
  o_annul_instr <= o_annul_instr_buffer;
  o_PC <= o_PC_buffer;
  o_NPC <= o_NPC_buffer;
  -- the control path --------------------------------------------------
  default_zero_sig <= '0';
  -- volatile module, no control path
  -- the data path
  data_path: Block -- 
    signal AND_u1_u1_1208_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_1211_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_1216_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_1219_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_1224_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_1227_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_1228_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_1207_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_1210_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_1218_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_1221_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_1223_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_1226_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_1205_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_1215_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_1229_wire : std_logic_vector(0 downto 0);
    signal bp_hit_1168 : std_logic_vector(0 downto 0);
    signal ccu_interrupted_1198 : std_logic_vector(0 downto 0);
    signal dbg_interrupt_1164 : std_logic_vector(0 downto 0);
    signal go_to_next_instr_1231 : std_logic_vector(0 downto 0);
    signal read_wp_hit_1172 : std_logic_vector(0 downto 0);
    signal wp_hit_1181 : std_logic_vector(0 downto 0);
    signal write_wp_hit_1176 : std_logic_vector(0 downto 0);
    -- 
  begin -- 
    -- flow-through select operator MUX_1236_inst
    o_PC_buffer <= i_NPC_buffer when (go_to_next_instr_1231(0) /=  '0') else i_PC_buffer;
    -- flow-through select operator MUX_1242_inst
    o_NPC_buffer <= i_NNPC_buffer when (go_to_next_instr_1231(0) /=  '0') else i_NPC_buffer;
    -- flow-through select operator MUX_1248_inst
    o_annul_instr_buffer <= i_annul_next_instr_buffer when (go_to_next_instr_1231(0) /=  '0') else i_annul_instr_buffer;
    -- flow-through slice operator slice_1163_inst
    dbg_interrupt_1164 <= i_dbg_status_buffer(7 downto 7);
    -- flow-through slice operator slice_1167_inst
    bp_hit_1168 <= i_dbg_status_buffer(4 downto 4);
    -- flow-through slice operator slice_1171_inst
    read_wp_hit_1172 <= i_dbg_status_buffer(1 downto 1);
    -- flow-through slice operator slice_1175_inst
    write_wp_hit_1176 <= i_dbg_status_buffer(0 downto 0);
    -- flow through binary operator AND_u1_u1_1197_inst
    ccu_interrupted_1198 <= (i_interrupt_found_buffer and i_run_thread_buffer);
    -- flow through binary operator AND_u1_u1_1208_inst
    AND_u1_u1_1208_wire <= (OR_u1_u1_1205_wire and NOT_u1_u1_1207_wire);
    -- flow through binary operator AND_u1_u1_1211_inst
    AND_u1_u1_1211_wire <= (AND_u1_u1_1208_wire and NOT_u1_u1_1210_wire);
    -- flow through binary operator AND_u1_u1_1216_inst
    AND_u1_u1_1216_wire <= (i_debug_mode_selected_buffer and OR_u1_u1_1215_wire);
    -- flow through binary operator AND_u1_u1_1219_inst
    AND_u1_u1_1219_wire <= (AND_u1_u1_1216_wire and NOT_u1_u1_1218_wire);
    -- flow through binary operator AND_u1_u1_1224_inst
    AND_u1_u1_1224_wire <= (NOT_u1_u1_1221_wire and NOT_u1_u1_1223_wire);
    -- flow through binary operator AND_u1_u1_1227_inst
    AND_u1_u1_1227_wire <= (AND_u1_u1_1224_wire and NOT_u1_u1_1226_wire);
    -- flow through binary operator AND_u1_u1_1228_inst
    AND_u1_u1_1228_wire <= (AND_u1_u1_1219_wire and AND_u1_u1_1227_wire);
    -- flow through binary operator AND_u1_u1_1230_inst
    go_to_next_instr_1231 <= (i_run_thread_buffer and OR_u1_u1_1229_wire);
    -- unary operator NOT_u1_u1_1207_inst
    process(i_machine_error_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", i_machine_error_buffer, tmp_var);
      NOT_u1_u1_1207_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_1210_inst
    process(i_exception_found_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", i_exception_found_buffer, tmp_var);
      NOT_u1_u1_1210_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_1218_inst
    process(bp_hit_1168) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", bp_hit_1168, tmp_var);
      NOT_u1_u1_1218_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_1221_inst
    process(i_machine_error_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", i_machine_error_buffer, tmp_var);
      NOT_u1_u1_1221_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_1223_inst
    process(i_exception_found_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", i_exception_found_buffer, tmp_var);
      NOT_u1_u1_1223_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_1226_inst
    process(i_interrupt_found_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", i_interrupt_found_buffer, tmp_var);
      NOT_u1_u1_1226_wire <= tmp_var; -- 
    end process;
    -- flow through binary operator OR_u1_u1_1180_inst
    wp_hit_1181 <= (read_wp_hit_1172 or write_wp_hit_1176);
    -- flow through binary operator OR_u1_u1_1205_inst
    OR_u1_u1_1205_wire <= (i_single_step_mode_buffer or i_interrupt_found_buffer);
    -- flow through binary operator OR_u1_u1_1215_inst
    OR_u1_u1_1215_wire <= (wp_hit_1181 or dbg_interrupt_1164);
    -- flow through binary operator OR_u1_u1_1229_inst
    OR_u1_u1_1229_wire <= (AND_u1_u1_1211_wire or AND_u1_u1_1228_wire);
    -- 
  end Block; -- data_path
  -- 
end advancePC_Volatile_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity calculatePostTrapRegisterValues_Volatile is -- 
  port ( -- 
    exec_trap_flag : in  std_logic_vector(0 downto 0);
    iPMODE : in  std_logic_vector(1 downto 0);
    iPSR : in  std_logic_vector(31 downto 0);
    iTBR : in  std_logic_vector(31 downto 0);
    iTV : in  std_logic_vector(31 downto 0);
    iPC : in  std_logic_vector(31 downto 0);
    iNPC : in  std_logic_vector(31 downto 0);
    iILVL : in  std_logic_vector(3 downto 0);
    iTICC_TRAP_TYPE : in  std_logic_vector(6 downto 0);
    iANNUL : in  std_logic_vector(0 downto 0);
    init_PC : in  std_logic_vector(31 downto 0);
    init_NPC : in  std_logic_vector(31 downto 0);
    oPMODE : out  std_logic_vector(1 downto 0);
    oPSR : out  std_logic_vector(31 downto 0);
    oTBR : out  std_logic_vector(31 downto 0);
    oTV : out  std_logic_vector(31 downto 0);
    oPC : out  std_logic_vector(31 downto 0);
    oNPC : out  std_logic_vector(31 downto 0);
    oL1 : out  std_logic_vector(31 downto 0);
    oL2 : out  std_logic_vector(31 downto 0)-- 
  );
  -- 
end entity calculatePostTrapRegisterValues_Volatile;
architecture calculatePostTrapRegisterValues_Volatile_arch of calculatePostTrapRegisterValues_Volatile is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector(239-1 downto 0);
  signal default_zero_sig: std_logic;
  -- input port buffer signals
  signal exec_trap_flag_buffer :  std_logic_vector(0 downto 0);
  signal iPMODE_buffer :  std_logic_vector(1 downto 0);
  signal iPSR_buffer :  std_logic_vector(31 downto 0);
  signal iTBR_buffer :  std_logic_vector(31 downto 0);
  signal iTV_buffer :  std_logic_vector(31 downto 0);
  signal iPC_buffer :  std_logic_vector(31 downto 0);
  signal iNPC_buffer :  std_logic_vector(31 downto 0);
  signal iILVL_buffer :  std_logic_vector(3 downto 0);
  signal iTICC_TRAP_TYPE_buffer :  std_logic_vector(6 downto 0);
  signal iANNUL_buffer :  std_logic_vector(0 downto 0);
  signal init_PC_buffer :  std_logic_vector(31 downto 0);
  signal init_NPC_buffer :  std_logic_vector(31 downto 0);
  -- output port buffer signals
  signal oPMODE_buffer :  std_logic_vector(1 downto 0);
  signal oPSR_buffer :  std_logic_vector(31 downto 0);
  signal oTBR_buffer :  std_logic_vector(31 downto 0);
  signal oTV_buffer :  std_logic_vector(31 downto 0);
  signal oPC_buffer :  std_logic_vector(31 downto 0);
  signal oNPC_buffer :  std_logic_vector(31 downto 0);
  signal oL1_buffer :  std_logic_vector(31 downto 0);
  signal oL2_buffer :  std_logic_vector(31 downto 0);
  -- volatile/operator module components. 
  -- 
begin --  
  -- input handling ------------------------------------------------
  exec_trap_flag_buffer <= exec_trap_flag;
  iPMODE_buffer <= iPMODE;
  iPSR_buffer <= iPSR;
  iTBR_buffer <= iTBR;
  iTV_buffer <= iTV;
  iPC_buffer <= iPC;
  iNPC_buffer <= iNPC;
  iILVL_buffer <= iILVL;
  iTICC_TRAP_TYPE_buffer <= iTICC_TRAP_TYPE;
  iANNUL_buffer <= iANNUL;
  init_PC_buffer <= init_PC;
  init_NPC_buffer <= init_NPC;
  -- output handling  -------------------------------------------------------
  oPMODE <= oPMODE_buffer;
  oPSR <= oPSR_buffer;
  oTBR <= oTBR_buffer;
  oTV <= oTV_buffer;
  oTV_buffer <= "00000000000000000000000000000000";
  oPC <= oPC_buffer;
  oNPC <= oNPC_buffer;
  oL1 <= oL1_buffer;
  oL2 <= oL2_buffer;
  -- the control path --------------------------------------------------
  default_zero_sig <= '0';
  -- volatile module, no control path
  -- the data path
  data_path: Block -- 
    signal ADD_u32_u32_1360_wire : std_logic_vector(31 downto 0);
    signal ADD_u32_u32_1407_wire : std_logic_vector(31 downto 0);
    signal BITSEL_u32_u1_1309_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1317_wire : std_logic_vector(0 downto 0);
    signal CONCAT_u1_u6_1394_wire : std_logic_vector(5 downto 0);
    signal CONCAT_u24_u25_1389_wire : std_logic_vector(24 downto 0);
    signal CONCAT_u25_u26_1391_wire : std_logic_vector(25 downto 0);
    signal CWP_1332 : std_logic_vector(4 downto 0);
    signal EQ_u2_u1_1301_wire : std_logic_vector(0 downto 0);
    signal ET_1280 : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_1368_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_1375_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_1310_wire : std_logic_vector(0 downto 0);
    signal R_ANNUL_TRAP_INDEX_1308_wire_constant : std_logic_vector(31 downto 0);
    signal R_NWINDOWS_MOD_MASK_5_1343_wire_constant : std_logic_vector(4 downto 0);
    signal R_PROCESSOR_ERROR_MODE_1300_wire_constant : std_logic_vector(1 downto 0);
    signal R_RESET_TRAP_TRAP_INDEX_1316_wire_constant : std_logic_vector(31 downto 0);
    signal R_TRACE_ON_1283_wire_constant : std_logic_vector(0 downto 0);
    signal SUB_u5_u5_1342_wire : std_logic_vector(4 downto 0);
    signal S_1328 : std_logic_vector(0 downto 0);
    signal is_annul_1312 : std_logic_vector(0 downto 0);
    signal is_in_error_mode_1303 : std_logic_vector(0 downto 0);
    signal is_reset_trap_1319 : std_logic_vector(0 downto 0);
    signal konst_1278_wire_constant : std_logic_vector(31 downto 0);
    signal konst_1326_wire_constant : std_logic_vector(31 downto 0);
    signal konst_1341_wire_constant : std_logic_vector(4 downto 0);
    signal konst_1359_wire_constant : std_logic_vector(31 downto 0);
    signal konst_1406_wire_constant : std_logic_vector(31 downto 0);
    signal next_CWP_1345 : std_logic_vector(4 downto 0);
    signal next_ET_1335 : std_logic_vector(0 downto 0);
    signal next_PS_1338 : std_logic_vector(0 downto 0);
    signal next_S_1348 : std_logic_vector(0 downto 0);
    signal psr_31_8_1323 : std_logic_vector(23 downto 0);
    signal tbr_NPC_1362 : std_logic_vector(31 downto 0);
    signal tbr_PC_1354 : std_logic_vector(31 downto 0);
    signal trace_on_flag_1285 : std_logic_vector(0 downto 0);
    -- 
  begin -- 
    R_ANNUL_TRAP_INDEX_1308_wire_constant <= "00000000000000000000000000000011";
    R_NWINDOWS_MOD_MASK_5_1343_wire_constant <= "00111";
    R_PROCESSOR_ERROR_MODE_1300_wire_constant <= "11";
    R_RESET_TRAP_TRAP_INDEX_1316_wire_constant <= "00000000000000000000000000000001";
    R_TRACE_ON_1283_wire_constant <= "1";
    konst_1278_wire_constant <= "00000000000000000000000000000101";
    konst_1326_wire_constant <= "00000000000000000000000000000111";
    konst_1341_wire_constant <= "00001";
    konst_1359_wire_constant <= "00000000000000000000000000000100";
    konst_1406_wire_constant <= "00000000000000000000000000000100";
    next_ET_1335 <= "0";
    next_S_1348 <= "1";
    -- flow-through select operator MUX_1353_inst
    tbr_PC_1354 <= init_PC_buffer when (is_reset_trap_1319(0) /=  '0') else iTBR_buffer;
    -- flow-through select operator MUX_1361_inst
    tbr_NPC_1362 <= init_NPC_buffer when (is_reset_trap_1319(0) /=  '0') else ADD_u32_u32_1360_wire;
    -- flow-through select operator MUX_1371_inst
    oPC_buffer <= tbr_PC_1354 when (NOT_u1_u1_1368_wire(0) /=  '0') else iPC_buffer;
    -- flow-through select operator MUX_1378_inst
    oNPC_buffer <= tbr_NPC_1362 when (NOT_u1_u1_1375_wire(0) /=  '0') else iNPC_buffer;
    -- flow-through select operator MUX_1401_inst
    oL1_buffer <= iNPC_buffer when (is_annul_1312(0) /=  '0') else iPC_buffer;
    -- flow-through select operator MUX_1409_inst
    oL2_buffer <= ADD_u32_u32_1407_wire when (is_annul_1312(0) /=  '0') else iNPC_buffer;
    -- flow-through slice operator slice_1322_inst
    psr_31_8_1323 <= iPSR_buffer(31 downto 8);
    -- flow-through slice operator slice_1331_inst
    CWP_1332 <= iPSR_buffer(4 downto 0);
    -- interlock W_next_PS_1336_inst
    process(S_1328) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 0 downto 0) := S_1328(0 downto 0);
      next_PS_1338 <= tmp_var; -- 
    end process;
    -- interlock W_oPMODE_1380_inst
    process(iPMODE_buffer) -- 
      variable tmp_var : std_logic_vector(1 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 1 downto 0) := iPMODE_buffer(1 downto 0);
      oPMODE_buffer <= tmp_var; -- 
    end process;
    -- interlock W_oTBR_1383_inst
    process(iTBR_buffer) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 31 downto 0) := iTBR_buffer(31 downto 0);
      oTBR_buffer <= tmp_var; -- 
    end process;
    -- flow through binary operator ADD_u32_u32_1360_inst
    ADD_u32_u32_1360_wire <= std_logic_vector(unsigned(iTBR_buffer) + unsigned(konst_1359_wire_constant));
    -- flow through binary operator ADD_u32_u32_1407_inst
    ADD_u32_u32_1407_wire <= std_logic_vector(unsigned(iNPC_buffer) + unsigned(konst_1406_wire_constant));
    -- flow through binary operator AND_u1_u1_1284_inst
    trace_on_flag_1285 <= (exec_trap_flag_buffer and R_TRACE_ON_1283_wire_constant);
    -- flow through binary operator AND_u1_u1_1302_inst
    is_in_error_mode_1303 <= (exec_trap_flag_buffer and EQ_u2_u1_1301_wire);
    -- flow through binary operator AND_u1_u1_1311_inst
    is_annul_1312 <= (exec_trap_flag_buffer and OR_u1_u1_1310_wire);
    -- flow through binary operator AND_u1_u1_1318_inst
    is_reset_trap_1319 <= (exec_trap_flag_buffer and BITSEL_u32_u1_1317_wire);
    -- flow through binary operator AND_u5_u5_1344_inst
    next_CWP_1345 <= (SUB_u5_u5_1342_wire and R_NWINDOWS_MOD_MASK_5_1343_wire_constant);
    -- flow through binary operator BITSEL_u32_u1_1279_inst
    process(iPSR_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iPSR_buffer, konst_1278_wire_constant, tmp_var);
      ET_1280 <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1309_inst
    process(iTV_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_buffer, R_ANNUL_TRAP_INDEX_1308_wire_constant, tmp_var);
      BITSEL_u32_u1_1309_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1317_inst
    process(iTV_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_buffer, R_RESET_TRAP_TRAP_INDEX_1316_wire_constant, tmp_var);
      BITSEL_u32_u1_1317_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1327_inst
    process(iPSR_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iPSR_buffer, konst_1326_wire_constant, tmp_var);
      S_1328 <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u1_u6_1394_inst
    process(next_ET_1335, next_CWP_1345) -- 
      variable tmp_var : std_logic_vector(5 downto 0); -- 
    begin -- 
      ApConcat_proc(next_ET_1335, next_CWP_1345, tmp_var);
      CONCAT_u1_u6_1394_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u24_u25_1389_inst
    process(psr_31_8_1323) -- 
      variable tmp_var : std_logic_vector(24 downto 0); -- 
    begin -- 
      ApConcat_proc(psr_31_8_1323, next_S_1348, tmp_var);
      CONCAT_u24_u25_1389_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u25_u26_1391_inst
    process(CONCAT_u24_u25_1389_wire, next_PS_1338) -- 
      variable tmp_var : std_logic_vector(25 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u24_u25_1389_wire, next_PS_1338, tmp_var);
      CONCAT_u25_u26_1391_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u26_u32_1395_inst
    process(CONCAT_u25_u26_1391_wire, CONCAT_u1_u6_1394_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u25_u26_1391_wire, CONCAT_u1_u6_1394_wire, tmp_var);
      oPSR_buffer <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u2_u1_1301_inst
    process(iPMODE_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(iPMODE_buffer, R_PROCESSOR_ERROR_MODE_1300_wire_constant, tmp_var);
      EQ_u2_u1_1301_wire <= tmp_var; --
    end process;
    -- unary operator NOT_u1_u1_1368_inst
    process(is_in_error_mode_1303) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", is_in_error_mode_1303, tmp_var);
      NOT_u1_u1_1368_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_1375_inst
    process(is_in_error_mode_1303) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", is_in_error_mode_1303, tmp_var);
      NOT_u1_u1_1375_wire <= tmp_var; -- 
    end process;
    -- flow through binary operator OR_u1_u1_1310_inst
    OR_u1_u1_1310_wire <= (iANNUL_buffer or BITSEL_u32_u1_1309_wire);
    -- flow through binary operator SUB_u5_u5_1342_inst
    SUB_u5_u5_1342_wire <= std_logic_vector(unsigned(CWP_1332) - unsigned(konst_1341_wire_constant));
    -- 
  end Block; -- data_path
  -- 
end calculatePostTrapRegisterValues_Volatile_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity ccu_daemon is -- 
  generic (tag_length : integer); 
  port ( -- 
    ccu_start_pipe_read_req : out  std_logic_vector(0 downto 0);
    ccu_start_pipe_read_ack : in   std_logic_vector(0 downto 0);
    ccu_start_pipe_read_data : in   std_logic_vector(0 downto 0);
    teu_to_ccu_pipe_read_req : out  std_logic_vector(0 downto 0);
    teu_to_ccu_pipe_read_ack : in   std_logic_vector(0 downto 0);
    teu_to_ccu_pipe_read_data : in   std_logic_vector(225 downto 0);
    DBG_TO_CCU_INIT_NPC_SIG : in std_logic_vector(31 downto 0);
    DBG_TO_CCU_INIT_PC_SIG : in std_logic_vector(31 downto 0);
    DBG_TO_CCU_INIT_PSR_SIG : in std_logic_vector(31 downto 0);
    ccu_to_ccu_reset : in std_logic_vector(7 downto 0);
    AJIT_to_ENV_processor_mode_pipe_write_req : out  std_logic_vector(0 downto 0);
    AJIT_to_ENV_processor_mode_pipe_write_ack : in   std_logic_vector(0 downto 0);
    AJIT_to_ENV_processor_mode_pipe_write_data : out  std_logic_vector(7 downto 0);
    BROADCAST_INIT_PC_pipe_write_req : out  std_logic_vector(0 downto 0);
    BROADCAST_INIT_PC_pipe_write_ack : in   std_logic_vector(0 downto 0);
    BROADCAST_INIT_PC_pipe_write_data : out  std_logic_vector(31 downto 0);
    CCU_TO_DBG_MODE_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
    CCU_TO_DBG_MODE_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
    CCU_TO_DBG_MODE_SIG_pipe_write_data : out  std_logic_vector(3 downto 0);
    ccu_to_teu_pipe_write_req : out  std_logic_vector(0 downto 0);
    ccu_to_teu_pipe_write_ack : in   std_logic_vector(0 downto 0);
    ccu_to_teu_pipe_write_data : out  std_logic_vector(106 downto 0);
    reset_dcache_icache_mmu_call_reqs : out  std_logic_vector(0 downto 0);
    reset_dcache_icache_mmu_call_acks : in   std_logic_vector(0 downto 0);
    reset_dcache_icache_mmu_call_tag  :  out  std_logic_vector(0 downto 0);
    reset_dcache_icache_mmu_return_reqs : out  std_logic_vector(0 downto 0);
    reset_dcache_icache_mmu_return_acks : in   std_logic_vector(0 downto 0);
    reset_dcache_icache_mmu_return_tag :  in   std_logic_vector(0 downto 0);
    access_iunit_registers_call_reqs : out  std_logic_vector(0 downto 0);
    access_iunit_registers_call_acks : in   std_logic_vector(0 downto 0);
    access_iunit_registers_call_data : out  std_logic_vector(40 downto 0);
    access_iunit_registers_call_tag  :  out  std_logic_vector(2 downto 0);
    access_iunit_registers_return_reqs : out  std_logic_vector(0 downto 0);
    access_iunit_registers_return_acks : in   std_logic_vector(0 downto 0);
    access_iunit_registers_return_data : in   std_logic_vector(31 downto 0);
    access_iunit_registers_return_tag :  in   std_logic_vector(2 downto 0);
    queryDebugger_call_reqs : out  std_logic_vector(0 downto 0);
    queryDebugger_call_acks : in   std_logic_vector(0 downto 0);
    queryDebugger_call_data : out  std_logic_vector(109 downto 0);
    queryDebugger_call_tag  :  out  std_logic_vector(0 downto 0);
    queryDebugger_return_reqs : out  std_logic_vector(0 downto 0);
    queryDebugger_return_acks : in   std_logic_vector(0 downto 0);
    queryDebugger_return_data : in   std_logic_vector(97 downto 0);
    queryDebugger_return_tag :  in   std_logic_vector(0 downto 0);
    ccu_debug_initialize_call_reqs : out  std_logic_vector(0 downto 0);
    ccu_debug_initialize_call_acks : in   std_logic_vector(0 downto 0);
    ccu_debug_initialize_call_tag  :  out  std_logic_vector(0 downto 0);
    ccu_debug_initialize_return_reqs : out  std_logic_vector(0 downto 0);
    ccu_debug_initialize_return_acks : in   std_logic_vector(0 downto 0);
    ccu_debug_initialize_return_tag :  in   std_logic_vector(0 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity ccu_daemon;
architecture ccu_daemon_arch of ccu_daemon is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  -- output port buffer signals
  signal ccu_daemon_CP_891_start: Boolean;
  signal ccu_daemon_CP_891_symbol: Boolean;
  -- volatile/operator module components. 
  component advancePC_Volatile is -- 
    port ( -- 
      i_run_thread : in  std_logic_vector(0 downto 0);
      i_debug_mode_selected : in  std_logic_vector(0 downto 0);
      i_single_step_mode : in  std_logic_vector(0 downto 0);
      i_machine_error : in  std_logic_vector(0 downto 0);
      i_exception_found : in  std_logic_vector(0 downto 0);
      i_interrupt_found : in  std_logic_vector(0 downto 0);
      i_annul_instr : in  std_logic_vector(0 downto 0);
      i_annul_next_instr : in  std_logic_vector(0 downto 0);
      i_dbg_status : in  std_logic_vector(7 downto 0);
      i_PC : in  std_logic_vector(31 downto 0);
      i_NPC : in  std_logic_vector(31 downto 0);
      i_NNPC : in  std_logic_vector(31 downto 0);
      o_annul_instr : out  std_logic_vector(0 downto 0);
      o_PC : out  std_logic_vector(31 downto 0);
      o_NPC : out  std_logic_vector(31 downto 0)-- 
    );
    -- 
  end component; 
  component reset_dcache_icache_mmu is -- 
    generic (tag_length : integer); 
    port ( -- 
      DCACHE_to_CPU_reset_ack_pipe_read_req : out  std_logic_vector(0 downto 0);
      DCACHE_to_CPU_reset_ack_pipe_read_ack : in   std_logic_vector(0 downto 0);
      DCACHE_to_CPU_reset_ack_pipe_read_data : in   std_logic_vector(0 downto 0);
      ICACHE_to_CPU_reset_ack_pipe_read_req : out  std_logic_vector(0 downto 0);
      ICACHE_to_CPU_reset_ack_pipe_read_ack : in   std_logic_vector(0 downto 0);
      ICACHE_to_CPU_reset_ack_pipe_read_data : in   std_logic_vector(0 downto 0);
      MMU_to_CPU_reset_ack_pipe_read_req : out  std_logic_vector(0 downto 0);
      MMU_to_CPU_reset_ack_pipe_read_ack : in   std_logic_vector(0 downto 0);
      MMU_to_CPU_reset_ack_pipe_read_data : in   std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_DCACHE_reset_pipe_write_req : out  std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_DCACHE_reset_pipe_write_ack : in   std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_DCACHE_reset_pipe_write_data : out  std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_ICACHE_reset_pipe_write_req : out  std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_ICACHE_reset_pipe_write_ack : in   std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_ICACHE_reset_pipe_write_data : out  std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_MMU_reset_pipe_write_req : out  std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_MMU_reset_pipe_write_ack : in   std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_MMU_reset_pipe_write_data : out  std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component access_iunit_registers is -- 
    generic (tag_length : integer); 
    port ( -- 
      cmd_word : in  std_logic_vector(40 downto 0);
      response_word : out  std_logic_vector(31 downto 0);
      teu_to_ccu_iunit_register_access_response_pipe_read_req : out  std_logic_vector(0 downto 0);
      teu_to_ccu_iunit_register_access_response_pipe_read_ack : in   std_logic_vector(0 downto 0);
      teu_to_ccu_iunit_register_access_response_pipe_read_data : in   std_logic_vector(31 downto 0);
      ccu_to_teu_iunit_register_access_command_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_to_teu_iunit_register_access_command_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_to_teu_iunit_register_access_command_pipe_write_data : out  std_logic_vector(41 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component selectTrap_Operator is -- 
    port ( -- 
      sample_req: in boolean;
      sample_ack: out boolean;
      update_req: in boolean;
      update_ack: out boolean;
      iTV : in  std_logic_vector(31 downto 0);
      iTBR : in  std_logic_vector(31 downto 0);
      iET : in  std_logic_vector(0 downto 0);
      iPMODE : in  std_logic_vector(1 downto 0);
      iILVL : in  std_logic_vector(3 downto 0);
      iTICC_TRAP_TYPE : in  std_logic_vector(6 downto 0);
      oTV : out  std_logic_vector(31 downto 0);
      oTBR : out  std_logic_vector(31 downto 0);
      oPMODE : out  std_logic_vector(1 downto 0);
      clk, reset: in std_logic
      -- 
    );
    -- 
  end component;
  component queryDebugger is -- 
    generic (tag_length : integer); 
    port ( -- 
      first_connect_flag : in  std_logic_vector(0 downto 0);
      i_machine_error : in  std_logic_vector(0 downto 0);
      i_exception_found : in  std_logic_vector(0 downto 0);
      i_interrupt_found : in  std_logic_vector(0 downto 0);
      i_annul_instr : in  std_logic_vector(0 downto 0);
      i_debug_break_on_traps : in  std_logic_vector(0 downto 0);
      i_dbg_status : in  std_logic_vector(7 downto 0);
      i_PC : in  std_logic_vector(31 downto 0);
      i_NPC : in  std_logic_vector(31 downto 0);
      i_PSR : in  std_logic_vector(31 downto 0);
      o_annul_instr : out  std_logic_vector(0 downto 0);
      o_ignore_bp : out  std_logic_vector(0 downto 0);
      o_PC : out  std_logic_vector(31 downto 0);
      o_NPC : out  std_logic_vector(31 downto 0);
      o_PSR : out  std_logic_vector(31 downto 0);
      recv_ccu_debug_daemon_to_ccu_daemon_call_reqs : out  std_logic_vector(0 downto 0);
      recv_ccu_debug_daemon_to_ccu_daemon_call_acks : in   std_logic_vector(0 downto 0);
      recv_ccu_debug_daemon_to_ccu_daemon_call_tag  :  out  std_logic_vector(0 downto 0);
      recv_ccu_debug_daemon_to_ccu_daemon_return_reqs : out  std_logic_vector(0 downto 0);
      recv_ccu_debug_daemon_to_ccu_daemon_return_acks : in   std_logic_vector(0 downto 0);
      recv_ccu_debug_daemon_to_ccu_daemon_return_data : in   std_logic_vector(95 downto 0);
      recv_ccu_debug_daemon_to_ccu_daemon_return_tag :  in   std_logic_vector(0 downto 0);
      send_ccu_daemon_to_ccu_debug_daemon_call_reqs : out  std_logic_vector(0 downto 0);
      send_ccu_daemon_to_ccu_debug_daemon_call_acks : in   std_logic_vector(0 downto 0);
      send_ccu_daemon_to_ccu_debug_daemon_call_data : out  std_logic_vector(127 downto 0);
      send_ccu_daemon_to_ccu_debug_daemon_call_tag  :  out  std_logic_vector(0 downto 0);
      send_ccu_daemon_to_ccu_debug_daemon_return_reqs : out  std_logic_vector(0 downto 0);
      send_ccu_daemon_to_ccu_debug_daemon_return_acks : in   std_logic_vector(0 downto 0);
      send_ccu_daemon_to_ccu_debug_daemon_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component init_processor_state_Volatile is -- 
    port ( -- 
      ipc : in  std_logic_vector(31 downto 0);
      inpc : in  std_logic_vector(31 downto 0);
      ipsr : in  std_logic_vector(31 downto 0);
      pmode : out  std_logic_vector(1 downto 0);
      psr : out  std_logic_vector(31 downto 0);
      wim : out  std_logic_vector(31 downto 0);
      tbr : out  std_logic_vector(31 downto 0);
      tv : out  std_logic_vector(31 downto 0);
      pc : out  std_logic_vector(31 downto 0);
      npc : out  std_logic_vector(31 downto 0);
      ilvl : out  std_logic_vector(3 downto 0);
      ticc_trap_type : out  std_logic_vector(6 downto 0)-- 
    );
    -- 
  end component; 
  component calculatePostTrapRegisterValues_Volatile is -- 
    port ( -- 
      exec_trap_flag : in  std_logic_vector(0 downto 0);
      iPMODE : in  std_logic_vector(1 downto 0);
      iPSR : in  std_logic_vector(31 downto 0);
      iTBR : in  std_logic_vector(31 downto 0);
      iTV : in  std_logic_vector(31 downto 0);
      iPC : in  std_logic_vector(31 downto 0);
      iNPC : in  std_logic_vector(31 downto 0);
      iILVL : in  std_logic_vector(3 downto 0);
      iTICC_TRAP_TYPE : in  std_logic_vector(6 downto 0);
      iANNUL : in  std_logic_vector(0 downto 0);
      init_PC : in  std_logic_vector(31 downto 0);
      init_NPC : in  std_logic_vector(31 downto 0);
      oPMODE : out  std_logic_vector(1 downto 0);
      oPSR : out  std_logic_vector(31 downto 0);
      oTBR : out  std_logic_vector(31 downto 0);
      oTV : out  std_logic_vector(31 downto 0);
      oPC : out  std_logic_vector(31 downto 0);
      oNPC : out  std_logic_vector(31 downto 0);
      oL1 : out  std_logic_vector(31 downto 0);
      oL2 : out  std_logic_vector(31 downto 0)-- 
    );
    -- 
  end component; 
  component ccu_debug_initialize is -- 
    generic (tag_length : integer); 
    port ( -- 
      DBG_TO_CCU_RESET_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
      DBG_TO_CCU_RESET_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
      DBG_TO_CCU_RESET_SIG_pipe_write_data : out  std_logic_vector(4 downto 0);
      DBG_TO_CCU_INIT_NPC_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_NPC_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_NPC_SIG_pipe_write_data : out  std_logic_vector(31 downto 0);
      DBG_TO_CCU_INIT_PC_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_PC_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_PC_SIG_pipe_write_data : out  std_logic_vector(31 downto 0);
      DBG_TO_CCU_INIT_PSR_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_PSR_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_PSR_SIG_pipe_write_data : out  std_logic_vector(31 downto 0);
      init_npc_pipe_write_req : out  std_logic_vector(0 downto 0);
      init_npc_pipe_write_ack : in   std_logic_vector(0 downto 0);
      init_npc_pipe_write_data : out  std_logic_vector(31 downto 0);
      init_pc_pipe_write_req : out  std_logic_vector(0 downto 0);
      init_pc_pipe_write_ack : in   std_logic_vector(0 downto 0);
      init_pc_pipe_write_data : out  std_logic_vector(31 downto 0);
      init_psr_pipe_write_req : out  std_logic_vector(0 downto 0);
      init_psr_pipe_write_ack : in   std_logic_vector(0 downto 0);
      init_psr_pipe_write_data : out  std_logic_vector(31 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component decode_cpu_resets_Volatile is -- 
    port ( -- 
      reset_val : in  std_logic_vector(7 downto 0);
      hard_reset_asserted : out  std_logic_vector(0 downto 0);
      single_step_mode_selected : out  std_logic_vector(0 downto 0);
      debug_mode_selected : out  std_logic_vector(0 downto 0);
      debug_break_on_traps : out  std_logic_vector(0 downto 0);
      logging_trace_selected : out  std_logic_vector(0 downto 0)-- 
    );
    -- 
  end component; 
  -- links between control-path and data-path
  signal WPIPE_ccu_to_teu_2677_inst_req_0 : boolean;
  signal RPIPE_teu_to_ccu_2850_inst_req_1 : boolean;
  signal WPIPE_ccu_to_teu_2831_inst_ack_0 : boolean;
  signal call_stmt_2533_call_ack_0 : boolean;
  signal WPIPE_ccu_to_teu_2677_inst_ack_1 : boolean;
  signal call_stmt_2567_call_ack_0 : boolean;
  signal call_stmt_2533_call_req_1 : boolean;
  signal type_cast_2773_inst_ack_1 : boolean;
  signal type_cast_2773_inst_ack_0 : boolean;
  signal WPIPE_ccu_to_teu_2677_inst_ack_0 : boolean;
  signal call_stmt_2533_call_req_0 : boolean;
  signal type_cast_2773_inst_req_0 : boolean;
  signal WPIPE_ccu_to_teu_2922_inst_req_1 : boolean;
  signal WPIPE_BROADCAST_INIT_PC_2407_inst_req_0 : boolean;
  signal call_stmt_2567_call_req_0 : boolean;
  signal do_while_stmt_2239_branch_ack_0 : boolean;
  signal WPIPE_ccu_to_teu_2922_inst_ack_1 : boolean;
  signal type_cast_2773_inst_req_1 : boolean;
  signal call_stmt_2491_call_req_0 : boolean;
  signal WPIPE_ccu_to_teu_2677_inst_req_1 : boolean;
  signal call_stmt_2533_call_ack_1 : boolean;
  signal call_stmt_2491_call_ack_0 : boolean;
  signal WPIPE_AJIT_to_ENV_processor_mode_2768_inst_req_1 : boolean;
  signal WPIPE_ccu_to_teu_2831_inst_req_1 : boolean;
  signal WPIPE_ccu_to_teu_2831_inst_ack_1 : boolean;
  signal WPIPE_BROADCAST_INIT_PC_2407_inst_ack_1 : boolean;
  signal call_stmt_2567_call_req_1 : boolean;
  signal WPIPE_ccu_to_teu_2922_inst_ack_0 : boolean;
  signal WPIPE_CCU_TO_DBG_MODE_SIG_2771_inst_req_0 : boolean;
  signal call_stmt_2550_call_req_0 : boolean;
  signal call_stmt_2550_call_ack_0 : boolean;
  signal RPIPE_teu_to_ccu_2850_inst_req_0 : boolean;
  signal WPIPE_AJIT_to_ENV_processor_mode_2768_inst_ack_1 : boolean;
  signal WPIPE_CCU_TO_DBG_MODE_SIG_2771_inst_ack_0 : boolean;
  signal call_stmt_2753_call_req_0 : boolean;
  signal RPIPE_teu_to_ccu_2850_inst_ack_0 : boolean;
  signal call_stmt_2753_call_ack_0 : boolean;
  signal call_stmt_2491_call_req_1 : boolean;
  signal WPIPE_BROADCAST_INIT_PC_2407_inst_req_1 : boolean;
  signal call_stmt_2753_call_req_1 : boolean;
  signal call_stmt_2753_call_ack_1 : boolean;
  signal RPIPE_teu_to_ccu_2850_inst_ack_1 : boolean;
  signal call_stmt_2550_call_req_1 : boolean;
  signal CONCAT_u5_u8_2766_inst_req_0 : boolean;
  signal CONCAT_u5_u8_2766_inst_ack_0 : boolean;
  signal WPIPE_CCU_TO_DBG_MODE_SIG_2771_inst_req_1 : boolean;
  signal call_stmt_2550_call_ack_1 : boolean;
  signal WPIPE_CCU_TO_DBG_MODE_SIG_2771_inst_ack_1 : boolean;
  signal CONCAT_u5_u8_2766_inst_req_1 : boolean;
  signal CONCAT_u5_u8_2766_inst_ack_1 : boolean;
  signal WPIPE_ccu_to_teu_2922_inst_req_0 : boolean;
  signal call_stmt_2567_call_ack_1 : boolean;
  signal WPIPE_AJIT_to_ENV_processor_mode_2768_inst_req_0 : boolean;
  signal WPIPE_AJIT_to_ENV_processor_mode_2768_inst_ack_0 : boolean;
  signal WPIPE_ccu_to_teu_2831_inst_req_0 : boolean;
  signal do_while_stmt_2239_branch_ack_1 : boolean;
  signal call_stmt_2581_call_ack_1 : boolean;
  signal call_stmt_2581_call_req_1 : boolean;
  signal call_stmt_2581_call_ack_0 : boolean;
  signal call_stmt_2581_call_req_0 : boolean;
  signal WPIPE_BROADCAST_INIT_PC_2407_inst_ack_0 : boolean;
  signal call_stmt_2491_call_ack_1 : boolean;
  signal WPIPE_AJIT_to_ENV_processor_mode_2192_inst_req_0 : boolean;
  signal WPIPE_AJIT_to_ENV_processor_mode_2192_inst_ack_0 : boolean;
  signal WPIPE_AJIT_to_ENV_processor_mode_2192_inst_req_1 : boolean;
  signal WPIPE_AJIT_to_ENV_processor_mode_2192_inst_ack_1 : boolean;
  signal WPIPE_CCU_TO_DBG_MODE_SIG_2196_inst_req_0 : boolean;
  signal WPIPE_CCU_TO_DBG_MODE_SIG_2196_inst_ack_0 : boolean;
  signal WPIPE_CCU_TO_DBG_MODE_SIG_2196_inst_req_1 : boolean;
  signal WPIPE_CCU_TO_DBG_MODE_SIG_2196_inst_ack_1 : boolean;
  signal call_stmt_2200_call_req_0 : boolean;
  signal call_stmt_2200_call_ack_0 : boolean;
  signal call_stmt_2200_call_req_1 : boolean;
  signal call_stmt_2200_call_ack_1 : boolean;
  signal RPIPE_ccu_start_2202_inst_req_0 : boolean;
  signal RPIPE_ccu_start_2202_inst_ack_0 : boolean;
  signal RPIPE_ccu_start_2202_inst_req_1 : boolean;
  signal RPIPE_ccu_start_2202_inst_ack_1 : boolean;
  signal WPIPE_AJIT_to_ENV_processor_mode_2207_inst_req_0 : boolean;
  signal WPIPE_AJIT_to_ENV_processor_mode_2207_inst_ack_0 : boolean;
  signal WPIPE_AJIT_to_ENV_processor_mode_2207_inst_req_1 : boolean;
  signal WPIPE_AJIT_to_ENV_processor_mode_2207_inst_ack_1 : boolean;
  signal WPIPE_CCU_TO_DBG_MODE_SIG_2211_inst_req_0 : boolean;
  signal WPIPE_CCU_TO_DBG_MODE_SIG_2211_inst_ack_0 : boolean;
  signal WPIPE_CCU_TO_DBG_MODE_SIG_2211_inst_req_1 : boolean;
  signal WPIPE_CCU_TO_DBG_MODE_SIG_2211_inst_ack_1 : boolean;
  signal do_while_stmt_2239_branch_req_0 : boolean;
  signal phi_stmt_2241_req_1 : boolean;
  signal phi_stmt_2241_req_0 : boolean;
  signal phi_stmt_2241_ack_0 : boolean;
  signal next_CIRCULANT_3177_2244_buf_req_0 : boolean;
  signal next_CIRCULANT_3177_2244_buf_ack_0 : boolean;
  signal next_CIRCULANT_3177_2244_buf_req_1 : boolean;
  signal next_CIRCULANT_3177_2244_buf_ack_1 : boolean;
  signal call_stmt_2344_call_req_0 : boolean;
  signal call_stmt_2344_call_ack_0 : boolean;
  signal call_stmt_2344_call_req_1 : boolean;
  signal call_stmt_2344_call_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "ccu_daemon_input_buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      data_width => tag_length + 0) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(tag_length-1 downto 0) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length-1 downto 0);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  ccu_daemon_CP_891_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "ccu_daemon_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 0) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(tag_length-1 downto 0) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length-1 downto 0);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= ccu_daemon_CP_891_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= ccu_daemon_CP_891_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= ccu_daemon_CP_891_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  ccu_daemon_CP_891: Block -- control-path 
    signal ccu_daemon_CP_891_elements: BooleanArray(119 downto 0);
    -- 
  begin -- 
    ccu_daemon_CP_891_elements(0) <= ccu_daemon_CP_891_start;
    ccu_daemon_CP_891_symbol <= ccu_daemon_CP_891_elements(16);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	3 
    -- CP-element group 0: 	5 
    -- CP-element group 0: 	6 
    -- CP-element group 0: 	7 
    -- CP-element group 0:  members (17) 
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_2195_to_assign_stmt_2237/$entry
      -- CP-element group 0: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2192_sample_start_
      -- CP-element group 0: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2192_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2192_Sample/req
      -- CP-element group 0: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2196_sample_start_
      -- CP-element group 0: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2196_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2196_Sample/req
      -- CP-element group 0: 	 assign_stmt_2195_to_assign_stmt_2237/call_stmt_2200_sample_start_
      -- CP-element group 0: 	 assign_stmt_2195_to_assign_stmt_2237/call_stmt_2200_update_start_
      -- CP-element group 0: 	 assign_stmt_2195_to_assign_stmt_2237/call_stmt_2200_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_2195_to_assign_stmt_2237/call_stmt_2200_Sample/crr
      -- CP-element group 0: 	 assign_stmt_2195_to_assign_stmt_2237/call_stmt_2200_Update/$entry
      -- CP-element group 0: 	 assign_stmt_2195_to_assign_stmt_2237/call_stmt_2200_Update/ccr
      -- CP-element group 0: 	 assign_stmt_2195_to_assign_stmt_2237/RPIPE_ccu_start_2202_sample_start_
      -- CP-element group 0: 	 assign_stmt_2195_to_assign_stmt_2237/RPIPE_ccu_start_2202_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_2195_to_assign_stmt_2237/RPIPE_ccu_start_2202_Sample/rr
      -- 
    req_904_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_904_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(0), ack => WPIPE_AJIT_to_ENV_processor_mode_2192_inst_req_0); -- 
    req_918_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_918_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(0), ack => WPIPE_CCU_TO_DBG_MODE_SIG_2196_inst_req_0); -- 
    crr_932_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_932_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(0), ack => call_stmt_2200_call_req_0); -- 
    ccr_937_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_937_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(0), ack => call_stmt_2200_call_req_1); -- 
    rr_946_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_946_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(0), ack => RPIPE_ccu_start_2202_inst_req_0); -- 
    -- CP-element group 1:  transition  input  output  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1: 	2 
    -- CP-element group 1:  members (6) 
      -- CP-element group 1: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2192_sample_completed_
      -- CP-element group 1: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2192_update_start_
      -- CP-element group 1: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2192_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2192_Sample/ack
      -- CP-element group 1: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2192_Update/$entry
      -- CP-element group 1: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2192_Update/req
      -- 
    ack_905_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_AJIT_to_ENV_processor_mode_2192_inst_ack_0, ack => ccu_daemon_CP_891_elements(1)); -- 
    req_909_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_909_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(1), ack => WPIPE_AJIT_to_ENV_processor_mode_2192_inst_req_1); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	1 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	9 
    -- CP-element group 2:  members (3) 
      -- CP-element group 2: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2192_update_completed_
      -- CP-element group 2: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2192_Update/$exit
      -- CP-element group 2: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2192_Update/ack
      -- 
    ack_910_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_AJIT_to_ENV_processor_mode_2192_inst_ack_1, ack => ccu_daemon_CP_891_elements(2)); -- 
    -- CP-element group 3:  transition  input  output  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	0 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	4 
    -- CP-element group 3:  members (6) 
      -- CP-element group 3: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2196_sample_completed_
      -- CP-element group 3: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2196_update_start_
      -- CP-element group 3: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2196_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2196_Sample/ack
      -- CP-element group 3: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2196_Update/$entry
      -- CP-element group 3: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2196_Update/req
      -- 
    ack_919_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_CCU_TO_DBG_MODE_SIG_2196_inst_ack_0, ack => ccu_daemon_CP_891_elements(3)); -- 
    req_923_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_923_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(3), ack => WPIPE_CCU_TO_DBG_MODE_SIG_2196_inst_req_1); -- 
    -- CP-element group 4:  transition  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	3 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	12 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2196_update_completed_
      -- CP-element group 4: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2196_Update/$exit
      -- CP-element group 4: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2196_Update/ack
      -- 
    ack_924_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_CCU_TO_DBG_MODE_SIG_2196_inst_ack_1, ack => ccu_daemon_CP_891_elements(4)); -- 
    -- CP-element group 5:  transition  input  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	0 
    -- CP-element group 5: successors 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 assign_stmt_2195_to_assign_stmt_2237/call_stmt_2200_sample_completed_
      -- CP-element group 5: 	 assign_stmt_2195_to_assign_stmt_2237/call_stmt_2200_Sample/$exit
      -- CP-element group 5: 	 assign_stmt_2195_to_assign_stmt_2237/call_stmt_2200_Sample/cra
      -- 
    cra_933_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2200_call_ack_0, ack => ccu_daemon_CP_891_elements(5)); -- 
    -- CP-element group 6:  transition  input  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	0 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	15 
    -- CP-element group 6:  members (3) 
      -- CP-element group 6: 	 assign_stmt_2195_to_assign_stmt_2237/call_stmt_2200_update_completed_
      -- CP-element group 6: 	 assign_stmt_2195_to_assign_stmt_2237/call_stmt_2200_Update/$exit
      -- CP-element group 6: 	 assign_stmt_2195_to_assign_stmt_2237/call_stmt_2200_Update/cca
      -- 
    cca_938_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2200_call_ack_1, ack => ccu_daemon_CP_891_elements(6)); -- 
    -- CP-element group 7:  transition  input  output  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	0 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	8 
    -- CP-element group 7:  members (6) 
      -- CP-element group 7: 	 assign_stmt_2195_to_assign_stmt_2237/RPIPE_ccu_start_2202_sample_completed_
      -- CP-element group 7: 	 assign_stmt_2195_to_assign_stmt_2237/RPIPE_ccu_start_2202_update_start_
      -- CP-element group 7: 	 assign_stmt_2195_to_assign_stmt_2237/RPIPE_ccu_start_2202_Sample/$exit
      -- CP-element group 7: 	 assign_stmt_2195_to_assign_stmt_2237/RPIPE_ccu_start_2202_Sample/ra
      -- CP-element group 7: 	 assign_stmt_2195_to_assign_stmt_2237/RPIPE_ccu_start_2202_Update/$entry
      -- CP-element group 7: 	 assign_stmt_2195_to_assign_stmt_2237/RPIPE_ccu_start_2202_Update/cr
      -- 
    ra_947_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_ccu_start_2202_inst_ack_0, ack => ccu_daemon_CP_891_elements(7)); -- 
    cr_951_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_951_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(7), ack => RPIPE_ccu_start_2202_inst_req_1); -- 
    -- CP-element group 8:  fork  transition  input  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	7 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	9 
    -- CP-element group 8: 	12 
    -- CP-element group 8:  members (5) 
      -- CP-element group 8: 	 assign_stmt_2195_to_assign_stmt_2237/RPIPE_ccu_start_2202_update_completed_
      -- CP-element group 8: 	 assign_stmt_2195_to_assign_stmt_2237/RPIPE_ccu_start_2202_Update/$exit
      -- CP-element group 8: 	 assign_stmt_2195_to_assign_stmt_2237/RPIPE_ccu_start_2202_Update/ca
      -- CP-element group 8: 	 assign_stmt_2195_to_assign_stmt_2237/synch_WPIPE_AJIT_to_ENV_processor_mode_2207_sample_start__RPIPE_ccu_start_2202_update_completed_
      -- CP-element group 8: 	 assign_stmt_2195_to_assign_stmt_2237/synch_WPIPE_CCU_TO_DBG_MODE_SIG_2211_sample_start__RPIPE_ccu_start_2202_update_completed_
      -- 
    ca_952_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_ccu_start_2202_inst_ack_1, ack => ccu_daemon_CP_891_elements(8)); -- 
    -- CP-element group 9:  join  transition  output  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	2 
    -- CP-element group 9: 	8 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	10 
    -- CP-element group 9:  members (3) 
      -- CP-element group 9: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2207_sample_start_
      -- CP-element group 9: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2207_Sample/$entry
      -- CP-element group 9: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2207_Sample/req
      -- 
    req_960_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_960_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(9), ack => WPIPE_AJIT_to_ENV_processor_mode_2207_inst_req_0); -- 
    ccu_daemon_cp_element_group_9: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "ccu_daemon_cp_element_group_9"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(2) & ccu_daemon_CP_891_elements(8);
      gj_ccu_daemon_cp_element_group_9 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(9), clk => clk, reset => reset); --
    end block;
    -- CP-element group 10:  transition  input  output  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	9 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	11 
    -- CP-element group 10:  members (6) 
      -- CP-element group 10: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2207_sample_completed_
      -- CP-element group 10: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2207_update_start_
      -- CP-element group 10: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2207_Sample/$exit
      -- CP-element group 10: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2207_Sample/ack
      -- CP-element group 10: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2207_Update/$entry
      -- CP-element group 10: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2207_Update/req
      -- 
    ack_961_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_AJIT_to_ENV_processor_mode_2207_inst_ack_0, ack => ccu_daemon_CP_891_elements(10)); -- 
    req_965_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_965_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(10), ack => WPIPE_AJIT_to_ENV_processor_mode_2207_inst_req_1); -- 
    -- CP-element group 11:  transition  input  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	10 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	15 
    -- CP-element group 11:  members (3) 
      -- CP-element group 11: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2207_update_completed_
      -- CP-element group 11: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2207_Update/$exit
      -- CP-element group 11: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_AJIT_to_ENV_processor_mode_2207_Update/ack
      -- 
    ack_966_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_AJIT_to_ENV_processor_mode_2207_inst_ack_1, ack => ccu_daemon_CP_891_elements(11)); -- 
    -- CP-element group 12:  join  transition  output  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	4 
    -- CP-element group 12: 	8 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	13 
    -- CP-element group 12:  members (3) 
      -- CP-element group 12: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2211_sample_start_
      -- CP-element group 12: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2211_Sample/$entry
      -- CP-element group 12: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2211_Sample/req
      -- 
    req_975_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_975_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(12), ack => WPIPE_CCU_TO_DBG_MODE_SIG_2211_inst_req_0); -- 
    ccu_daemon_cp_element_group_12: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_12"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(4) & ccu_daemon_CP_891_elements(8);
      gj_ccu_daemon_cp_element_group_12 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(12), clk => clk, reset => reset); --
    end block;
    -- CP-element group 13:  transition  input  output  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	12 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	14 
    -- CP-element group 13:  members (6) 
      -- CP-element group 13: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2211_sample_completed_
      -- CP-element group 13: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2211_update_start_
      -- CP-element group 13: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2211_Sample/$exit
      -- CP-element group 13: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2211_Sample/ack
      -- CP-element group 13: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2211_Update/$entry
      -- CP-element group 13: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2211_Update/req
      -- 
    ack_976_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_CCU_TO_DBG_MODE_SIG_2211_inst_ack_0, ack => ccu_daemon_CP_891_elements(13)); -- 
    req_980_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_980_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(13), ack => WPIPE_CCU_TO_DBG_MODE_SIG_2211_inst_req_1); -- 
    -- CP-element group 14:  transition  input  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	13 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	15 
    -- CP-element group 14:  members (3) 
      -- CP-element group 14: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2211_update_completed_
      -- CP-element group 14: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2211_Update/$exit
      -- CP-element group 14: 	 assign_stmt_2195_to_assign_stmt_2237/WPIPE_CCU_TO_DBG_MODE_SIG_2211_Update/ack
      -- 
    ack_981_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_CCU_TO_DBG_MODE_SIG_2211_inst_ack_1, ack => ccu_daemon_CP_891_elements(14)); -- 
    -- CP-element group 15:  join  transition  place  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	6 
    -- CP-element group 15: 	11 
    -- CP-element group 15: 	14 
    -- CP-element group 15: successors 
    -- CP-element group 15: 	17 
    -- CP-element group 15:  members (4) 
      -- CP-element group 15: 	 assign_stmt_2195_to_assign_stmt_2237/$exit
      -- CP-element group 15: 	 branch_block_stmt_2238/$entry
      -- CP-element group 15: 	 branch_block_stmt_2238/branch_block_stmt_2238__entry__
      -- CP-element group 15: 	 branch_block_stmt_2238/do_while_stmt_2239__entry__
      -- 
    ccu_daemon_cp_element_group_15: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 0);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_15"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(6) & ccu_daemon_CP_891_elements(11) & ccu_daemon_CP_891_elements(14);
      gj_ccu_daemon_cp_element_group_15 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(15), clk => clk, reset => reset); --
    end block;
    -- CP-element group 16:  transition  place  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	119 
    -- CP-element group 16: successors 
    -- CP-element group 16:  members (4) 
      -- CP-element group 16: 	 $exit
      -- CP-element group 16: 	 branch_block_stmt_2238/$exit
      -- CP-element group 16: 	 branch_block_stmt_2238/branch_block_stmt_2238__exit__
      -- CP-element group 16: 	 branch_block_stmt_2238/do_while_stmt_2239__exit__
      -- 
    ccu_daemon_CP_891_elements(16) <= ccu_daemon_CP_891_elements(119);
    -- CP-element group 17:  transition  place  bypass  pipeline-parent 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	15 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	23 
    -- CP-element group 17:  members (2) 
      -- CP-element group 17: 	 branch_block_stmt_2238/do_while_stmt_2239/$entry
      -- CP-element group 17: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239__entry__
      -- 
    ccu_daemon_CP_891_elements(17) <= ccu_daemon_CP_891_elements(15);
    -- CP-element group 18:  merge  place  bypass  pipeline-parent 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: successors 
    -- CP-element group 18: 	119 
    -- CP-element group 18:  members (1) 
      -- CP-element group 18: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239__exit__
      -- 
    -- Element group ccu_daemon_CP_891_elements(18) is bound as output of CP function.
    -- CP-element group 19:  merge  place  bypass  pipeline-parent 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: successors 
    -- CP-element group 19: 	22 
    -- CP-element group 19:  members (1) 
      -- CP-element group 19: 	 branch_block_stmt_2238/do_while_stmt_2239/loop_back
      -- 
    -- Element group ccu_daemon_CP_891_elements(19) is bound as output of CP function.
    -- CP-element group 20:  branch  transition  place  bypass  pipeline-parent 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: 	25 
    -- CP-element group 20: successors 
    -- CP-element group 20: 	117 
    -- CP-element group 20: 	118 
    -- CP-element group 20:  members (3) 
      -- CP-element group 20: 	 branch_block_stmt_2238/do_while_stmt_2239/loop_taken/$entry
      -- CP-element group 20: 	 branch_block_stmt_2238/do_while_stmt_2239/loop_exit/$entry
      -- CP-element group 20: 	 branch_block_stmt_2238/do_while_stmt_2239/condition_done
      -- 
    ccu_daemon_CP_891_elements(20) <= ccu_daemon_CP_891_elements(25);
    -- CP-element group 21:  branch  place  bypass  pipeline-parent 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: 	116 
    -- CP-element group 21: successors 
    -- CP-element group 21:  members (1) 
      -- CP-element group 21: 	 branch_block_stmt_2238/do_while_stmt_2239/loop_body_done
      -- 
    ccu_daemon_CP_891_elements(21) <= ccu_daemon_CP_891_elements(116);
    -- CP-element group 22:  transition  bypass  pipeline-parent 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: 	19 
    -- CP-element group 22: successors 
    -- CP-element group 22: 	32 
    -- CP-element group 22:  members (1) 
      -- CP-element group 22: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/back_edge_to_loop_body
      -- 
    ccu_daemon_CP_891_elements(22) <= ccu_daemon_CP_891_elements(19);
    -- CP-element group 23:  transition  bypass  pipeline-parent 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: 	17 
    -- CP-element group 23: successors 
    -- CP-element group 23: 	34 
    -- CP-element group 23:  members (1) 
      -- CP-element group 23: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/first_time_through_loop_body
      -- 
    ccu_daemon_CP_891_elements(23) <= ccu_daemon_CP_891_elements(17);
    -- CP-element group 24:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: successors 
    -- CP-element group 24: 	28 
    -- CP-element group 24: 	29 
    -- CP-element group 24: 	49 
    -- CP-element group 24: 	115 
    -- CP-element group 24:  members (2) 
      -- CP-element group 24: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/$entry
      -- CP-element group 24: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/loop_body_start
      -- 
    -- Element group ccu_daemon_CP_891_elements(24) is bound as output of CP function.
    -- CP-element group 25:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: 	27 
    -- CP-element group 25: 	31 
    -- CP-element group 25: 	115 
    -- CP-element group 25: successors 
    -- CP-element group 25: 	20 
    -- CP-element group 25:  members (1) 
      -- CP-element group 25: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/condition_evaluated
      -- 
    condition_evaluated_1004_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " condition_evaluated_1004_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(25), ack => do_while_stmt_2239_branch_req_0); -- 
    ccu_daemon_cp_element_group_25: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 0);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_25"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(27) & ccu_daemon_CP_891_elements(31) & ccu_daemon_CP_891_elements(115);
      gj_ccu_daemon_cp_element_group_25 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(25), clk => clk, reset => reset); --
    end block;
    -- CP-element group 26:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: 	28 
    -- CP-element group 26: marked-predecessors 
    -- CP-element group 26: 	31 
    -- CP-element group 26: successors 
    -- CP-element group 26:  members (2) 
      -- CP-element group 26: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/aggregated_phi_sample_req
      -- CP-element group 26: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_sample_start__ps
      -- 
    ccu_daemon_cp_element_group_26: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_26"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(28) & ccu_daemon_CP_891_elements(31);
      gj_ccu_daemon_cp_element_group_26 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(26), clk => clk, reset => reset); --
    end block;
    -- CP-element group 27:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: 	30 
    -- CP-element group 27: successors 
    -- CP-element group 27: 	25 
    -- CP-element group 27:  members (1) 
      -- CP-element group 27: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/aggregated_phi_sample_ack_d
      -- 
    -- Element group ccu_daemon_CP_891_elements(27) is a control-delay.
    cp_element_27_delay: control_delay_element  generic map(name => " 27_delay", delay_value => 1)  port map(req => ccu_daemon_CP_891_elements(30), ack => ccu_daemon_CP_891_elements(27), clk => clk, reset =>reset);
    -- CP-element group 28:  join  transition  bypass  pipeline-parent 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: 	24 
    -- CP-element group 28: marked-predecessors 
    -- CP-element group 28: 	30 
    -- CP-element group 28: 	55 
    -- CP-element group 28: 	80 
    -- CP-element group 28: 	106 
    -- CP-element group 28: successors 
    -- CP-element group 28: 	26 
    -- CP-element group 28:  members (1) 
      -- CP-element group 28: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_sample_start_
      -- 
    ccu_daemon_cp_element_group_28: block -- 
      constant place_capacities: IntegerArray(0 to 4) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1);
      constant place_markings: IntegerArray(0 to 4)  := (0 => 0,1 => 1,2 => 1,3 => 1,4 => 1);
      constant place_delays: IntegerArray(0 to 4) := (0 => 0,1 => 1,2 => 0,3 => 0,4 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_28"; 
      signal preds: BooleanArray(1 to 5); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(24) & ccu_daemon_CP_891_elements(30) & ccu_daemon_CP_891_elements(55) & ccu_daemon_CP_891_elements(80) & ccu_daemon_CP_891_elements(106);
      gj_ccu_daemon_cp_element_group_28 : generic_join generic map(name => joinName, number_of_predecessors => 5, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(28), clk => clk, reset => reset); --
    end block;
    -- CP-element group 29:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: 	24 
    -- CP-element group 29: marked-predecessors 
    -- CP-element group 29: 	31 
    -- CP-element group 29: 	47 
    -- CP-element group 29: 	54 
    -- CP-element group 29: 	58 
    -- CP-element group 29: 	62 
    -- CP-element group 29: 	66 
    -- CP-element group 29: 	71 
    -- CP-element group 29: 	75 
    -- CP-element group 29: 	79 
    -- CP-element group 29: 	83 
    -- CP-element group 29: 	98 
    -- CP-element group 29: 	105 
    -- CP-element group 29: 	110 
    -- CP-element group 29: successors 
    -- CP-element group 29:  members (3) 
      -- CP-element group 29: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/aggregated_phi_update_req
      -- CP-element group 29: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_update_start_
      -- CP-element group 29: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_update_start__ps
      -- 
    ccu_daemon_cp_element_group_29: block -- 
      constant place_capacities: IntegerArray(0 to 13) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1,8 => 1,9 => 1,10 => 1,11 => 1,12 => 1,13 => 1);
      constant place_markings: IntegerArray(0 to 13)  := (0 => 0,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1,8 => 1,9 => 1,10 => 1,11 => 1,12 => 1,13 => 1);
      constant place_delays: IntegerArray(0 to 13) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0,8 => 0,9 => 0,10 => 0,11 => 0,12 => 0,13 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_29"; 
      signal preds: BooleanArray(1 to 14); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(24) & ccu_daemon_CP_891_elements(31) & ccu_daemon_CP_891_elements(47) & ccu_daemon_CP_891_elements(54) & ccu_daemon_CP_891_elements(58) & ccu_daemon_CP_891_elements(62) & ccu_daemon_CP_891_elements(66) & ccu_daemon_CP_891_elements(71) & ccu_daemon_CP_891_elements(75) & ccu_daemon_CP_891_elements(79) & ccu_daemon_CP_891_elements(83) & ccu_daemon_CP_891_elements(98) & ccu_daemon_CP_891_elements(105) & ccu_daemon_CP_891_elements(110);
      gj_ccu_daemon_cp_element_group_29 : generic_join generic map(name => joinName, number_of_predecessors => 14, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(29), clk => clk, reset => reset); --
    end block;
    -- CP-element group 30:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: successors 
    -- CP-element group 30: 	27 
    -- CP-element group 30: 	112 
    -- CP-element group 30: 	113 
    -- CP-element group 30: 	114 
    -- CP-element group 30: marked-successors 
    -- CP-element group 30: 	28 
    -- CP-element group 30:  members (3) 
      -- CP-element group 30: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/aggregated_phi_sample_ack
      -- CP-element group 30: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_sample_completed_
      -- CP-element group 30: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_sample_completed__ps
      -- 
    -- Element group ccu_daemon_CP_891_elements(30) is bound as output of CP function.
    -- CP-element group 31:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: successors 
    -- CP-element group 31: 	25 
    -- CP-element group 31: 	45 
    -- CP-element group 31: 	52 
    -- CP-element group 31: 	56 
    -- CP-element group 31: 	60 
    -- CP-element group 31: 	64 
    -- CP-element group 31: 	69 
    -- CP-element group 31: 	74 
    -- CP-element group 31: 	77 
    -- CP-element group 31: 	81 
    -- CP-element group 31: 	97 
    -- CP-element group 31: 	103 
    -- CP-element group 31: 	109 
    -- CP-element group 31: marked-successors 
    -- CP-element group 31: 	26 
    -- CP-element group 31: 	29 
    -- CP-element group 31:  members (3) 
      -- CP-element group 31: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/aggregated_phi_update_ack
      -- CP-element group 31: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_update_completed_
      -- CP-element group 31: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_update_completed__ps
      -- 
    -- Element group ccu_daemon_CP_891_elements(31) is bound as output of CP function.
    -- CP-element group 32:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	22 
    -- CP-element group 32: successors 
    -- CP-element group 32:  members (1) 
      -- CP-element group 32: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_loopback_trigger
      -- 
    ccu_daemon_CP_891_elements(32) <= ccu_daemon_CP_891_elements(22);
    -- CP-element group 33:  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: successors 
    -- CP-element group 33:  members (2) 
      -- CP-element group 33: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_loopback_sample_req
      -- CP-element group 33: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_loopback_sample_req_ps
      -- 
    phi_stmt_2241_loopback_sample_req_1020_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_2241_loopback_sample_req_1020_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(33), ack => phi_stmt_2241_req_1); -- 
    -- Element group ccu_daemon_CP_891_elements(33) is bound as output of CP function.
    -- CP-element group 34:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: 	23 
    -- CP-element group 34: successors 
    -- CP-element group 34:  members (1) 
      -- CP-element group 34: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_entry_trigger
      -- 
    ccu_daemon_CP_891_elements(34) <= ccu_daemon_CP_891_elements(23);
    -- CP-element group 35:  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: successors 
    -- CP-element group 35:  members (2) 
      -- CP-element group 35: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_entry_sample_req
      -- CP-element group 35: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_entry_sample_req_ps
      -- 
    phi_stmt_2241_entry_sample_req_1023_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_2241_entry_sample_req_1023_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(35), ack => phi_stmt_2241_req_0); -- 
    -- Element group ccu_daemon_CP_891_elements(35) is bound as output of CP function.
    -- CP-element group 36:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: successors 
    -- CP-element group 36:  members (2) 
      -- CP-element group 36: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_phi_mux_ack
      -- CP-element group 36: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_phi_mux_ack_ps
      -- 
    phi_stmt_2241_phi_mux_ack_1026_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 36_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_2241_ack_0, ack => ccu_daemon_CP_891_elements(36)); -- 
    -- CP-element group 37:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: successors 
    -- CP-element group 37:  members (4) 
      -- CP-element group 37: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_init_circulant_2243_sample_start__ps
      -- CP-element group 37: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_init_circulant_2243_sample_completed__ps
      -- CP-element group 37: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_init_circulant_2243_sample_start_
      -- CP-element group 37: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_init_circulant_2243_sample_completed_
      -- 
    -- Element group ccu_daemon_CP_891_elements(37) is bound as output of CP function.
    -- CP-element group 38:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 38: predecessors 
    -- CP-element group 38: successors 
    -- CP-element group 38: 	40 
    -- CP-element group 38:  members (2) 
      -- CP-element group 38: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_init_circulant_2243_update_start__ps
      -- CP-element group 38: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_init_circulant_2243_update_start_
      -- 
    -- Element group ccu_daemon_CP_891_elements(38) is bound as output of CP function.
    -- CP-element group 39:  join  transition  bypass  pipeline-parent 
    -- CP-element group 39: predecessors 
    -- CP-element group 39: 	40 
    -- CP-element group 39: successors 
    -- CP-element group 39:  members (1) 
      -- CP-element group 39: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_init_circulant_2243_update_completed__ps
      -- 
    ccu_daemon_CP_891_elements(39) <= ccu_daemon_CP_891_elements(40);
    -- CP-element group 40:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 40: predecessors 
    -- CP-element group 40: 	38 
    -- CP-element group 40: successors 
    -- CP-element group 40: 	39 
    -- CP-element group 40:  members (1) 
      -- CP-element group 40: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_init_circulant_2243_update_completed_
      -- 
    -- Element group ccu_daemon_CP_891_elements(40) is a control-delay.
    cp_element_40_delay: control_delay_element  generic map(name => " 40_delay", delay_value => 1)  port map(req => ccu_daemon_CP_891_elements(38), ack => ccu_daemon_CP_891_elements(40), clk => clk, reset =>reset);
    -- CP-element group 41:  join  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 41: predecessors 
    -- CP-element group 41: successors 
    -- CP-element group 41: 	43 
    -- CP-element group 41:  members (4) 
      -- CP-element group 41: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_next_CIRCULANT_2244_sample_start__ps
      -- CP-element group 41: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_next_CIRCULANT_2244_sample_start_
      -- CP-element group 41: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_next_CIRCULANT_2244_Sample/$entry
      -- CP-element group 41: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_next_CIRCULANT_2244_Sample/req
      -- 
    req_1047_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1047_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(41), ack => next_CIRCULANT_3177_2244_buf_req_0); -- 
    -- Element group ccu_daemon_CP_891_elements(41) is bound as output of CP function.
    -- CP-element group 42:  join  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 42: predecessors 
    -- CP-element group 42: successors 
    -- CP-element group 42: 	44 
    -- CP-element group 42:  members (4) 
      -- CP-element group 42: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_next_CIRCULANT_2244_update_start__ps
      -- CP-element group 42: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_next_CIRCULANT_2244_update_start_
      -- CP-element group 42: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_next_CIRCULANT_2244_Update/$entry
      -- CP-element group 42: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_next_CIRCULANT_2244_Update/req
      -- 
    req_1052_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1052_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(42), ack => next_CIRCULANT_3177_2244_buf_req_1); -- 
    -- Element group ccu_daemon_CP_891_elements(42) is bound as output of CP function.
    -- CP-element group 43:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 43: predecessors 
    -- CP-element group 43: 	41 
    -- CP-element group 43: successors 
    -- CP-element group 43:  members (4) 
      -- CP-element group 43: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_next_CIRCULANT_2244_sample_completed__ps
      -- CP-element group 43: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_next_CIRCULANT_2244_sample_completed_
      -- CP-element group 43: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_next_CIRCULANT_2244_Sample/$exit
      -- CP-element group 43: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_next_CIRCULANT_2244_Sample/ack
      -- 
    ack_1048_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 43_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => next_CIRCULANT_3177_2244_buf_ack_0, ack => ccu_daemon_CP_891_elements(43)); -- 
    -- CP-element group 44:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 44: predecessors 
    -- CP-element group 44: 	42 
    -- CP-element group 44: successors 
    -- CP-element group 44:  members (4) 
      -- CP-element group 44: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_next_CIRCULANT_2244_update_completed__ps
      -- CP-element group 44: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_next_CIRCULANT_2244_update_completed_
      -- CP-element group 44: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_next_CIRCULANT_2244_Update/$exit
      -- CP-element group 44: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/R_next_CIRCULANT_2244_Update/ack
      -- 
    ack_1053_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 44_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => next_CIRCULANT_3177_2244_buf_ack_1, ack => ccu_daemon_CP_891_elements(44)); -- 
    -- CP-element group 45:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 45: predecessors 
    -- CP-element group 45: 	31 
    -- CP-element group 45: marked-predecessors 
    -- CP-element group 45: 	47 
    -- CP-element group 45: successors 
    -- CP-element group 45: 	47 
    -- CP-element group 45:  members (3) 
      -- CP-element group 45: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2344_sample_start_
      -- CP-element group 45: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2344_Sample/$entry
      -- CP-element group 45: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2344_Sample/crr
      -- 
    crr_1062_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1062_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(45), ack => call_stmt_2344_call_req_0); -- 
    ccu_daemon_cp_element_group_45: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_45"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(31) & ccu_daemon_CP_891_elements(47);
      gj_ccu_daemon_cp_element_group_45 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(45), clk => clk, reset => reset); --
    end block;
    -- CP-element group 46:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 46: predecessors 
    -- CP-element group 46: marked-predecessors 
    -- CP-element group 46: 	48 
    -- CP-element group 46: 	105 
    -- CP-element group 46: successors 
    -- CP-element group 46: 	48 
    -- CP-element group 46:  members (3) 
      -- CP-element group 46: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2344_update_start_
      -- CP-element group 46: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2344_Update/$entry
      -- CP-element group 46: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2344_Update/ccr
      -- 
    ccr_1067_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1067_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(46), ack => call_stmt_2344_call_req_1); -- 
    ccu_daemon_cp_element_group_46: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_46"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(48) & ccu_daemon_CP_891_elements(105);
      gj_ccu_daemon_cp_element_group_46 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(46), clk => clk, reset => reset); --
    end block;
    -- CP-element group 47:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 47: predecessors 
    -- CP-element group 47: 	45 
    -- CP-element group 47: successors 
    -- CP-element group 47: marked-successors 
    -- CP-element group 47: 	29 
    -- CP-element group 47: 	45 
    -- CP-element group 47:  members (3) 
      -- CP-element group 47: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2344_sample_completed_
      -- CP-element group 47: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2344_Sample/$exit
      -- CP-element group 47: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2344_Sample/cra
      -- 
    cra_1063_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 47_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2344_call_ack_0, ack => ccu_daemon_CP_891_elements(47)); -- 
    -- CP-element group 48:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 48: predecessors 
    -- CP-element group 48: 	46 
    -- CP-element group 48: successors 
    -- CP-element group 48: 	107 
    -- CP-element group 48: marked-successors 
    -- CP-element group 48: 	46 
    -- CP-element group 48:  members (3) 
      -- CP-element group 48: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2344_update_completed_
      -- CP-element group 48: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2344_Update/$exit
      -- CP-element group 48: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2344_Update/cca
      -- 
    cca_1068_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 48_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2344_call_ack_1, ack => ccu_daemon_CP_891_elements(48)); -- 
    -- CP-element group 49:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 49: predecessors 
    -- CP-element group 49: 	24 
    -- CP-element group 49: marked-predecessors 
    -- CP-element group 49: 	51 
    -- CP-element group 49: successors 
    -- CP-element group 49: 	50 
    -- CP-element group 49:  members (3) 
      -- CP-element group 49: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_BROADCAST_INIT_PC_2407_Sample/$entry
      -- CP-element group 49: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_BROADCAST_INIT_PC_2407_Sample/req
      -- CP-element group 49: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_BROADCAST_INIT_PC_2407_sample_start_
      -- 
    req_1076_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1076_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(49), ack => WPIPE_BROADCAST_INIT_PC_2407_inst_req_0); -- 
    ccu_daemon_cp_element_group_49: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_49"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(24) & ccu_daemon_CP_891_elements(51);
      gj_ccu_daemon_cp_element_group_49 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(49), clk => clk, reset => reset); --
    end block;
    -- CP-element group 50:  transition  input  output  bypass  pipeline-parent 
    -- CP-element group 50: predecessors 
    -- CP-element group 50: 	49 
    -- CP-element group 50: successors 
    -- CP-element group 50: 	51 
    -- CP-element group 50:  members (6) 
      -- CP-element group 50: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_BROADCAST_INIT_PC_2407_Sample/$exit
      -- CP-element group 50: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_BROADCAST_INIT_PC_2407_update_start_
      -- CP-element group 50: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_BROADCAST_INIT_PC_2407_sample_completed_
      -- CP-element group 50: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_BROADCAST_INIT_PC_2407_Update/req
      -- CP-element group 50: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_BROADCAST_INIT_PC_2407_Sample/ack
      -- CP-element group 50: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_BROADCAST_INIT_PC_2407_Update/$entry
      -- 
    ack_1077_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 50_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_BROADCAST_INIT_PC_2407_inst_ack_0, ack => ccu_daemon_CP_891_elements(50)); -- 
    req_1081_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1081_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(50), ack => WPIPE_BROADCAST_INIT_PC_2407_inst_req_1); -- 
    -- CP-element group 51:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 51: predecessors 
    -- CP-element group 51: 	50 
    -- CP-element group 51: successors 
    -- CP-element group 51: 	116 
    -- CP-element group 51: marked-successors 
    -- CP-element group 51: 	49 
    -- CP-element group 51:  members (3) 
      -- CP-element group 51: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_BROADCAST_INIT_PC_2407_update_completed_
      -- CP-element group 51: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_BROADCAST_INIT_PC_2407_Update/ack
      -- CP-element group 51: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_BROADCAST_INIT_PC_2407_Update/$exit
      -- 
    ack_1082_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 51_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_BROADCAST_INIT_PC_2407_inst_ack_1, ack => ccu_daemon_CP_891_elements(51)); -- 
    -- CP-element group 52:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 52: predecessors 
    -- CP-element group 52: 	31 
    -- CP-element group 52: marked-predecessors 
    -- CP-element group 52: 	54 
    -- CP-element group 52: successors 
    -- CP-element group 52: 	54 
    -- CP-element group 52:  members (3) 
      -- CP-element group 52: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2491_Sample/$entry
      -- CP-element group 52: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2491_Sample/crr
      -- CP-element group 52: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2491_sample_start_
      -- 
    crr_1090_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1090_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(52), ack => call_stmt_2491_call_req_0); -- 
    ccu_daemon_cp_element_group_52: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_52"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(31) & ccu_daemon_CP_891_elements(54);
      gj_ccu_daemon_cp_element_group_52 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(52), clk => clk, reset => reset); --
    end block;
    -- CP-element group 53:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 53: predecessors 
    -- CP-element group 53: 	112 
    -- CP-element group 53: marked-predecessors 
    -- CP-element group 53: 	55 
    -- CP-element group 53: 	58 
    -- CP-element group 53: 	62 
    -- CP-element group 53: 	66 
    -- CP-element group 53: 	71 
    -- CP-element group 53: 	79 
    -- CP-element group 53: 	83 
    -- CP-element group 53: 	98 
    -- CP-element group 53: 	105 
    -- CP-element group 53: 	110 
    -- CP-element group 53: successors 
    -- CP-element group 53: 	55 
    -- CP-element group 53:  members (3) 
      -- CP-element group 53: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2491_update_start_
      -- CP-element group 53: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2491_Update/$entry
      -- CP-element group 53: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2491_Update/ccr
      -- 
    ccr_1095_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1095_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(53), ack => call_stmt_2491_call_req_1); -- 
    ccu_daemon_cp_element_group_53: block -- 
      constant place_capacities: IntegerArray(0 to 10) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1,8 => 1,9 => 1,10 => 1);
      constant place_markings: IntegerArray(0 to 10)  := (0 => 0,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1,8 => 1,9 => 1,10 => 1);
      constant place_delays: IntegerArray(0 to 10) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0,8 => 0,9 => 0,10 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_53"; 
      signal preds: BooleanArray(1 to 11); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(112) & ccu_daemon_CP_891_elements(55) & ccu_daemon_CP_891_elements(58) & ccu_daemon_CP_891_elements(62) & ccu_daemon_CP_891_elements(66) & ccu_daemon_CP_891_elements(71) & ccu_daemon_CP_891_elements(79) & ccu_daemon_CP_891_elements(83) & ccu_daemon_CP_891_elements(98) & ccu_daemon_CP_891_elements(105) & ccu_daemon_CP_891_elements(110);
      gj_ccu_daemon_cp_element_group_53 : generic_join generic map(name => joinName, number_of_predecessors => 11, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(53), clk => clk, reset => reset); --
    end block;
    -- CP-element group 54:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 54: predecessors 
    -- CP-element group 54: 	52 
    -- CP-element group 54: successors 
    -- CP-element group 54: marked-successors 
    -- CP-element group 54: 	29 
    -- CP-element group 54: 	52 
    -- CP-element group 54:  members (3) 
      -- CP-element group 54: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2491_Sample/$exit
      -- CP-element group 54: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2491_Sample/cra
      -- CP-element group 54: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2491_sample_completed_
      -- 
    cra_1091_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 54_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2491_call_ack_0, ack => ccu_daemon_CP_891_elements(54)); -- 
    -- CP-element group 55:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 55: predecessors 
    -- CP-element group 55: 	53 
    -- CP-element group 55: successors 
    -- CP-element group 55: 	56 
    -- CP-element group 55: 	60 
    -- CP-element group 55: 	64 
    -- CP-element group 55: 	69 
    -- CP-element group 55: 	77 
    -- CP-element group 55: 	81 
    -- CP-element group 55: 	97 
    -- CP-element group 55: 	103 
    -- CP-element group 55: 	109 
    -- CP-element group 55: marked-successors 
    -- CP-element group 55: 	28 
    -- CP-element group 55: 	53 
    -- CP-element group 55:  members (3) 
      -- CP-element group 55: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2491_update_completed_
      -- CP-element group 55: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2491_Update/$exit
      -- CP-element group 55: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2491_Update/cca
      -- 
    cca_1096_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 55_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2491_call_ack_1, ack => ccu_daemon_CP_891_elements(55)); -- 
    -- CP-element group 56:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 56: predecessors 
    -- CP-element group 56: 	31 
    -- CP-element group 56: 	55 
    -- CP-element group 56: marked-predecessors 
    -- CP-element group 56: 	58 
    -- CP-element group 56: 	98 
    -- CP-element group 56: successors 
    -- CP-element group 56: 	58 
    -- CP-element group 56:  members (3) 
      -- CP-element group 56: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2533_Sample/$entry
      -- CP-element group 56: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2533_Sample/crr
      -- CP-element group 56: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2533_sample_start_
      -- 
    crr_1104_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1104_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(56), ack => call_stmt_2533_call_req_0); -- 
    ccu_daemon_cp_element_group_56: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 1,1 => 1,2 => 1,3 => 1);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 0,1 => 0,2 => 1,3 => 1);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 1,3 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_56"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(31) & ccu_daemon_CP_891_elements(55) & ccu_daemon_CP_891_elements(58) & ccu_daemon_CP_891_elements(98);
      gj_ccu_daemon_cp_element_group_56 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(56), clk => clk, reset => reset); --
    end block;
    -- CP-element group 57:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 57: predecessors 
    -- CP-element group 57: marked-predecessors 
    -- CP-element group 57: 	59 
    -- CP-element group 57: successors 
    -- CP-element group 57: 	59 
    -- CP-element group 57:  members (3) 
      -- CP-element group 57: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2533_Update/$entry
      -- CP-element group 57: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2533_Update/ccr
      -- CP-element group 57: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2533_update_start_
      -- 
    ccr_1109_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1109_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(57), ack => call_stmt_2533_call_req_1); -- 
    ccu_daemon_cp_element_group_57: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_57"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= ccu_daemon_CP_891_elements(59);
      gj_ccu_daemon_cp_element_group_57 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(57), clk => clk, reset => reset); --
    end block;
    -- CP-element group 58:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 58: predecessors 
    -- CP-element group 58: 	56 
    -- CP-element group 58: successors 
    -- CP-element group 58: 	100 
    -- CP-element group 58: marked-successors 
    -- CP-element group 58: 	29 
    -- CP-element group 58: 	53 
    -- CP-element group 58: 	56 
    -- CP-element group 58:  members (3) 
      -- CP-element group 58: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2533_Sample/$exit
      -- CP-element group 58: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2533_Sample/cra
      -- CP-element group 58: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2533_sample_completed_
      -- 
    cra_1105_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 58_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2533_call_ack_0, ack => ccu_daemon_CP_891_elements(58)); -- 
    -- CP-element group 59:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 59: predecessors 
    -- CP-element group 59: 	57 
    -- CP-element group 59: successors 
    -- CP-element group 59: 	116 
    -- CP-element group 59: marked-successors 
    -- CP-element group 59: 	57 
    -- CP-element group 59:  members (3) 
      -- CP-element group 59: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2533_Update/$exit
      -- CP-element group 59: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2533_Update/cca
      -- CP-element group 59: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2533_update_completed_
      -- 
    cca_1110_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 59_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2533_call_ack_1, ack => ccu_daemon_CP_891_elements(59)); -- 
    -- CP-element group 60:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 60: predecessors 
    -- CP-element group 60: 	31 
    -- CP-element group 60: 	55 
    -- CP-element group 60: marked-predecessors 
    -- CP-element group 60: 	62 
    -- CP-element group 60: 	66 
    -- CP-element group 60: 	71 
    -- CP-element group 60: successors 
    -- CP-element group 60: 	62 
    -- CP-element group 60:  members (3) 
      -- CP-element group 60: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2550_sample_start_
      -- CP-element group 60: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2550_Sample/$entry
      -- CP-element group 60: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2550_Sample/crr
      -- 
    crr_1118_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1118_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(60), ack => call_stmt_2550_call_req_0); -- 
    ccu_daemon_cp_element_group_60: block -- 
      constant place_capacities: IntegerArray(0 to 4) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1);
      constant place_markings: IntegerArray(0 to 4)  := (0 => 0,1 => 0,2 => 1,3 => 1,4 => 1);
      constant place_delays: IntegerArray(0 to 4) := (0 => 0,1 => 0,2 => 1,3 => 0,4 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_60"; 
      signal preds: BooleanArray(1 to 5); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(31) & ccu_daemon_CP_891_elements(55) & ccu_daemon_CP_891_elements(62) & ccu_daemon_CP_891_elements(66) & ccu_daemon_CP_891_elements(71);
      gj_ccu_daemon_cp_element_group_60 : generic_join generic map(name => joinName, number_of_predecessors => 5, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(60), clk => clk, reset => reset); --
    end block;
    -- CP-element group 61:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 61: predecessors 
    -- CP-element group 61: marked-predecessors 
    -- CP-element group 61: 	63 
    -- CP-element group 61: successors 
    -- CP-element group 61: 	63 
    -- CP-element group 61:  members (3) 
      -- CP-element group 61: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2550_update_start_
      -- CP-element group 61: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2550_Update/$entry
      -- CP-element group 61: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2550_Update/ccr
      -- 
    ccr_1123_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1123_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(61), ack => call_stmt_2550_call_req_1); -- 
    ccu_daemon_cp_element_group_61: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_61"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= ccu_daemon_CP_891_elements(63);
      gj_ccu_daemon_cp_element_group_61 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(61), clk => clk, reset => reset); --
    end block;
    -- CP-element group 62:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 62: predecessors 
    -- CP-element group 62: 	60 
    -- CP-element group 62: successors 
    -- CP-element group 62: 	68 
    -- CP-element group 62: 	73 
    -- CP-element group 62: marked-successors 
    -- CP-element group 62: 	29 
    -- CP-element group 62: 	53 
    -- CP-element group 62: 	60 
    -- CP-element group 62:  members (3) 
      -- CP-element group 62: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2550_sample_completed_
      -- CP-element group 62: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2550_Sample/$exit
      -- CP-element group 62: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2550_Sample/cra
      -- 
    cra_1119_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 62_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2550_call_ack_0, ack => ccu_daemon_CP_891_elements(62)); -- 
    -- CP-element group 63:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 63: predecessors 
    -- CP-element group 63: 	61 
    -- CP-element group 63: successors 
    -- CP-element group 63: 	116 
    -- CP-element group 63: marked-successors 
    -- CP-element group 63: 	61 
    -- CP-element group 63:  members (3) 
      -- CP-element group 63: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2550_update_completed_
      -- CP-element group 63: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2550_Update/$exit
      -- CP-element group 63: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2550_Update/cca
      -- 
    cca_1124_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 63_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2550_call_ack_1, ack => ccu_daemon_CP_891_elements(63)); -- 
    -- CP-element group 64:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 64: predecessors 
    -- CP-element group 64: 	31 
    -- CP-element group 64: 	55 
    -- CP-element group 64: 	68 
    -- CP-element group 64: marked-predecessors 
    -- CP-element group 64: 	66 
    -- CP-element group 64: 	98 
    -- CP-element group 64: successors 
    -- CP-element group 64: 	66 
    -- CP-element group 64:  members (3) 
      -- CP-element group 64: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2567_Sample/crr
      -- CP-element group 64: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2567_sample_start_
      -- CP-element group 64: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2567_Sample/$entry
      -- 
    crr_1132_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1132_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(64), ack => call_stmt_2567_call_req_0); -- 
    ccu_daemon_cp_element_group_64: block -- 
      constant place_capacities: IntegerArray(0 to 4) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1);
      constant place_markings: IntegerArray(0 to 4)  := (0 => 0,1 => 0,2 => 0,3 => 1,4 => 1);
      constant place_delays: IntegerArray(0 to 4) := (0 => 0,1 => 0,2 => 0,3 => 1,4 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_64"; 
      signal preds: BooleanArray(1 to 5); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(31) & ccu_daemon_CP_891_elements(55) & ccu_daemon_CP_891_elements(68) & ccu_daemon_CP_891_elements(66) & ccu_daemon_CP_891_elements(98);
      gj_ccu_daemon_cp_element_group_64 : generic_join generic map(name => joinName, number_of_predecessors => 5, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(64), clk => clk, reset => reset); --
    end block;
    -- CP-element group 65:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 65: predecessors 
    -- CP-element group 65: marked-predecessors 
    -- CP-element group 65: 	67 
    -- CP-element group 65: successors 
    -- CP-element group 65: 	67 
    -- CP-element group 65:  members (3) 
      -- CP-element group 65: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2567_Update/$entry
      -- CP-element group 65: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2567_Update/ccr
      -- CP-element group 65: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2567_update_start_
      -- 
    ccr_1137_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1137_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(65), ack => call_stmt_2567_call_req_1); -- 
    ccu_daemon_cp_element_group_65: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_65"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= ccu_daemon_CP_891_elements(67);
      gj_ccu_daemon_cp_element_group_65 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(65), clk => clk, reset => reset); --
    end block;
    -- CP-element group 66:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 66: predecessors 
    -- CP-element group 66: 	64 
    -- CP-element group 66: successors 
    -- CP-element group 66: 	101 
    -- CP-element group 66: marked-successors 
    -- CP-element group 66: 	29 
    -- CP-element group 66: 	53 
    -- CP-element group 66: 	60 
    -- CP-element group 66: 	64 
    -- CP-element group 66:  members (3) 
      -- CP-element group 66: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2567_Sample/cra
      -- CP-element group 66: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2567_sample_completed_
      -- CP-element group 66: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2567_Sample/$exit
      -- 
    cra_1133_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 66_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2567_call_ack_0, ack => ccu_daemon_CP_891_elements(66)); -- 
    -- CP-element group 67:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 67: predecessors 
    -- CP-element group 67: 	65 
    -- CP-element group 67: successors 
    -- CP-element group 67: 	116 
    -- CP-element group 67: marked-successors 
    -- CP-element group 67: 	65 
    -- CP-element group 67:  members (3) 
      -- CP-element group 67: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2567_Update/$exit
      -- CP-element group 67: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2567_update_completed_
      -- CP-element group 67: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2567_Update/cca
      -- 
    cca_1138_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 67_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2567_call_ack_1, ack => ccu_daemon_CP_891_elements(67)); -- 
    -- CP-element group 68:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 68: predecessors 
    -- CP-element group 68: 	62 
    -- CP-element group 68: successors 
    -- CP-element group 68: 	64 
    -- CP-element group 68:  members (1) 
      -- CP-element group 68: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/synch_call_stmt_2567_sample_start__call_stmt_2550_sample_completed_
      -- 
    -- Element group ccu_daemon_CP_891_elements(68) is a control-delay.
    cp_element_68_delay: control_delay_element  generic map(name => " 68_delay", delay_value => 1)  port map(req => ccu_daemon_CP_891_elements(62), ack => ccu_daemon_CP_891_elements(68), clk => clk, reset =>reset);
    -- CP-element group 69:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 69: predecessors 
    -- CP-element group 69: 	31 
    -- CP-element group 69: 	55 
    -- CP-element group 69: 	73 
    -- CP-element group 69: marked-predecessors 
    -- CP-element group 69: 	71 
    -- CP-element group 69: 	98 
    -- CP-element group 69: successors 
    -- CP-element group 69: 	71 
    -- CP-element group 69:  members (3) 
      -- CP-element group 69: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2581_Sample/crr
      -- CP-element group 69: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2581_Sample/$entry
      -- CP-element group 69: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2581_sample_start_
      -- 
    crr_1147_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1147_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(69), ack => call_stmt_2581_call_req_0); -- 
    ccu_daemon_cp_element_group_69: block -- 
      constant place_capacities: IntegerArray(0 to 4) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1);
      constant place_markings: IntegerArray(0 to 4)  := (0 => 0,1 => 0,2 => 0,3 => 1,4 => 1);
      constant place_delays: IntegerArray(0 to 4) := (0 => 0,1 => 0,2 => 0,3 => 1,4 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_69"; 
      signal preds: BooleanArray(1 to 5); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(31) & ccu_daemon_CP_891_elements(55) & ccu_daemon_CP_891_elements(73) & ccu_daemon_CP_891_elements(71) & ccu_daemon_CP_891_elements(98);
      gj_ccu_daemon_cp_element_group_69 : generic_join generic map(name => joinName, number_of_predecessors => 5, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(69), clk => clk, reset => reset); --
    end block;
    -- CP-element group 70:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 70: predecessors 
    -- CP-element group 70: marked-predecessors 
    -- CP-element group 70: 	72 
    -- CP-element group 70: successors 
    -- CP-element group 70: 	72 
    -- CP-element group 70:  members (3) 
      -- CP-element group 70: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2581_Update/ccr
      -- CP-element group 70: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2581_Update/$entry
      -- CP-element group 70: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2581_update_start_
      -- 
    ccr_1152_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1152_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(70), ack => call_stmt_2581_call_req_1); -- 
    ccu_daemon_cp_element_group_70: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_70"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= ccu_daemon_CP_891_elements(72);
      gj_ccu_daemon_cp_element_group_70 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(70), clk => clk, reset => reset); --
    end block;
    -- CP-element group 71:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 71: predecessors 
    -- CP-element group 71: 	69 
    -- CP-element group 71: successors 
    -- CP-element group 71: 	102 
    -- CP-element group 71: marked-successors 
    -- CP-element group 71: 	29 
    -- CP-element group 71: 	53 
    -- CP-element group 71: 	60 
    -- CP-element group 71: 	69 
    -- CP-element group 71:  members (3) 
      -- CP-element group 71: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2581_Sample/cra
      -- CP-element group 71: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2581_Sample/$exit
      -- CP-element group 71: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2581_sample_completed_
      -- 
    cra_1148_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 71_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2581_call_ack_0, ack => ccu_daemon_CP_891_elements(71)); -- 
    -- CP-element group 72:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 72: predecessors 
    -- CP-element group 72: 	70 
    -- CP-element group 72: successors 
    -- CP-element group 72: 	116 
    -- CP-element group 72: marked-successors 
    -- CP-element group 72: 	70 
    -- CP-element group 72:  members (3) 
      -- CP-element group 72: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2581_Update/cca
      -- CP-element group 72: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2581_Update/$exit
      -- CP-element group 72: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2581_update_completed_
      -- 
    cca_1153_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 72_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2581_call_ack_1, ack => ccu_daemon_CP_891_elements(72)); -- 
    -- CP-element group 73:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 73: predecessors 
    -- CP-element group 73: 	62 
    -- CP-element group 73: successors 
    -- CP-element group 73: 	69 
    -- CP-element group 73:  members (1) 
      -- CP-element group 73: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/synch_call_stmt_2581_sample_start__call_stmt_2550_sample_completed_
      -- 
    -- Element group ccu_daemon_CP_891_elements(73) is a control-delay.
    cp_element_73_delay: control_delay_element  generic map(name => " 73_delay", delay_value => 1)  port map(req => ccu_daemon_CP_891_elements(62), ack => ccu_daemon_CP_891_elements(73), clk => clk, reset =>reset);
    -- CP-element group 74:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 74: predecessors 
    -- CP-element group 74: 	31 
    -- CP-element group 74: marked-predecessors 
    -- CP-element group 74: 	76 
    -- CP-element group 74: 	111 
    -- CP-element group 74: successors 
    -- CP-element group 74: 	75 
    -- CP-element group 74:  members (3) 
      -- CP-element group 74: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2677_Sample/req
      -- CP-element group 74: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2677_Sample/$entry
      -- CP-element group 74: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2677_sample_start_
      -- 
    req_1162_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1162_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(74), ack => WPIPE_ccu_to_teu_2677_inst_req_0); -- 
    ccu_daemon_cp_element_group_74: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_74"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(31) & ccu_daemon_CP_891_elements(76) & ccu_daemon_CP_891_elements(111);
      gj_ccu_daemon_cp_element_group_74 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(74), clk => clk, reset => reset); --
    end block;
    -- CP-element group 75:  fork  transition  input  output  bypass  pipeline-parent 
    -- CP-element group 75: predecessors 
    -- CP-element group 75: 	74 
    -- CP-element group 75: successors 
    -- CP-element group 75: 	76 
    -- CP-element group 75: marked-successors 
    -- CP-element group 75: 	29 
    -- CP-element group 75:  members (6) 
      -- CP-element group 75: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2677_Sample/ack
      -- CP-element group 75: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2677_Update/$entry
      -- CP-element group 75: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2677_Sample/$exit
      -- CP-element group 75: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2677_Update/req
      -- CP-element group 75: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2677_update_start_
      -- CP-element group 75: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2677_sample_completed_
      -- 
    ack_1163_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 75_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_teu_2677_inst_ack_0, ack => ccu_daemon_CP_891_elements(75)); -- 
    req_1167_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1167_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(75), ack => WPIPE_ccu_to_teu_2677_inst_req_1); -- 
    -- CP-element group 76:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 76: predecessors 
    -- CP-element group 76: 	75 
    -- CP-element group 76: successors 
    -- CP-element group 76: 	97 
    -- CP-element group 76: marked-successors 
    -- CP-element group 76: 	74 
    -- CP-element group 76:  members (3) 
      -- CP-element group 76: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2677_Update/ack
      -- CP-element group 76: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2677_Update/$exit
      -- CP-element group 76: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2677_update_completed_
      -- 
    ack_1168_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 76_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_teu_2677_inst_ack_1, ack => ccu_daemon_CP_891_elements(76)); -- 
    -- CP-element group 77:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 77: predecessors 
    -- CP-element group 77: 	31 
    -- CP-element group 77: 	55 
    -- CP-element group 77: marked-predecessors 
    -- CP-element group 77: 	79 
    -- CP-element group 77: 	86 
    -- CP-element group 77: 	94 
    -- CP-element group 77: successors 
    -- CP-element group 77: 	79 
    -- CP-element group 77:  members (3) 
      -- CP-element group 77: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2753_sample_start_
      -- CP-element group 77: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2753_Sample/$entry
      -- CP-element group 77: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2753_Sample/crr
      -- 
    crr_1176_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1176_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(77), ack => call_stmt_2753_call_req_0); -- 
    ccu_daemon_cp_element_group_77: block -- 
      constant place_capacities: IntegerArray(0 to 4) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1);
      constant place_markings: IntegerArray(0 to 4)  := (0 => 0,1 => 0,2 => 1,3 => 1,4 => 1);
      constant place_delays: IntegerArray(0 to 4) := (0 => 0,1 => 0,2 => 1,3 => 0,4 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_77"; 
      signal preds: BooleanArray(1 to 5); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(31) & ccu_daemon_CP_891_elements(55) & ccu_daemon_CP_891_elements(79) & ccu_daemon_CP_891_elements(86) & ccu_daemon_CP_891_elements(94);
      gj_ccu_daemon_cp_element_group_77 : generic_join generic map(name => joinName, number_of_predecessors => 5, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(77), clk => clk, reset => reset); --
    end block;
    -- CP-element group 78:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 78: predecessors 
    -- CP-element group 78: 	113 
    -- CP-element group 78: marked-predecessors 
    -- CP-element group 78: 	80 
    -- CP-element group 78: 	98 
    -- CP-element group 78: successors 
    -- CP-element group 78: 	80 
    -- CP-element group 78:  members (3) 
      -- CP-element group 78: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2753_update_start_
      -- CP-element group 78: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2753_Update/$entry
      -- CP-element group 78: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2753_Update/ccr
      -- 
    ccr_1181_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1181_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(78), ack => call_stmt_2753_call_req_1); -- 
    ccu_daemon_cp_element_group_78: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_78"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(113) & ccu_daemon_CP_891_elements(80) & ccu_daemon_CP_891_elements(98);
      gj_ccu_daemon_cp_element_group_78 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(78), clk => clk, reset => reset); --
    end block;
    -- CP-element group 79:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 79: predecessors 
    -- CP-element group 79: 	77 
    -- CP-element group 79: successors 
    -- CP-element group 79: 	88 
    -- CP-element group 79: 	96 
    -- CP-element group 79: marked-successors 
    -- CP-element group 79: 	29 
    -- CP-element group 79: 	53 
    -- CP-element group 79: 	77 
    -- CP-element group 79:  members (3) 
      -- CP-element group 79: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2753_sample_completed_
      -- CP-element group 79: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2753_Sample/$exit
      -- CP-element group 79: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2753_Sample/cra
      -- 
    cra_1177_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 79_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2753_call_ack_0, ack => ccu_daemon_CP_891_elements(79)); -- 
    -- CP-element group 80:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 80: predecessors 
    -- CP-element group 80: 	78 
    -- CP-element group 80: successors 
    -- CP-element group 80: 	97 
    -- CP-element group 80: marked-successors 
    -- CP-element group 80: 	28 
    -- CP-element group 80: 	78 
    -- CP-element group 80:  members (3) 
      -- CP-element group 80: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2753_update_completed_
      -- CP-element group 80: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2753_Update/$exit
      -- CP-element group 80: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/call_stmt_2753_Update/cca
      -- 
    cca_1182_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 80_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2753_call_ack_1, ack => ccu_daemon_CP_891_elements(80)); -- 
    -- CP-element group 81:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 81: predecessors 
    -- CP-element group 81: 	31 
    -- CP-element group 81: 	55 
    -- CP-element group 81: marked-predecessors 
    -- CP-element group 81: 	83 
    -- CP-element group 81: successors 
    -- CP-element group 81: 	83 
    -- CP-element group 81:  members (3) 
      -- CP-element group 81: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/CONCAT_u5_u8_2766_sample_start_
      -- CP-element group 81: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/CONCAT_u5_u8_2766_Sample/$entry
      -- CP-element group 81: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/CONCAT_u5_u8_2766_Sample/rr
      -- 
    rr_1190_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1190_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(81), ack => CONCAT_u5_u8_2766_inst_req_0); -- 
    ccu_daemon_cp_element_group_81: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 1);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_81"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(31) & ccu_daemon_CP_891_elements(55) & ccu_daemon_CP_891_elements(83);
      gj_ccu_daemon_cp_element_group_81 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(81), clk => clk, reset => reset); --
    end block;
    -- CP-element group 82:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 82: predecessors 
    -- CP-element group 82: marked-predecessors 
    -- CP-element group 82: 	84 
    -- CP-element group 82: 	86 
    -- CP-element group 82: 	91 
    -- CP-element group 82: successors 
    -- CP-element group 82: 	84 
    -- CP-element group 82:  members (3) 
      -- CP-element group 82: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/CONCAT_u5_u8_2766_update_start_
      -- CP-element group 82: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/CONCAT_u5_u8_2766_Update/$entry
      -- CP-element group 82: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/CONCAT_u5_u8_2766_Update/cr
      -- 
    cr_1195_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1195_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(82), ack => CONCAT_u5_u8_2766_inst_req_1); -- 
    ccu_daemon_cp_element_group_82: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 1,1 => 1,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_82"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(84) & ccu_daemon_CP_891_elements(86) & ccu_daemon_CP_891_elements(91);
      gj_ccu_daemon_cp_element_group_82 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(82), clk => clk, reset => reset); --
    end block;
    -- CP-element group 83:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 83: predecessors 
    -- CP-element group 83: 	81 
    -- CP-element group 83: successors 
    -- CP-element group 83: marked-successors 
    -- CP-element group 83: 	29 
    -- CP-element group 83: 	53 
    -- CP-element group 83: 	81 
    -- CP-element group 83:  members (3) 
      -- CP-element group 83: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/CONCAT_u5_u8_2766_sample_completed_
      -- CP-element group 83: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/CONCAT_u5_u8_2766_Sample/$exit
      -- CP-element group 83: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/CONCAT_u5_u8_2766_Sample/ra
      -- 
    ra_1191_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 83_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u5_u8_2766_inst_ack_0, ack => ccu_daemon_CP_891_elements(83)); -- 
    -- CP-element group 84:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 84: predecessors 
    -- CP-element group 84: 	82 
    -- CP-element group 84: successors 
    -- CP-element group 84: 	85 
    -- CP-element group 84: 	89 
    -- CP-element group 84: marked-successors 
    -- CP-element group 84: 	82 
    -- CP-element group 84:  members (3) 
      -- CP-element group 84: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/CONCAT_u5_u8_2766_update_completed_
      -- CP-element group 84: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/CONCAT_u5_u8_2766_Update/$exit
      -- CP-element group 84: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/CONCAT_u5_u8_2766_Update/ca
      -- 
    ca_1196_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 84_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u5_u8_2766_inst_ack_1, ack => ccu_daemon_CP_891_elements(84)); -- 
    -- CP-element group 85:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 85: predecessors 
    -- CP-element group 85: 	84 
    -- CP-element group 85: 	88 
    -- CP-element group 85: marked-predecessors 
    -- CP-element group 85: 	87 
    -- CP-element group 85: successors 
    -- CP-element group 85: 	86 
    -- CP-element group 85:  members (3) 
      -- CP-element group 85: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_AJIT_to_ENV_processor_mode_2768_sample_start_
      -- CP-element group 85: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_AJIT_to_ENV_processor_mode_2768_Sample/$entry
      -- CP-element group 85: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_AJIT_to_ENV_processor_mode_2768_Sample/req
      -- 
    req_1204_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1204_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(85), ack => WPIPE_AJIT_to_ENV_processor_mode_2768_inst_req_0); -- 
    ccu_daemon_cp_element_group_85: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_85"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(84) & ccu_daemon_CP_891_elements(88) & ccu_daemon_CP_891_elements(87);
      gj_ccu_daemon_cp_element_group_85 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(85), clk => clk, reset => reset); --
    end block;
    -- CP-element group 86:  fork  transition  input  output  bypass  pipeline-parent 
    -- CP-element group 86: predecessors 
    -- CP-element group 86: 	85 
    -- CP-element group 86: successors 
    -- CP-element group 86: 	87 
    -- CP-element group 86: marked-successors 
    -- CP-element group 86: 	77 
    -- CP-element group 86: 	82 
    -- CP-element group 86:  members (6) 
      -- CP-element group 86: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_AJIT_to_ENV_processor_mode_2768_Update/req
      -- CP-element group 86: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_AJIT_to_ENV_processor_mode_2768_sample_completed_
      -- CP-element group 86: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_AJIT_to_ENV_processor_mode_2768_update_start_
      -- CP-element group 86: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_AJIT_to_ENV_processor_mode_2768_Sample/$exit
      -- CP-element group 86: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_AJIT_to_ENV_processor_mode_2768_Sample/ack
      -- CP-element group 86: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_AJIT_to_ENV_processor_mode_2768_Update/$entry
      -- 
    ack_1205_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 86_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_AJIT_to_ENV_processor_mode_2768_inst_ack_0, ack => ccu_daemon_CP_891_elements(86)); -- 
    req_1209_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1209_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(86), ack => WPIPE_AJIT_to_ENV_processor_mode_2768_inst_req_1); -- 
    -- CP-element group 87:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 87: predecessors 
    -- CP-element group 87: 	86 
    -- CP-element group 87: successors 
    -- CP-element group 87: 	116 
    -- CP-element group 87: marked-successors 
    -- CP-element group 87: 	85 
    -- CP-element group 87:  members (3) 
      -- CP-element group 87: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_AJIT_to_ENV_processor_mode_2768_Update/$exit
      -- CP-element group 87: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_AJIT_to_ENV_processor_mode_2768_Update/ack
      -- CP-element group 87: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_AJIT_to_ENV_processor_mode_2768_update_completed_
      -- 
    ack_1210_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 87_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_AJIT_to_ENV_processor_mode_2768_inst_ack_1, ack => ccu_daemon_CP_891_elements(87)); -- 
    -- CP-element group 88:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 88: predecessors 
    -- CP-element group 88: 	79 
    -- CP-element group 88: successors 
    -- CP-element group 88: 	85 
    -- CP-element group 88:  members (1) 
      -- CP-element group 88: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/synch_WPIPE_AJIT_to_ENV_processor_mode_2768_sample_start__call_stmt_2753_sample_completed_
      -- 
    -- Element group ccu_daemon_CP_891_elements(88) is a control-delay.
    cp_element_88_delay: control_delay_element  generic map(name => " 88_delay", delay_value => 1)  port map(req => ccu_daemon_CP_891_elements(79), ack => ccu_daemon_CP_891_elements(88), clk => clk, reset =>reset);
    -- CP-element group 89:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 89: predecessors 
    -- CP-element group 89: 	84 
    -- CP-element group 89: marked-predecessors 
    -- CP-element group 89: 	91 
    -- CP-element group 89: successors 
    -- CP-element group 89: 	91 
    -- CP-element group 89:  members (3) 
      -- CP-element group 89: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/type_cast_2773_Sample/rr
      -- CP-element group 89: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/type_cast_2773_Sample/$entry
      -- CP-element group 89: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/type_cast_2773_sample_start_
      -- 
    rr_1219_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1219_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(89), ack => type_cast_2773_inst_req_0); -- 
    ccu_daemon_cp_element_group_89: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_89"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(84) & ccu_daemon_CP_891_elements(91);
      gj_ccu_daemon_cp_element_group_89 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(89), clk => clk, reset => reset); --
    end block;
    -- CP-element group 90:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 90: predecessors 
    -- CP-element group 90: marked-predecessors 
    -- CP-element group 90: 	92 
    -- CP-element group 90: 	94 
    -- CP-element group 90: successors 
    -- CP-element group 90: 	92 
    -- CP-element group 90:  members (3) 
      -- CP-element group 90: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/type_cast_2773_Update/cr
      -- CP-element group 90: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/type_cast_2773_Update/$entry
      -- CP-element group 90: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/type_cast_2773_update_start_
      -- 
    cr_1224_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1224_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(90), ack => type_cast_2773_inst_req_1); -- 
    ccu_daemon_cp_element_group_90: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_90"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(92) & ccu_daemon_CP_891_elements(94);
      gj_ccu_daemon_cp_element_group_90 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(90), clk => clk, reset => reset); --
    end block;
    -- CP-element group 91:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 91: predecessors 
    -- CP-element group 91: 	89 
    -- CP-element group 91: successors 
    -- CP-element group 91: marked-successors 
    -- CP-element group 91: 	82 
    -- CP-element group 91: 	89 
    -- CP-element group 91:  members (3) 
      -- CP-element group 91: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/type_cast_2773_Sample/$exit
      -- CP-element group 91: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/type_cast_2773_Sample/ra
      -- CP-element group 91: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/type_cast_2773_sample_completed_
      -- 
    ra_1220_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 91_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => type_cast_2773_inst_ack_0, ack => ccu_daemon_CP_891_elements(91)); -- 
    -- CP-element group 92:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 92: predecessors 
    -- CP-element group 92: 	90 
    -- CP-element group 92: successors 
    -- CP-element group 92: 	93 
    -- CP-element group 92: marked-successors 
    -- CP-element group 92: 	90 
    -- CP-element group 92:  members (3) 
      -- CP-element group 92: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/type_cast_2773_Update/$exit
      -- CP-element group 92: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/type_cast_2773_Update/ca
      -- CP-element group 92: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/type_cast_2773_update_completed_
      -- 
    ca_1225_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 92_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => type_cast_2773_inst_ack_1, ack => ccu_daemon_CP_891_elements(92)); -- 
    -- CP-element group 93:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 93: predecessors 
    -- CP-element group 93: 	92 
    -- CP-element group 93: 	96 
    -- CP-element group 93: marked-predecessors 
    -- CP-element group 93: 	95 
    -- CP-element group 93: successors 
    -- CP-element group 93: 	94 
    -- CP-element group 93:  members (3) 
      -- CP-element group 93: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_CCU_TO_DBG_MODE_SIG_2771_sample_start_
      -- CP-element group 93: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_CCU_TO_DBG_MODE_SIG_2771_Sample/$entry
      -- CP-element group 93: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_CCU_TO_DBG_MODE_SIG_2771_Sample/req
      -- 
    req_1233_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1233_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(93), ack => WPIPE_CCU_TO_DBG_MODE_SIG_2771_inst_req_0); -- 
    ccu_daemon_cp_element_group_93: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_93"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(92) & ccu_daemon_CP_891_elements(96) & ccu_daemon_CP_891_elements(95);
      gj_ccu_daemon_cp_element_group_93 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(93), clk => clk, reset => reset); --
    end block;
    -- CP-element group 94:  fork  transition  input  output  bypass  pipeline-parent 
    -- CP-element group 94: predecessors 
    -- CP-element group 94: 	93 
    -- CP-element group 94: successors 
    -- CP-element group 94: 	95 
    -- CP-element group 94: marked-successors 
    -- CP-element group 94: 	77 
    -- CP-element group 94: 	90 
    -- CP-element group 94:  members (6) 
      -- CP-element group 94: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_CCU_TO_DBG_MODE_SIG_2771_sample_completed_
      -- CP-element group 94: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_CCU_TO_DBG_MODE_SIG_2771_update_start_
      -- CP-element group 94: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_CCU_TO_DBG_MODE_SIG_2771_Sample/$exit
      -- CP-element group 94: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_CCU_TO_DBG_MODE_SIG_2771_Sample/ack
      -- CP-element group 94: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_CCU_TO_DBG_MODE_SIG_2771_Update/$entry
      -- CP-element group 94: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_CCU_TO_DBG_MODE_SIG_2771_Update/req
      -- 
    ack_1234_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 94_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_CCU_TO_DBG_MODE_SIG_2771_inst_ack_0, ack => ccu_daemon_CP_891_elements(94)); -- 
    req_1238_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1238_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(94), ack => WPIPE_CCU_TO_DBG_MODE_SIG_2771_inst_req_1); -- 
    -- CP-element group 95:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 95: predecessors 
    -- CP-element group 95: 	94 
    -- CP-element group 95: successors 
    -- CP-element group 95: 	116 
    -- CP-element group 95: marked-successors 
    -- CP-element group 95: 	93 
    -- CP-element group 95:  members (3) 
      -- CP-element group 95: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_CCU_TO_DBG_MODE_SIG_2771_update_completed_
      -- CP-element group 95: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_CCU_TO_DBG_MODE_SIG_2771_Update/$exit
      -- CP-element group 95: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_CCU_TO_DBG_MODE_SIG_2771_Update/ack
      -- 
    ack_1239_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 95_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_CCU_TO_DBG_MODE_SIG_2771_inst_ack_1, ack => ccu_daemon_CP_891_elements(95)); -- 
    -- CP-element group 96:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 96: predecessors 
    -- CP-element group 96: 	79 
    -- CP-element group 96: successors 
    -- CP-element group 96: 	93 
    -- CP-element group 96:  members (1) 
      -- CP-element group 96: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/synch_WPIPE_CCU_TO_DBG_MODE_SIG_2771_sample_start__call_stmt_2753_sample_completed_
      -- 
    -- Element group ccu_daemon_CP_891_elements(96) is a control-delay.
    cp_element_96_delay: control_delay_element  generic map(name => " 96_delay", delay_value => 1)  port map(req => ccu_daemon_CP_891_elements(79), ack => ccu_daemon_CP_891_elements(96), clk => clk, reset =>reset);
    -- CP-element group 97:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 97: predecessors 
    -- CP-element group 97: 	31 
    -- CP-element group 97: 	55 
    -- CP-element group 97: 	76 
    -- CP-element group 97: 	80 
    -- CP-element group 97: 	100 
    -- CP-element group 97: 	101 
    -- CP-element group 97: 	102 
    -- CP-element group 97: marked-predecessors 
    -- CP-element group 97: 	99 
    -- CP-element group 97: 	105 
    -- CP-element group 97: successors 
    -- CP-element group 97: 	98 
    -- CP-element group 97:  members (3) 
      -- CP-element group 97: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2831_sample_start_
      -- CP-element group 97: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2831_Sample/$entry
      -- CP-element group 97: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2831_Sample/req
      -- 
    req_1248_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1248_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(97), ack => WPIPE_ccu_to_teu_2831_inst_req_0); -- 
    ccu_daemon_cp_element_group_97: block -- 
      constant place_capacities: IntegerArray(0 to 8) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1,8 => 1);
      constant place_markings: IntegerArray(0 to 8)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 1,8 => 1);
      constant place_delays: IntegerArray(0 to 8) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0,8 => 0);
      constant joinName: string(1 to 30) := "ccu_daemon_cp_element_group_97"; 
      signal preds: BooleanArray(1 to 9); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(31) & ccu_daemon_CP_891_elements(55) & ccu_daemon_CP_891_elements(76) & ccu_daemon_CP_891_elements(80) & ccu_daemon_CP_891_elements(100) & ccu_daemon_CP_891_elements(101) & ccu_daemon_CP_891_elements(102) & ccu_daemon_CP_891_elements(99) & ccu_daemon_CP_891_elements(105);
      gj_ccu_daemon_cp_element_group_97 : generic_join generic map(name => joinName, number_of_predecessors => 9, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(97), clk => clk, reset => reset); --
    end block;
    -- CP-element group 98:  fork  transition  input  output  bypass  pipeline-parent 
    -- CP-element group 98: predecessors 
    -- CP-element group 98: 	97 
    -- CP-element group 98: successors 
    -- CP-element group 98: 	99 
    -- CP-element group 98: 	108 
    -- CP-element group 98: marked-successors 
    -- CP-element group 98: 	29 
    -- CP-element group 98: 	53 
    -- CP-element group 98: 	56 
    -- CP-element group 98: 	64 
    -- CP-element group 98: 	69 
    -- CP-element group 98: 	78 
    -- CP-element group 98:  members (6) 
      -- CP-element group 98: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2831_Sample/ack
      -- CP-element group 98: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2831_Update/$entry
      -- CP-element group 98: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2831_Update/req
      -- CP-element group 98: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2831_sample_completed_
      -- CP-element group 98: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2831_update_start_
      -- CP-element group 98: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2831_Sample/$exit
      -- 
    ack_1249_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 98_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_teu_2831_inst_ack_0, ack => ccu_daemon_CP_891_elements(98)); -- 
    req_1253_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1253_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(98), ack => WPIPE_ccu_to_teu_2831_inst_req_1); -- 
    -- CP-element group 99:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 99: predecessors 
    -- CP-element group 99: 	98 
    -- CP-element group 99: successors 
    -- CP-element group 99: 	109 
    -- CP-element group 99: marked-successors 
    -- CP-element group 99: 	97 
    -- CP-element group 99:  members (3) 
      -- CP-element group 99: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2831_Update/$exit
      -- CP-element group 99: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2831_Update/ack
      -- CP-element group 99: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2831_update_completed_
      -- 
    ack_1254_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 99_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_teu_2831_inst_ack_1, ack => ccu_daemon_CP_891_elements(99)); -- 
    -- CP-element group 100:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 100: predecessors 
    -- CP-element group 100: 	58 
    -- CP-element group 100: successors 
    -- CP-element group 100: 	97 
    -- CP-element group 100:  members (1) 
      -- CP-element group 100: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/synch_WPIPE_ccu_to_teu_2831_sample_start__call_stmt_2533_sample_completed_
      -- 
    -- Element group ccu_daemon_CP_891_elements(100) is a control-delay.
    cp_element_100_delay: control_delay_element  generic map(name => " 100_delay", delay_value => 1)  port map(req => ccu_daemon_CP_891_elements(58), ack => ccu_daemon_CP_891_elements(100), clk => clk, reset =>reset);
    -- CP-element group 101:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 101: predecessors 
    -- CP-element group 101: 	66 
    -- CP-element group 101: successors 
    -- CP-element group 101: 	97 
    -- CP-element group 101:  members (1) 
      -- CP-element group 101: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/synch_WPIPE_ccu_to_teu_2831_sample_start__call_stmt_2567_sample_completed_
      -- 
    -- Element group ccu_daemon_CP_891_elements(101) is a control-delay.
    cp_element_101_delay: control_delay_element  generic map(name => " 101_delay", delay_value => 1)  port map(req => ccu_daemon_CP_891_elements(66), ack => ccu_daemon_CP_891_elements(101), clk => clk, reset =>reset);
    -- CP-element group 102:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 102: predecessors 
    -- CP-element group 102: 	71 
    -- CP-element group 102: successors 
    -- CP-element group 102: 	97 
    -- CP-element group 102:  members (1) 
      -- CP-element group 102: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/synch_WPIPE_ccu_to_teu_2831_sample_start__call_stmt_2581_sample_completed_
      -- 
    -- Element group ccu_daemon_CP_891_elements(102) is a control-delay.
    cp_element_102_delay: control_delay_element  generic map(name => " 102_delay", delay_value => 1)  port map(req => ccu_daemon_CP_891_elements(71), ack => ccu_daemon_CP_891_elements(102), clk => clk, reset =>reset);
    -- CP-element group 103:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 103: predecessors 
    -- CP-element group 103: 	31 
    -- CP-element group 103: 	55 
    -- CP-element group 103: 	107 
    -- CP-element group 103: 	108 
    -- CP-element group 103: marked-predecessors 
    -- CP-element group 103: 	106 
    -- CP-element group 103: successors 
    -- CP-element group 103: 	105 
    -- CP-element group 103:  members (3) 
      -- CP-element group 103: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/RPIPE_teu_to_ccu_2850_Sample/$entry
      -- CP-element group 103: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/RPIPE_teu_to_ccu_2850_Sample/rr
      -- CP-element group 103: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/RPIPE_teu_to_ccu_2850_sample_start_
      -- 
    rr_1265_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1265_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(103), ack => RPIPE_teu_to_ccu_2850_inst_req_0); -- 
    ccu_daemon_cp_element_group_103: block -- 
      constant place_capacities: IntegerArray(0 to 4) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1);
      constant place_markings: IntegerArray(0 to 4)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 1);
      constant place_delays: IntegerArray(0 to 4) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0);
      constant joinName: string(1 to 31) := "ccu_daemon_cp_element_group_103"; 
      signal preds: BooleanArray(1 to 5); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(31) & ccu_daemon_CP_891_elements(55) & ccu_daemon_CP_891_elements(107) & ccu_daemon_CP_891_elements(108) & ccu_daemon_CP_891_elements(106);
      gj_ccu_daemon_cp_element_group_103 : generic_join generic map(name => joinName, number_of_predecessors => 5, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(103), clk => clk, reset => reset); --
    end block;
    -- CP-element group 104:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 104: predecessors 
    -- CP-element group 104: 	105 
    -- CP-element group 104: 	114 
    -- CP-element group 104: marked-predecessors 
    -- CP-element group 104: 	110 
    -- CP-element group 104: successors 
    -- CP-element group 104: 	106 
    -- CP-element group 104:  members (3) 
      -- CP-element group 104: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/RPIPE_teu_to_ccu_2850_Update/cr
      -- CP-element group 104: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/RPIPE_teu_to_ccu_2850_Update/$entry
      -- CP-element group 104: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/RPIPE_teu_to_ccu_2850_update_start_
      -- 
    cr_1270_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1270_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(104), ack => RPIPE_teu_to_ccu_2850_inst_req_1); -- 
    ccu_daemon_cp_element_group_104: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 31) := "ccu_daemon_cp_element_group_104"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(105) & ccu_daemon_CP_891_elements(114) & ccu_daemon_CP_891_elements(110);
      gj_ccu_daemon_cp_element_group_104 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(104), clk => clk, reset => reset); --
    end block;
    -- CP-element group 105:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 105: predecessors 
    -- CP-element group 105: 	103 
    -- CP-element group 105: successors 
    -- CP-element group 105: 	104 
    -- CP-element group 105: marked-successors 
    -- CP-element group 105: 	29 
    -- CP-element group 105: 	46 
    -- CP-element group 105: 	53 
    -- CP-element group 105: 	97 
    -- CP-element group 105:  members (3) 
      -- CP-element group 105: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/RPIPE_teu_to_ccu_2850_Sample/$exit
      -- CP-element group 105: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/RPIPE_teu_to_ccu_2850_Sample/ra
      -- CP-element group 105: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/RPIPE_teu_to_ccu_2850_sample_completed_
      -- 
    ra_1266_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 105_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_teu_to_ccu_2850_inst_ack_0, ack => ccu_daemon_CP_891_elements(105)); -- 
    -- CP-element group 106:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 106: predecessors 
    -- CP-element group 106: 	104 
    -- CP-element group 106: successors 
    -- CP-element group 106: 	109 
    -- CP-element group 106: marked-successors 
    -- CP-element group 106: 	28 
    -- CP-element group 106: 	103 
    -- CP-element group 106:  members (3) 
      -- CP-element group 106: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/RPIPE_teu_to_ccu_2850_update_completed_
      -- CP-element group 106: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/RPIPE_teu_to_ccu_2850_Update/$exit
      -- CP-element group 106: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/RPIPE_teu_to_ccu_2850_Update/ca
      -- 
    ca_1271_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 106_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_teu_to_ccu_2850_inst_ack_1, ack => ccu_daemon_CP_891_elements(106)); -- 
    -- CP-element group 107:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 107: predecessors 
    -- CP-element group 107: 	48 
    -- CP-element group 107: successors 
    -- CP-element group 107: 	103 
    -- CP-element group 107:  members (1) 
      -- CP-element group 107: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/synch_RPIPE_teu_to_ccu_2850_sample_start__call_stmt_2344_sample_completed_
      -- 
    -- Element group ccu_daemon_CP_891_elements(107) is a control-delay.
    cp_element_107_delay: control_delay_element  generic map(name => " 107_delay", delay_value => 1)  port map(req => ccu_daemon_CP_891_elements(48), ack => ccu_daemon_CP_891_elements(107), clk => clk, reset =>reset);
    -- CP-element group 108:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 108: predecessors 
    -- CP-element group 108: 	98 
    -- CP-element group 108: successors 
    -- CP-element group 108: 	103 
    -- CP-element group 108:  members (1) 
      -- CP-element group 108: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/synch_RPIPE_teu_to_ccu_2850_sample_start__WPIPE_ccu_to_teu_2831_sample_completed_
      -- 
    -- Element group ccu_daemon_CP_891_elements(108) is a control-delay.
    cp_element_108_delay: control_delay_element  generic map(name => " 108_delay", delay_value => 1)  port map(req => ccu_daemon_CP_891_elements(98), ack => ccu_daemon_CP_891_elements(108), clk => clk, reset =>reset);
    -- CP-element group 109:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 109: predecessors 
    -- CP-element group 109: 	31 
    -- CP-element group 109: 	55 
    -- CP-element group 109: 	99 
    -- CP-element group 109: 	106 
    -- CP-element group 109: marked-predecessors 
    -- CP-element group 109: 	111 
    -- CP-element group 109: successors 
    -- CP-element group 109: 	110 
    -- CP-element group 109:  members (3) 
      -- CP-element group 109: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2922_Sample/$entry
      -- CP-element group 109: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2922_sample_start_
      -- CP-element group 109: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2922_Sample/req
      -- 
    req_1281_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1281_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(109), ack => WPIPE_ccu_to_teu_2922_inst_req_0); -- 
    ccu_daemon_cp_element_group_109: block -- 
      constant place_capacities: IntegerArray(0 to 4) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1);
      constant place_markings: IntegerArray(0 to 4)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 1);
      constant place_delays: IntegerArray(0 to 4) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0);
      constant joinName: string(1 to 31) := "ccu_daemon_cp_element_group_109"; 
      signal preds: BooleanArray(1 to 5); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(31) & ccu_daemon_CP_891_elements(55) & ccu_daemon_CP_891_elements(99) & ccu_daemon_CP_891_elements(106) & ccu_daemon_CP_891_elements(111);
      gj_ccu_daemon_cp_element_group_109 : generic_join generic map(name => joinName, number_of_predecessors => 5, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(109), clk => clk, reset => reset); --
    end block;
    -- CP-element group 110:  fork  transition  input  output  bypass  pipeline-parent 
    -- CP-element group 110: predecessors 
    -- CP-element group 110: 	109 
    -- CP-element group 110: successors 
    -- CP-element group 110: 	111 
    -- CP-element group 110: marked-successors 
    -- CP-element group 110: 	29 
    -- CP-element group 110: 	53 
    -- CP-element group 110: 	104 
    -- CP-element group 110:  members (6) 
      -- CP-element group 110: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2922_Update/req
      -- CP-element group 110: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2922_Sample/ack
      -- CP-element group 110: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2922_Sample/$exit
      -- CP-element group 110: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2922_sample_completed_
      -- CP-element group 110: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2922_update_start_
      -- CP-element group 110: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2922_Update/$entry
      -- 
    ack_1282_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 110_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_teu_2922_inst_ack_0, ack => ccu_daemon_CP_891_elements(110)); -- 
    req_1286_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1286_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_daemon_CP_891_elements(110), ack => WPIPE_ccu_to_teu_2922_inst_req_1); -- 
    -- CP-element group 111:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 111: predecessors 
    -- CP-element group 111: 	110 
    -- CP-element group 111: successors 
    -- CP-element group 111: 	116 
    -- CP-element group 111: marked-successors 
    -- CP-element group 111: 	74 
    -- CP-element group 111: 	109 
    -- CP-element group 111:  members (3) 
      -- CP-element group 111: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2922_Update/ack
      -- CP-element group 111: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2922_Update/$exit
      -- CP-element group 111: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/WPIPE_ccu_to_teu_2922_update_completed_
      -- 
    ack_1287_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 111_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_teu_2922_inst_ack_1, ack => ccu_daemon_CP_891_elements(111)); -- 
    -- CP-element group 112:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 112: predecessors 
    -- CP-element group 112: 	30 
    -- CP-element group 112: successors 
    -- CP-element group 112: 	53 
    -- CP-element group 112:  members (1) 
      -- CP-element group 112: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_sample_completed__delay_to_call_stmt_2491_update_start__for_W_next_CIRCULANT_3159
      -- 
    -- Element group ccu_daemon_CP_891_elements(112) is a control-delay.
    cp_element_112_delay: control_delay_element  generic map(name => " 112_delay", delay_value => 1)  port map(req => ccu_daemon_CP_891_elements(30), ack => ccu_daemon_CP_891_elements(112), clk => clk, reset =>reset);
    -- CP-element group 113:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 113: predecessors 
    -- CP-element group 113: 	30 
    -- CP-element group 113: successors 
    -- CP-element group 113: 	78 
    -- CP-element group 113:  members (1) 
      -- CP-element group 113: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_sample_completed__delay_to_call_stmt_2753_update_start__for_W_next_CIRCULANT_3159
      -- 
    -- Element group ccu_daemon_CP_891_elements(113) is a control-delay.
    cp_element_113_delay: control_delay_element  generic map(name => " 113_delay", delay_value => 1)  port map(req => ccu_daemon_CP_891_elements(30), ack => ccu_daemon_CP_891_elements(113), clk => clk, reset =>reset);
    -- CP-element group 114:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 114: predecessors 
    -- CP-element group 114: 	30 
    -- CP-element group 114: successors 
    -- CP-element group 114: 	104 
    -- CP-element group 114:  members (1) 
      -- CP-element group 114: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/phi_stmt_2241_sample_completed__delay_to_RPIPE_teu_to_ccu_2850_update_start__for_W_next_CIRCULANT_3159
      -- 
    -- Element group ccu_daemon_CP_891_elements(114) is a control-delay.
    cp_element_114_delay: control_delay_element  generic map(name => " 114_delay", delay_value => 1)  port map(req => ccu_daemon_CP_891_elements(30), ack => ccu_daemon_CP_891_elements(114), clk => clk, reset =>reset);
    -- CP-element group 115:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 115: predecessors 
    -- CP-element group 115: 	24 
    -- CP-element group 115: successors 
    -- CP-element group 115: 	25 
    -- CP-element group 115:  members (1) 
      -- CP-element group 115: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/loop_body_delay_to_condition_start
      -- 
    -- Element group ccu_daemon_CP_891_elements(115) is a control-delay.
    cp_element_115_delay: control_delay_element  generic map(name => " 115_delay", delay_value => 1)  port map(req => ccu_daemon_CP_891_elements(24), ack => ccu_daemon_CP_891_elements(115), clk => clk, reset =>reset);
    -- CP-element group 116:  join  transition  bypass  pipeline-parent 
    -- CP-element group 116: predecessors 
    -- CP-element group 116: 	51 
    -- CP-element group 116: 	59 
    -- CP-element group 116: 	63 
    -- CP-element group 116: 	67 
    -- CP-element group 116: 	72 
    -- CP-element group 116: 	87 
    -- CP-element group 116: 	95 
    -- CP-element group 116: 	111 
    -- CP-element group 116: successors 
    -- CP-element group 116: 	21 
    -- CP-element group 116:  members (1) 
      -- CP-element group 116: 	 branch_block_stmt_2238/do_while_stmt_2239/do_while_stmt_2239_loop_body/$exit
      -- 
    ccu_daemon_cp_element_group_116: block -- 
      constant place_capacities: IntegerArray(0 to 7) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1);
      constant place_markings: IntegerArray(0 to 7)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0);
      constant place_delays: IntegerArray(0 to 7) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0);
      constant joinName: string(1 to 31) := "ccu_daemon_cp_element_group_116"; 
      signal preds: BooleanArray(1 to 8); -- 
    begin -- 
      preds <= ccu_daemon_CP_891_elements(51) & ccu_daemon_CP_891_elements(59) & ccu_daemon_CP_891_elements(63) & ccu_daemon_CP_891_elements(67) & ccu_daemon_CP_891_elements(72) & ccu_daemon_CP_891_elements(87) & ccu_daemon_CP_891_elements(95) & ccu_daemon_CP_891_elements(111);
      gj_ccu_daemon_cp_element_group_116 : generic_join generic map(name => joinName, number_of_predecessors => 8, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_daemon_CP_891_elements(116), clk => clk, reset => reset); --
    end block;
    -- CP-element group 117:  transition  input  bypass  pipeline-parent 
    -- CP-element group 117: predecessors 
    -- CP-element group 117: 	20 
    -- CP-element group 117: successors 
    -- CP-element group 117:  members (2) 
      -- CP-element group 117: 	 branch_block_stmt_2238/do_while_stmt_2239/loop_exit/$exit
      -- CP-element group 117: 	 branch_block_stmt_2238/do_while_stmt_2239/loop_exit/ack
      -- 
    ack_1295_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 117_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => do_while_stmt_2239_branch_ack_0, ack => ccu_daemon_CP_891_elements(117)); -- 
    -- CP-element group 118:  transition  input  bypass  pipeline-parent 
    -- CP-element group 118: predecessors 
    -- CP-element group 118: 	20 
    -- CP-element group 118: successors 
    -- CP-element group 118:  members (2) 
      -- CP-element group 118: 	 branch_block_stmt_2238/do_while_stmt_2239/loop_taken/$exit
      -- CP-element group 118: 	 branch_block_stmt_2238/do_while_stmt_2239/loop_taken/ack
      -- 
    ack_1299_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 118_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => do_while_stmt_2239_branch_ack_1, ack => ccu_daemon_CP_891_elements(118)); -- 
    -- CP-element group 119:  transition  bypass  pipeline-parent 
    -- CP-element group 119: predecessors 
    -- CP-element group 119: 	18 
    -- CP-element group 119: successors 
    -- CP-element group 119: 	16 
    -- CP-element group 119:  members (1) 
      -- CP-element group 119: 	 branch_block_stmt_2238/do_while_stmt_2239/$exit
      -- 
    ccu_daemon_CP_891_elements(119) <= ccu_daemon_CP_891_elements(18);
    ccu_daemon_do_while_stmt_2239_terminator_1300: loop_terminator -- 
      generic map (name => " ccu_daemon_do_while_stmt_2239_terminator_1300", max_iterations_in_flight =>1) 
      port map(loop_body_exit => ccu_daemon_CP_891_elements(21),loop_continue => ccu_daemon_CP_891_elements(118),loop_terminate => ccu_daemon_CP_891_elements(117),loop_back => ccu_daemon_CP_891_elements(19),loop_exit => ccu_daemon_CP_891_elements(18),clk => clk, reset => reset); -- 
    phi_stmt_2241_phi_seq_1054_block : block -- 
      signal triggers, src_sample_reqs, src_sample_acks, src_update_reqs, src_update_acks : BooleanArray(0 to 1);
      signal phi_mux_reqs : BooleanArray(0 to 1); -- 
    begin -- 
      triggers(0)  <= ccu_daemon_CP_891_elements(34);
      ccu_daemon_CP_891_elements(37)<= src_sample_reqs(0);
      src_sample_acks(0)  <= ccu_daemon_CP_891_elements(37);
      ccu_daemon_CP_891_elements(38)<= src_update_reqs(0);
      src_update_acks(0)  <= ccu_daemon_CP_891_elements(39);
      ccu_daemon_CP_891_elements(35) <= phi_mux_reqs(0);
      triggers(1)  <= ccu_daemon_CP_891_elements(32);
      ccu_daemon_CP_891_elements(41)<= src_sample_reqs(1);
      src_sample_acks(1)  <= ccu_daemon_CP_891_elements(43);
      ccu_daemon_CP_891_elements(42)<= src_update_reqs(1);
      src_update_acks(1)  <= ccu_daemon_CP_891_elements(44);
      ccu_daemon_CP_891_elements(33) <= phi_mux_reqs(1);
      phi_stmt_2241_phi_seq_1054 : phi_sequencer_v2-- 
        generic map (place_capacity => 1, ntriggers => 2, name => "phi_stmt_2241_phi_seq_1054") 
        port map ( -- 
          triggers => triggers, src_sample_starts => src_sample_reqs, 
          src_sample_completes => src_sample_acks, src_update_starts => src_update_reqs, 
          src_update_completes => src_update_acks,
          phi_mux_select_reqs => phi_mux_reqs, 
          phi_sample_req => ccu_daemon_CP_891_elements(26), 
          phi_sample_ack => ccu_daemon_CP_891_elements(30), 
          phi_update_req => ccu_daemon_CP_891_elements(29), 
          phi_update_ack => ccu_daemon_CP_891_elements(31), 
          phi_mux_ack => ccu_daemon_CP_891_elements(36), 
          clk => clk, reset => reset -- 
        );
        -- 
    end block;
    entry_tmerge_1005_block : block -- 
      signal preds : BooleanArray(0 to 1);
      begin -- 
        preds(0)  <= ccu_daemon_CP_891_elements(22);
        preds(1)  <= ccu_daemon_CP_891_elements(23);
        entry_tmerge_1005 : transition_merge -- 
          generic map(name => " entry_tmerge_1005")
          port map (preds => preds, symbol_out => ccu_daemon_CP_891_elements(24));
          -- 
    end block;
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal ADD_u4_u4_3005_wire : std_logic_vector(3 downto 0);
    signal AND_u1_u1_2340_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_2384_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_2656_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_2977_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_2985_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_2993_wire : std_logic_vector(0 downto 0);
    signal ANNUL_2261 : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_2466_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_2713_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_2760_wire : std_logic_vector(0 downto 0);
    signal CIRCULANT_2241 : std_logic_vector(196 downto 0);
    signal CONCAT_u11_u75_3151_wire : std_logic_vector(74 downto 0);
    signal CONCAT_u171_u179_3174_wire : std_logic_vector(178 downto 0);
    signal CONCAT_u1_u2_2826_wire_constant : std_logic_vector(1 downto 0);
    signal CONCAT_u1_u2_3167_wire : std_logic_vector(1 downto 0);
    signal CONCAT_u1_u33_2815_wire : std_logic_vector(32 downto 0);
    signal CONCAT_u1_u3_2765_wire : std_logic_vector(2 downto 0);
    signal CONCAT_u1_u4_2523_wire_constant : std_logic_vector(3 downto 0);
    signal CONCAT_u1_u4_2540_wire_constant : std_logic_vector(3 downto 0);
    signal CONCAT_u1_u4_2557_wire_constant : std_logic_vector(3 downto 0);
    signal CONCAT_u1_u4_2571_wire_constant : std_logic_vector(3 downto 0);
    signal CONCAT_u1_u9_3171_wire : std_logic_vector(8 downto 0);
    signal CONCAT_u32_u33_2821_wire : std_logic_vector(32 downto 0);
    signal CONCAT_u32_u64_3150_wire : std_logic_vector(63 downto 0);
    signal CONCAT_u32_u64_3154_wire : std_logic_vector(63 downto 0);
    signal CONCAT_u33_u34_2823_wire : std_logic_vector(33 downto 0);
    signal CONCAT_u33_u65_2817_wire : std_logic_vector(64 downto 0);
    signal CONCAT_u34_u36_2827_wire : std_logic_vector(35 downto 0);
    signal CONCAT_u4_u11_3147_wire : std_logic_vector(10 downto 0);
    signal CONCAT_u4_u5_2761_wire : std_logic_vector(4 downto 0);
    signal CONCAT_u4_u5_2810_wire : std_logic_vector(4 downto 0);
    signal CONCAT_u4_u5_3162_wire : std_logic_vector(4 downto 0);
    signal CONCAT_u5_u37_2527_wire : std_logic_vector(36 downto 0);
    signal CONCAT_u5_u37_2544_wire : std_logic_vector(36 downto 0);
    signal CONCAT_u5_u37_2561_wire : std_logic_vector(36 downto 0);
    signal CONCAT_u5_u37_2575_wire : std_logic_vector(36 downto 0);
    signal CONCAT_u5_u6_2812_wire : std_logic_vector(5 downto 0);
    signal CONCAT_u5_u7_3164_wire : std_logic_vector(6 downto 0);
    signal CONCAT_u64_u96_3156_wire : std_logic_vector(95 downto 0);
    signal CONCAT_u6_u71_2818_wire : std_logic_vector(70 downto 0);
    signal CONCAT_u7_u9_3168_wire : std_logic_vector(8 downto 0);
    signal CONCAT_u9_u188_3175_wire : std_logic_vector(187 downto 0);
    signal DBG_INIT_2269 : std_logic_vector(0 downto 0);
    signal DBG_STATUS_2273 : std_logic_vector(7 downto 0);
    signal EQ_u2_u1_2659_wire : std_logic_vector(0 downto 0);
    signal EQ_u2_u1_2705_wire : std_logic_vector(0 downto 0);
    signal EQ_u4_u1_3001_wire : std_logic_vector(0 downto 0);
    signal ET_2480 : std_logic_vector(0 downto 0);
    signal ILVL_2445 : std_logic_vector(3 downto 0);
    signal INTERRUPT_FLAG_2265 : std_logic_vector(0 downto 0);
    signal MUX_2356_wire : std_logic_vector(1 downto 0);
    signal MUX_2358_wire : std_logic_vector(1 downto 0);
    signal MUX_2363_wire : std_logic_vector(1 downto 0);
    signal MUX_2365_wire : std_logic_vector(1 downto 0);
    signal MUX_2371_wire : std_logic_vector(1 downto 0);
    signal MUX_2373_wire : std_logic_vector(1 downto 0);
    signal MUX_3054_wire : std_logic_vector(1 downto 0);
    signal MUX_3055_wire : std_logic_vector(1 downto 0);
    signal MUX_3066_wire : std_logic_vector(31 downto 0);
    signal MUX_3067_wire : std_logic_vector(31 downto 0);
    signal MUX_3078_wire : std_logic_vector(31 downto 0);
    signal MUX_3079_wire : std_logic_vector(31 downto 0);
    signal MUX_3090_wire : std_logic_vector(31 downto 0);
    signal MUX_3091_wire : std_logic_vector(31 downto 0);
    signal MUX_3102_wire : std_logic_vector(31 downto 0);
    signal MUX_3103_wire : std_logic_vector(31 downto 0);
    signal MUX_3114_wire : std_logic_vector(3 downto 0);
    signal MUX_3115_wire : std_logic_vector(3 downto 0);
    signal MUX_3128_wire : std_logic_vector(31 downto 0);
    signal MUX_3129_wire : std_logic_vector(31 downto 0);
    signal NEQ_u2_u1_2517_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_2339_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_2382_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_2473_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_2653_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_2655_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_2688_wire : std_logic_vector(0 downto 0);
    signal NPC_2421 : std_logic_vector(31 downto 0);
    signal OR_u2_u2_2366_wire : std_logic_vector(1 downto 0);
    signal OR_u32_u32_3124_wire_constant : std_logic_vector(31 downto 0);
    signal PC_2415 : std_logic_vector(31 downto 0);
    signal PMODE_2257 : std_logic_vector(1 downto 0);
    signal PSR_2427 : std_logic_vector(31 downto 0);
    signal RPIPE_DBG_TO_CCU_INIT_NPC_SIG_2395_wire : std_logic_vector(31 downto 0);
    signal RPIPE_DBG_TO_CCU_INIT_NPC_SIG_3074_wire : std_logic_vector(31 downto 0);
    signal RPIPE_DBG_TO_CCU_INIT_PC_SIG_2394_wire : std_logic_vector(31 downto 0);
    signal RPIPE_DBG_TO_CCU_INIT_PC_SIG_3062_wire : std_logic_vector(31 downto 0);
    signal RPIPE_DBG_TO_CCU_INIT_PSR_SIG_2396_wire : std_logic_vector(31 downto 0);
    signal RPIPE_DBG_TO_CCU_INIT_PSR_SIG_3086_wire : std_logic_vector(31 downto 0);
    signal RPIPE_ccu_to_ccu_reset_3173_wire : std_logic_vector(7 downto 0);
    signal R_PROCESSOR_ERROR_MODE_2317_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_ERROR_MODE_2362_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_ERROR_MODE_2391_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_ERROR_MODE_2516_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_ERROR_MODE_2704_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_ERROR_MODE_2994_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_ERROR_MODE_3048_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_EXECUTE_MODE_2322_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_EXECUTE_MODE_2355_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_EXECUTE_MODE_2370_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_EXECUTE_MODE_2658_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_EXECUTE_MODE_2995_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_RESET_MODE_2312_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_RESET_MODE_2354_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_RESET_MODE_2361_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_RESET_MODE_2369_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_RESET_MODE_3050_wire_constant : std_logic_vector(1 downto 0);
    signal R_ZERO_1_2682_wire_constant : std_logic_vector(0 downto 0);
    signal R_ZERO_1_2762_wire_constant : std_logic_vector(0 downto 0);
    signal R_ZERO_1_3043_wire_constant : std_logic_vector(0 downto 0);
    signal R_ZERO_1_3161_wire_constant : std_logic_vector(0 downto 0);
    signal TBR_2433 : std_logic_vector(31 downto 0);
    signal THREAD_COUNTER_2249 : std_logic_vector(3 downto 0);
    signal TICC_TRAP_TYPE_2451 : std_logic_vector(6 downto 0);
    signal TV_2439 : std_logic_vector(31 downto 0);
    signal annul_to_dbg_2725 : std_logic_vector(0 downto 0);
    signal ccu_in_single_step_mode_2378 : std_logic_vector(0 downto 0);
    signal dbg_status_to_dbg_2731 : std_logic_vector(7 downto 0);
    signal debug_active_2701 : std_logic_vector(0 downto 0);
    signal debug_break_on_traps_2331 : std_logic_vector(0 downto 0);
    signal debug_mode_selected_2331 : std_logic_vector(0 downto 0);
    signal et_L1_2512 : std_logic_vector(31 downto 0);
    signal et_L2_2512 : std_logic_vector(31 downto 0);
    signal et_NPC_2512 : std_logic_vector(31 downto 0);
    signal et_PC_2512 : std_logic_vector(31 downto 0);
    signal et_PMODE_2512 : std_logic_vector(1 downto 0);
    signal et_PSR_2512 : std_logic_vector(31 downto 0);
    signal et_TBR_2512 : std_logic_vector(31 downto 0);
    signal et_TV_2512 : std_logic_vector(31 downto 0);
    signal exec_trap_flag_2475 : std_logic_vector(0 downto 0);
    signal first_connect_to_debugger_2696 : std_logic_vector(0 downto 0);
    signal first_connect_to_gdb_flag_2736 : std_logic_vector(0 downto 0);
    signal from_entry_2253 : std_logic_vector(0 downto 0);
    signal go_to_reset_mode_2334 : std_logic_vector(0 downto 0);
    signal hard_reset_asserted_2331 : std_logic_vector(0 downto 0);
    signal in_error_mode_2319 : std_logic_vector(0 downto 0);
    signal in_exec_mode_2324 : std_logic_vector(0 downto 0);
    signal in_reset_mode_2314 : std_logic_vector(0 downto 0);
    signal init_ILVL_2406 : std_logic_vector(3 downto 0);
    signal init_NPC_2406 : std_logic_vector(31 downto 0);
    signal init_PC_2406 : std_logic_vector(31 downto 0);
    signal init_PMODE_2406 : std_logic_vector(1 downto 0);
    signal init_PSR_2406 : std_logic_vector(31 downto 0);
    signal init_TBR_2406 : std_logic_vector(31 downto 0);
    signal init_TICC_TRAP_TYPE_2406 : std_logic_vector(6 downto 0);
    signal init_TV_2406 : std_logic_vector(31 downto 0);
    signal init_WIM_2406 : std_logic_vector(31 downto 0);
    signal init_circulant_2237 : std_logic_vector(196 downto 0);
    signal init_flag_2386 : std_logic_vector(0 downto 0);
    signal intr_to_dbg_2720 : std_logic_vector(0 downto 0);
    signal konst_2357_wire_constant : std_logic_vector(1 downto 0);
    signal konst_2364_wire_constant : std_logic_vector(1 downto 0);
    signal konst_2372_wire_constant : std_logic_vector(1 downto 0);
    signal konst_2465_wire_constant : std_logic_vector(31 downto 0);
    signal konst_2478_wire_constant : std_logic_vector(31 downto 0);
    signal konst_2624_wire_constant : std_logic_vector(0 downto 0);
    signal konst_2630_wire_constant : std_logic_vector(3 downto 0);
    signal konst_2636_wire_constant : std_logic_vector(6 downto 0);
    signal konst_2712_wire_constant : std_logic_vector(31 downto 0);
    signal konst_2729_wire_constant : std_logic_vector(7 downto 0);
    signal konst_2759_wire_constant : std_logic_vector(31 downto 0);
    signal konst_3000_wire_constant : std_logic_vector(3 downto 0);
    signal konst_3002_wire_constant : std_logic_vector(3 downto 0);
    signal konst_3004_wire_constant : std_logic_vector(3 downto 0);
    signal konst_3032_wire_constant : std_logic_vector(7 downto 0);
    signal konst_3098_wire_constant : std_logic_vector(31 downto 0);
    signal konst_3108_wire_constant : std_logic_vector(3 downto 0);
    signal konst_3110_wire_constant : std_logic_vector(3 downto 0);
    signal konst_3113_wire_constant : std_logic_vector(3 downto 0);
    signal konst_3127_wire_constant : std_logic_vector(31 downto 0);
    signal konst_3135_wire_constant : std_logic_vector(3 downto 0);
    signal konst_3141_wire_constant : std_logic_vector(6 downto 0);
    signal konst_3189_wire_constant : std_logic_vector(0 downto 0);
    signal logging_trace_selected_2331 : std_logic_vector(0 downto 0);
    signal loopback_ILVL_2285 : std_logic_vector(3 downto 0);
    signal loopback_NPC_2297 : std_logic_vector(31 downto 0);
    signal loopback_PC_2293 : std_logic_vector(31 downto 0);
    signal loopback_PSR_2301 : std_logic_vector(31 downto 0);
    signal loopback_STATE_2277 : std_logic_vector(170 downto 0);
    signal loopback_TBR_2305 : std_logic_vector(31 downto 0);
    signal loopback_TICC_TRAP_TYPE_2289 : std_logic_vector(6 downto 0);
    signal loopback_TV_2309 : std_logic_vector(31 downto 0);
    signal machine_state_from_teu_2851 : std_logic_vector(225 downto 0);
    signal mc_error_2708 : std_logic_vector(0 downto 0);
    signal next_ANNUL_3045 : std_logic_vector(0 downto 0);
    signal next_CIRCULANT_3177 : std_logic_vector(196 downto 0);
    signal next_CIRCULANT_3177_2244_buffered : std_logic_vector(196 downto 0);
    signal next_DBG_INIT_2685 : std_logic_vector(0 downto 0);
    signal next_DBG_STATUS_3034 : std_logic_vector(7 downto 0);
    signal next_ILVL_3137 : std_logic_vector(3 downto 0);
    signal next_INTERRUPT_FLAG_3039 : std_logic_vector(0 downto 0);
    signal next_NPC_3081 : std_logic_vector(31 downto 0);
    signal next_PC_3069 : std_logic_vector(31 downto 0);
    signal next_PMODE_3057 : std_logic_vector(1 downto 0);
    signal next_PSR_3093 : std_logic_vector(31 downto 0);
    signal next_TBR_3105 : std_logic_vector(31 downto 0);
    signal next_THREAD_COUNTER_3117 : std_logic_vector(3 downto 0);
    signal next_TICC_TRAP_TYPE_3143 : std_logic_vector(6 downto 0);
    signal next_TV_3131 : std_logic_vector(31 downto 0);
    signal next_loopback_STATE_3158 : std_logic_vector(170 downto 0);
    signal pmode_before_exec_trap_2375 : std_logic_vector(1 downto 0);
    signal post_adv_ANNUL_INSTR_3023 : std_logic_vector(0 downto 0);
    signal post_adv_NPC_3023 : std_logic_vector(31 downto 0);
    signal post_adv_PC_3023 : std_logic_vector(31 downto 0);
    signal post_et_ANNUL_2627 : std_logic_vector(0 downto 0);
    signal post_et_ILVL_2633 : std_logic_vector(3 downto 0);
    signal post_et_NPC_2621 : std_logic_vector(31 downto 0);
    signal post_et_PC_2615 : std_logic_vector(31 downto 0);
    signal post_et_PMODE_2591 : std_logic_vector(1 downto 0);
    signal post_et_PSR_2597 : std_logic_vector(31 downto 0);
    signal post_et_TBR_2603 : std_logic_vector(31 downto 0);
    signal post_et_TICC_TRAP_TYPE_2639 : std_logic_vector(6 downto 0);
    signal post_et_TV_2609 : std_logic_vector(31 downto 0);
    signal post_et_dbg_ANNUL_2753 : std_logic_vector(0 downto 0);
    signal post_et_dbg_DBG_IGNORE_BP_2753 : std_logic_vector(0 downto 0);
    signal post_et_dbg_NPC_2753 : std_logic_vector(31 downto 0);
    signal post_et_dbg_PC_2753 : std_logic_vector(31 downto 0);
    signal post_et_dbg_PSR_2753 : std_logic_vector(31 downto 0);
    signal post_run_DBG_STATUS_2871 : std_logic_vector(7 downto 0);
    signal post_run_ILVL_2867 : std_logic_vector(3 downto 0);
    signal post_run_NNPC_2903 : std_logic_vector(31 downto 0);
    signal post_run_NPC_2899 : std_logic_vector(31 downto 0);
    signal post_run_PC_2895 : std_logic_vector(31 downto 0);
    signal post_run_PMODE_2997 : std_logic_vector(1 downto 0);
    signal post_run_PSR_2981 : std_logic_vector(31 downto 0);
    signal post_run_RETURN_STATUS_2875 : std_logic_vector(7 downto 0);
    signal post_run_TBR_2989 : std_logic_vector(31 downto 0);
    signal post_run_THREAD_COUNTER_3007 : std_logic_vector(3 downto 0);
    signal post_run_TICC_TRAP_TYPE_2863 : std_logic_vector(6 downto 0);
    signal post_run_TV_2907 : std_logic_vector(31 downto 0);
    signal post_run_annul_instr_2928 : std_logic_vector(0 downto 0);
    signal post_run_exception_found_2940 : std_logic_vector(0 downto 0);
    signal post_run_interrupt_found_2944 : std_logic_vector(0 downto 0);
    signal post_run_machine_error_2948 : std_logic_vector(0 downto 0);
    signal post_run_modified_PSR_2887 : std_logic_vector(31 downto 0);
    signal post_run_modified_TBR_2891 : std_logic_vector(31 downto 0);
    signal post_run_next_annul_2932 : std_logic_vector(0 downto 0);
    signal post_run_psr_modified_2879 : std_logic_vector(0 downto 0);
    signal post_run_single_step_return_2936 : std_logic_vector(0 downto 0);
    signal post_run_tbr_modified_2883 : std_logic_vector(0 downto 0);
    signal post_teu_run_thread_2912 : std_logic_vector(0 downto 0);
    signal processor_in_error_2393 : std_logic_vector(0 downto 0);
    signal query_debugger_flag_2691 : std_logic_vector(0 downto 0);
    signal reset_1_to_teu_2675 : std_logic_vector(106 downto 0);
    signal reset_2_to_teu_2920 : std_logic_vector(106 downto 0);
    signal reset_from_replicator_2281 : std_logic_vector(7 downto 0);
    signal reset_mem_subsystem_2342 : std_logic_vector(0 downto 0);
    signal run_ANNUL_2780 : std_logic_vector(0 downto 0);
    signal run_DBG_IGNORE_BP_2806 : std_logic_vector(0 downto 0);
    signal run_NPC_2792 : std_logic_vector(31 downto 0);
    signal run_PC_2786 : std_logic_vector(31 downto 0);
    signal run_PSR_2798 : std_logic_vector(31 downto 0);
    signal run_TBR_2801 : std_logic_vector(31 downto 0);
    signal run_thread_2661 : std_logic_vector(0 downto 0);
    signal send_reset_to_teu_2666 : std_logic_vector(0 downto 0);
    signal single_step_mode_selected_2331 : std_logic_vector(0 downto 0);
    signal slice_2764_wire : std_logic_vector(1 downto 0);
    signal st_PMODE_2491 : std_logic_vector(1 downto 0);
    signal st_TBR_2491 : std_logic_vector(31 downto 0);
    signal st_TV_2491 : std_logic_vector(31 downto 0);
    signal start_ccu_2203 : std_logic_vector(0 downto 0);
    signal teu_machine_state_valid_2855 : std_logic_vector(0 downto 0);
    signal teu_thread_id_2859 : std_logic_vector(3 downto 0);
    signal there_is_an_exception_2469 : std_logic_vector(0 downto 0);
    signal thread_info_to_teu_2829 : std_logic_vector(106 downto 0);
    signal to_pmode_2767 : std_logic_vector(7 downto 0);
    signal trace_on_flag_2206 : std_logic_vector(0 downto 0);
    signal trace_to_teu_2838 : std_logic_vector(0 downto 0);
    signal tv_0_2715 : std_logic_vector(0 downto 0);
    signal type_cast_2194_wire_constant : std_logic_vector(7 downto 0);
    signal type_cast_2198_wire_constant : std_logic_vector(3 downto 0);
    signal type_cast_2209_wire_constant : std_logic_vector(7 downto 0);
    signal type_cast_2213_wire_constant : std_logic_vector(3 downto 0);
    signal type_cast_2525_wire_constant : std_logic_vector(4 downto 0);
    signal type_cast_2542_wire_constant : std_logic_vector(4 downto 0);
    signal type_cast_2559_wire_constant : std_logic_vector(4 downto 0);
    signal type_cast_2573_wire_constant : std_logic_vector(4 downto 0);
    signal type_cast_2773_wire : std_logic_vector(3 downto 0);
    signal w_psr_stat_2550 : std_logic_vector(31 downto 0);
    signal wr_l1_stat_2567 : std_logic_vector(31 downto 0);
    signal wr_l2_stat_2581 : std_logic_vector(31 downto 0);
    signal wr_tbr_stat_2533 : std_logic_vector(31 downto 0);
    signal write_et_regs_to_teu_2519 : std_logic_vector(0 downto 0);
    signal write_l1_command_2563 : std_logic_vector(40 downto 0);
    signal write_l2_command_2577 : std_logic_vector(40 downto 0);
    signal write_psr_command_2546 : std_logic_vector(40 downto 0);
    signal write_tbr_command_2529 : std_logic_vector(40 downto 0);
    -- 
  begin -- 
    CONCAT_u1_u2_2826_wire_constant <= "01";
    CONCAT_u1_u4_2523_wire_constant <= "1010";
    CONCAT_u1_u4_2540_wire_constant <= "1001";
    CONCAT_u1_u4_2557_wire_constant <= "1110";
    CONCAT_u1_u4_2571_wire_constant <= "1110";
    OR_u32_u32_3124_wire_constant <= "00000000000000000000000000000011";
    R_PROCESSOR_ERROR_MODE_2317_wire_constant <= "11";
    R_PROCESSOR_ERROR_MODE_2362_wire_constant <= "11";
    R_PROCESSOR_ERROR_MODE_2391_wire_constant <= "11";
    R_PROCESSOR_ERROR_MODE_2516_wire_constant <= "11";
    R_PROCESSOR_ERROR_MODE_2704_wire_constant <= "11";
    R_PROCESSOR_ERROR_MODE_2994_wire_constant <= "11";
    R_PROCESSOR_ERROR_MODE_3048_wire_constant <= "11";
    R_PROCESSOR_EXECUTE_MODE_2322_wire_constant <= "10";
    R_PROCESSOR_EXECUTE_MODE_2355_wire_constant <= "10";
    R_PROCESSOR_EXECUTE_MODE_2370_wire_constant <= "10";
    R_PROCESSOR_EXECUTE_MODE_2658_wire_constant <= "10";
    R_PROCESSOR_EXECUTE_MODE_2995_wire_constant <= "10";
    R_PROCESSOR_RESET_MODE_2312_wire_constant <= "01";
    R_PROCESSOR_RESET_MODE_2354_wire_constant <= "01";
    R_PROCESSOR_RESET_MODE_2361_wire_constant <= "01";
    R_PROCESSOR_RESET_MODE_2369_wire_constant <= "01";
    R_PROCESSOR_RESET_MODE_3050_wire_constant <= "01";
    R_ZERO_1_2682_wire_constant <= "0";
    R_ZERO_1_2762_wire_constant <= "0";
    R_ZERO_1_3043_wire_constant <= "0";
    R_ZERO_1_3161_wire_constant <= "0";
    init_circulant_2237 <= "00011010010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    konst_2357_wire_constant <= "00";
    konst_2364_wire_constant <= "00";
    konst_2372_wire_constant <= "00";
    konst_2465_wire_constant <= "00000000000000000000000000000000";
    konst_2478_wire_constant <= "00000000000000000000000000000101";
    konst_2624_wire_constant <= "0";
    konst_2630_wire_constant <= "0000";
    konst_2636_wire_constant <= "0000000";
    konst_2712_wire_constant <= "00000000000000000000000000000000";
    konst_2729_wire_constant <= "00000000";
    konst_2759_wire_constant <= "00000000000000000000000000000000";
    konst_3000_wire_constant <= "1111";
    konst_3002_wire_constant <= "0001";
    konst_3004_wire_constant <= "0001";
    konst_3032_wire_constant <= "00000000";
    konst_3098_wire_constant <= "00000000000000000000000000000000";
    konst_3108_wire_constant <= "0000";
    konst_3110_wire_constant <= "0001";
    konst_3113_wire_constant <= "0000";
    konst_3127_wire_constant <= "00000000000000000000000000000000";
    konst_3135_wire_constant <= "0000";
    konst_3141_wire_constant <= "0000000";
    konst_3189_wire_constant <= "1";
    reset_1_to_teu_2675 <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011";
    reset_2_to_teu_2920 <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011";
    trace_on_flag_2206 <= "1";
    type_cast_2194_wire_constant <= "00000000";
    type_cast_2198_wire_constant <= "0000";
    type_cast_2209_wire_constant <= "00000001";
    type_cast_2213_wire_constant <= "0001";
    type_cast_2525_wire_constant <= "00000";
    type_cast_2542_wire_constant <= "00000";
    type_cast_2559_wire_constant <= "10001";
    type_cast_2573_wire_constant <= "10010";
    phi_stmt_2241: Block -- phi operator 
      signal idata: std_logic_vector(393 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= init_circulant_2237 & next_CIRCULANT_3177_2244_buffered;
      req <= phi_stmt_2241_req_0 & phi_stmt_2241_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_2241",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 197) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_2241_ack_0,
          idata => idata,
          odata => CIRCULANT_2241,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_2241
    -- flow-through select operator MUX_2356_inst
    MUX_2356_wire <= R_PROCESSOR_RESET_MODE_2354_wire_constant when (go_to_reset_mode_2334(0) /=  '0') else R_PROCESSOR_EXECUTE_MODE_2355_wire_constant;
    -- flow-through select operator MUX_2358_inst
    MUX_2358_wire <= MUX_2356_wire when (in_reset_mode_2314(0) /=  '0') else konst_2357_wire_constant;
    -- flow-through select operator MUX_2363_inst
    MUX_2363_wire <= R_PROCESSOR_RESET_MODE_2361_wire_constant when (go_to_reset_mode_2334(0) /=  '0') else R_PROCESSOR_ERROR_MODE_2362_wire_constant;
    -- flow-through select operator MUX_2365_inst
    MUX_2365_wire <= MUX_2363_wire when (in_error_mode_2319(0) /=  '0') else konst_2364_wire_constant;
    -- flow-through select operator MUX_2371_inst
    MUX_2371_wire <= R_PROCESSOR_RESET_MODE_2369_wire_constant when (go_to_reset_mode_2334(0) /=  '0') else R_PROCESSOR_EXECUTE_MODE_2370_wire_constant;
    -- flow-through select operator MUX_2373_inst
    MUX_2373_wire <= MUX_2371_wire when (in_exec_mode_2324(0) /=  '0') else konst_2372_wire_constant;
    -- flow-through select operator MUX_2414_inst
    PC_2415 <= init_PC_2406 when (init_flag_2386(0) /=  '0') else loopback_PC_2293;
    -- flow-through select operator MUX_2420_inst
    NPC_2421 <= init_NPC_2406 when (init_flag_2386(0) /=  '0') else loopback_NPC_2297;
    -- flow-through select operator MUX_2426_inst
    PSR_2427 <= init_PSR_2406 when (init_flag_2386(0) /=  '0') else loopback_PSR_2301;
    -- flow-through select operator MUX_2432_inst
    TBR_2433 <= init_TBR_2406 when (init_flag_2386(0) /=  '0') else loopback_TBR_2305;
    -- flow-through select operator MUX_2438_inst
    TV_2439 <= init_TV_2406 when (init_flag_2386(0) /=  '0') else loopback_TV_2309;
    -- flow-through select operator MUX_2444_inst
    ILVL_2445 <= init_ILVL_2406 when (init_flag_2386(0) /=  '0') else loopback_ILVL_2285;
    -- flow-through select operator MUX_2450_inst
    TICC_TRAP_TYPE_2451 <= init_TICC_TRAP_TYPE_2406 when (init_flag_2386(0) /=  '0') else loopback_TICC_TRAP_TYPE_2289;
    -- flow-through select operator MUX_2590_inst
    post_et_PMODE_2591 <= et_PMODE_2512 when (exec_trap_flag_2475(0) /=  '0') else pmode_before_exec_trap_2375;
    -- flow-through select operator MUX_2596_inst
    post_et_PSR_2597 <= et_PSR_2512 when (exec_trap_flag_2475(0) /=  '0') else PSR_2427;
    -- flow-through select operator MUX_2602_inst
    post_et_TBR_2603 <= et_TBR_2512 when (exec_trap_flag_2475(0) /=  '0') else TBR_2433;
    -- flow-through select operator MUX_2608_inst
    post_et_TV_2609 <= et_TV_2512 when (exec_trap_flag_2475(0) /=  '0') else TV_2439;
    -- flow-through select operator MUX_2614_inst
    post_et_PC_2615 <= et_PC_2512 when (exec_trap_flag_2475(0) /=  '0') else PC_2415;
    -- flow-through select operator MUX_2620_inst
    post_et_NPC_2621 <= et_NPC_2512 when (exec_trap_flag_2475(0) /=  '0') else NPC_2421;
    -- flow-through select operator MUX_2626_inst
    post_et_ANNUL_2627 <= konst_2624_wire_constant when (exec_trap_flag_2475(0) /=  '0') else ANNUL_2261;
    -- flow-through select operator MUX_2632_inst
    post_et_ILVL_2633 <= konst_2630_wire_constant when (exec_trap_flag_2475(0) /=  '0') else ILVL_2445;
    -- flow-through select operator MUX_2638_inst
    post_et_TICC_TRAP_TYPE_2639 <= konst_2636_wire_constant when (exec_trap_flag_2475(0) /=  '0') else TICC_TRAP_TYPE_2451;
    -- flow-through select operator MUX_2684_inst
    next_DBG_INIT_2685 <= R_ZERO_1_2682_wire_constant when (run_thread_2661(0) /=  '0') else DBG_INIT_2269;
    -- flow-through select operator MUX_2730_inst
    dbg_status_to_dbg_2731 <= DBG_STATUS_2273 when (query_debugger_flag_2691(0) /=  '0') else konst_2729_wire_constant;
    -- flow-through select operator MUX_2779_inst
    run_ANNUL_2780 <= post_et_dbg_ANNUL_2753 when (debug_active_2701(0) /=  '0') else post_et_ANNUL_2627;
    -- flow-through select operator MUX_2785_inst
    run_PC_2786 <= post_et_dbg_PC_2753 when (debug_active_2701(0) /=  '0') else post_et_PC_2615;
    -- flow-through select operator MUX_2791_inst
    run_NPC_2792 <= post_et_dbg_NPC_2753 when (debug_active_2701(0) /=  '0') else post_et_NPC_2621;
    -- flow-through select operator MUX_2797_inst
    run_PSR_2798 <= post_et_dbg_PSR_2753 when (debug_active_2701(0) /=  '0') else post_et_PSR_2597;
    -- flow-through select operator MUX_2980_inst
    post_run_PSR_2981 <= post_run_modified_PSR_2887 when (AND_u1_u1_2977_wire(0) /=  '0') else run_PSR_2798;
    -- flow-through select operator MUX_2988_inst
    post_run_TBR_2989 <= post_run_modified_TBR_2891 when (AND_u1_u1_2985_wire(0) /=  '0') else run_TBR_2801;
    -- flow-through select operator MUX_2996_inst
    post_run_PMODE_2997 <= R_PROCESSOR_ERROR_MODE_2994_wire_constant when (AND_u1_u1_2993_wire(0) /=  '0') else R_PROCESSOR_EXECUTE_MODE_2995_wire_constant;
    -- flow-through select operator MUX_3006_inst
    post_run_THREAD_COUNTER_3007 <= konst_3002_wire_constant when (EQ_u4_u1_3001_wire(0) /=  '0') else ADD_u4_u4_3005_wire;
    -- flow-through select operator MUX_3033_inst
    next_DBG_STATUS_3034 <= post_run_DBG_STATUS_2871 when (run_thread_2661(0) /=  '0') else konst_3032_wire_constant;
    -- flow-through select operator MUX_3044_inst
    next_ANNUL_3045 <= post_adv_ANNUL_INSTR_3023 when (run_thread_2661(0) /=  '0') else R_ZERO_1_3043_wire_constant;
    -- flow-through select operator MUX_3054_inst
    MUX_3054_wire <= post_run_PMODE_2997 when (run_thread_2661(0) /=  '0') else post_et_PMODE_2591;
    -- flow-through select operator MUX_3055_inst
    MUX_3055_wire <= R_PROCESSOR_RESET_MODE_3050_wire_constant when (go_to_reset_mode_2334(0) /=  '0') else MUX_3054_wire;
    -- flow-through select operator MUX_3056_inst
    next_PMODE_3057 <= R_PROCESSOR_ERROR_MODE_3048_wire_constant when (processor_in_error_2393(0) /=  '0') else MUX_3055_wire;
    -- flow-through select operator MUX_3066_inst
    MUX_3066_wire <= post_adv_PC_3023 when (run_thread_2661(0) /=  '0') else PC_2415;
    -- flow-through select operator MUX_3067_inst
    MUX_3067_wire <= RPIPE_DBG_TO_CCU_INIT_PC_SIG_3062_wire when (hard_reset_asserted_2331(0) /=  '0') else MUX_3066_wire;
    -- flow-through select operator MUX_3068_inst
    next_PC_3069 <= PC_2415 when (processor_in_error_2393(0) /=  '0') else MUX_3067_wire;
    -- flow-through select operator MUX_3078_inst
    MUX_3078_wire <= post_adv_NPC_3023 when (run_thread_2661(0) /=  '0') else NPC_2421;
    -- flow-through select operator MUX_3079_inst
    MUX_3079_wire <= RPIPE_DBG_TO_CCU_INIT_NPC_SIG_3074_wire when (hard_reset_asserted_2331(0) /=  '0') else MUX_3078_wire;
    -- flow-through select operator MUX_3080_inst
    next_NPC_3081 <= NPC_2421 when (processor_in_error_2393(0) /=  '0') else MUX_3079_wire;
    -- flow-through select operator MUX_3090_inst
    MUX_3090_wire <= post_run_PSR_2981 when (run_thread_2661(0) /=  '0') else PSR_2427;
    -- flow-through select operator MUX_3091_inst
    MUX_3091_wire <= RPIPE_DBG_TO_CCU_INIT_PSR_SIG_3086_wire when (hard_reset_asserted_2331(0) /=  '0') else MUX_3090_wire;
    -- flow-through select operator MUX_3092_inst
    next_PSR_3093 <= PSR_2427 when (processor_in_error_2393(0) /=  '0') else MUX_3091_wire;
    -- flow-through select operator MUX_3102_inst
    MUX_3102_wire <= post_run_TBR_2989 when (run_thread_2661(0) /=  '0') else TBR_2433;
    -- flow-through select operator MUX_3103_inst
    MUX_3103_wire <= konst_3098_wire_constant when (hard_reset_asserted_2331(0) /=  '0') else MUX_3102_wire;
    -- flow-through select operator MUX_3104_inst
    next_TBR_3105 <= TBR_2433 when (processor_in_error_2393(0) /=  '0') else MUX_3103_wire;
    -- flow-through select operator MUX_3114_inst
    MUX_3114_wire <= post_run_THREAD_COUNTER_3007 when (run_thread_2661(0) /=  '0') else konst_3113_wire_constant;
    -- flow-through select operator MUX_3115_inst
    MUX_3115_wire <= konst_3110_wire_constant when (hard_reset_asserted_2331(0) /=  '0') else MUX_3114_wire;
    -- flow-through select operator MUX_3116_inst
    next_THREAD_COUNTER_3117 <= konst_3108_wire_constant when (processor_in_error_2393(0) /=  '0') else MUX_3115_wire;
    -- flow-through select operator MUX_3128_inst
    MUX_3128_wire <= post_run_TV_2907 when (run_thread_2661(0) /=  '0') else konst_3127_wire_constant;
    -- flow-through select operator MUX_3129_inst
    MUX_3129_wire <= OR_u32_u32_3124_wire_constant when (hard_reset_asserted_2331(0) /=  '0') else MUX_3128_wire;
    -- flow-through select operator MUX_3130_inst
    next_TV_3131 <= TV_2439 when (processor_in_error_2393(0) /=  '0') else MUX_3129_wire;
    -- flow-through select operator MUX_3136_inst
    next_ILVL_3137 <= post_run_ILVL_2867 when (run_thread_2661(0) /=  '0') else konst_3135_wire_constant;
    -- flow-through select operator MUX_3142_inst
    next_TICC_TRAP_TYPE_3143 <= post_run_TICC_TRAP_TYPE_2863 when (run_thread_2661(0) /=  '0') else konst_3141_wire_constant;
    -- flow-through slice operator slice_2248_inst
    THREAD_COUNTER_2249 <= CIRCULANT_2241(196 downto 193);
    -- flow-through slice operator slice_2252_inst
    from_entry_2253 <= CIRCULANT_2241(192 downto 192);
    -- flow-through slice operator slice_2256_inst
    PMODE_2257 <= CIRCULANT_2241(191 downto 190);
    -- flow-through slice operator slice_2260_inst
    ANNUL_2261 <= CIRCULANT_2241(189 downto 189);
    -- flow-through slice operator slice_2264_inst
    INTERRUPT_FLAG_2265 <= CIRCULANT_2241(188 downto 188);
    -- flow-through slice operator slice_2268_inst
    DBG_INIT_2269 <= CIRCULANT_2241(187 downto 187);
    -- flow-through slice operator slice_2272_inst
    DBG_STATUS_2273 <= CIRCULANT_2241(186 downto 179);
    -- flow-through slice operator slice_2276_inst
    loopback_STATE_2277 <= CIRCULANT_2241(178 downto 8);
    -- flow-through slice operator slice_2280_inst
    reset_from_replicator_2281 <= CIRCULANT_2241(7 downto 0);
    -- flow-through slice operator slice_2284_inst
    loopback_ILVL_2285 <= loopback_STATE_2277(170 downto 167);
    -- flow-through slice operator slice_2288_inst
    loopback_TICC_TRAP_TYPE_2289 <= loopback_STATE_2277(166 downto 160);
    -- flow-through slice operator slice_2292_inst
    loopback_PC_2293 <= loopback_STATE_2277(159 downto 128);
    -- flow-through slice operator slice_2296_inst
    loopback_NPC_2297 <= loopback_STATE_2277(127 downto 96);
    -- flow-through slice operator slice_2300_inst
    loopback_PSR_2301 <= loopback_STATE_2277(95 downto 64);
    -- flow-through slice operator slice_2304_inst
    loopback_TBR_2305 <= loopback_STATE_2277(63 downto 32);
    -- flow-through slice operator slice_2308_inst
    loopback_TV_2309 <= loopback_STATE_2277(31 downto 0);
    -- flow-through slice operator slice_2764_inst
    slice_2764_wire <= post_et_PMODE_2591(1 downto 0);
    -- flow-through slice operator slice_2854_inst
    teu_machine_state_valid_2855 <= machine_state_from_teu_2851(225 downto 225);
    -- flow-through slice operator slice_2858_inst
    teu_thread_id_2859 <= machine_state_from_teu_2851(224 downto 221);
    -- flow-through slice operator slice_2862_inst
    post_run_TICC_TRAP_TYPE_2863 <= machine_state_from_teu_2851(220 downto 214);
    -- flow-through slice operator slice_2866_inst
    post_run_ILVL_2867 <= machine_state_from_teu_2851(213 downto 210);
    -- flow-through slice operator slice_2870_inst
    post_run_DBG_STATUS_2871 <= machine_state_from_teu_2851(209 downto 202);
    -- flow-through slice operator slice_2874_inst
    post_run_RETURN_STATUS_2875 <= machine_state_from_teu_2851(201 downto 194);
    -- flow-through slice operator slice_2878_inst
    post_run_psr_modified_2879 <= machine_state_from_teu_2851(193 downto 193);
    -- flow-through slice operator slice_2882_inst
    post_run_tbr_modified_2883 <= machine_state_from_teu_2851(192 downto 192);
    -- flow-through slice operator slice_2886_inst
    post_run_modified_PSR_2887 <= machine_state_from_teu_2851(191 downto 160);
    -- flow-through slice operator slice_2890_inst
    post_run_modified_TBR_2891 <= machine_state_from_teu_2851(159 downto 128);
    -- flow-through slice operator slice_2894_inst
    post_run_PC_2895 <= machine_state_from_teu_2851(127 downto 96);
    -- flow-through slice operator slice_2898_inst
    post_run_NPC_2899 <= machine_state_from_teu_2851(95 downto 64);
    -- flow-through slice operator slice_2902_inst
    post_run_NNPC_2903 <= machine_state_from_teu_2851(63 downto 32);
    -- flow-through slice operator slice_2906_inst
    post_run_TV_2907 <= machine_state_from_teu_2851(31 downto 0);
    -- flow-through slice operator slice_2927_inst
    post_run_annul_instr_2928 <= post_run_RETURN_STATUS_2875(5 downto 5);
    -- flow-through slice operator slice_2931_inst
    post_run_next_annul_2932 <= post_run_RETURN_STATUS_2875(4 downto 4);
    -- flow-through slice operator slice_2935_inst
    post_run_single_step_return_2936 <= post_run_RETURN_STATUS_2875(3 downto 3);
    -- flow-through slice operator slice_2939_inst
    post_run_exception_found_2940 <= post_run_RETURN_STATUS_2875(2 downto 2);
    -- flow-through slice operator slice_2943_inst
    post_run_interrupt_found_2944 <= post_run_RETURN_STATUS_2875(1 downto 1);
    -- flow-through slice operator slice_2947_inst
    post_run_machine_error_2948 <= post_run_RETURN_STATUS_2875(0 downto 0);
    -- interlock W_ccu_in_single_step_mode_2376_inst
    process(single_step_mode_selected_2331) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 0 downto 0) := single_step_mode_selected_2331(0 downto 0);
      ccu_in_single_step_mode_2378 <= tmp_var; -- 
    end process;
    -- interlock W_go_to_reset_mode_2332_inst
    process(hard_reset_asserted_2331) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 0 downto 0) := hard_reset_asserted_2331(0 downto 0);
      go_to_reset_mode_2334 <= tmp_var; -- 
    end process;
    -- interlock W_run_TBR_2799_inst
    process(post_et_TBR_2603) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 31 downto 0) := post_et_TBR_2603(31 downto 0);
      run_TBR_2801 <= tmp_var; -- 
    end process;
    next_CIRCULANT_3177_2244_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= next_CIRCULANT_3177_2244_buf_req_0;
      next_CIRCULANT_3177_2244_buf_ack_0<= wack(0);
      rreq(0) <= next_CIRCULANT_3177_2244_buf_req_1;
      next_CIRCULANT_3177_2244_buf_ack_1<= rack(0);
      next_CIRCULANT_3177_2244_buf : InterlockBuffer generic map ( -- 
        name => "next_CIRCULANT_3177_2244_buf",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 197,
        out_data_width => 197,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => next_CIRCULANT_3177,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => next_CIRCULANT_3177_2244_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    type_cast_2773_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= type_cast_2773_inst_req_0;
      type_cast_2773_inst_ack_0<= wack(0);
      rreq(0) <= type_cast_2773_inst_req_1;
      type_cast_2773_inst_ack_1<= rack(0);
      type_cast_2773_inst : InterlockBuffer generic map ( -- 
        name => "type_cast_2773_inst",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 8,
        out_data_width => 4,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => to_pmode_2767,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => type_cast_2773_wire,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    do_while_stmt_2239_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= konst_3189_wire_constant;
      branch_instance: BranchBase -- 
        generic map( name => "do_while_stmt_2239_branch", condition_width => 1,  bypass_flag => true)
        port map( -- 
          condition => condition_sig,
          req => do_while_stmt_2239_branch_req_0,
          ack0 => do_while_stmt_2239_branch_ack_0,
          ack1 => do_while_stmt_2239_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    -- flow through binary operator ADD_u4_u4_3005_inst
    ADD_u4_u4_3005_wire <= std_logic_vector(unsigned(THREAD_COUNTER_2249) + unsigned(konst_3004_wire_constant));
    -- flow through binary operator AND_u1_u1_2340_inst
    AND_u1_u1_2340_wire <= (hard_reset_asserted_2331 and NOT_u1_u1_2339_wire);
    -- flow through binary operator AND_u1_u1_2384_inst
    AND_u1_u1_2384_wire <= (NOT_u1_u1_2382_wire and hard_reset_asserted_2331);
    -- flow through binary operator AND_u1_u1_2474_inst
    exec_trap_flag_2475 <= (there_is_an_exception_2469 and NOT_u1_u1_2473_wire);
    -- flow through binary operator AND_u1_u1_2518_inst
    write_et_regs_to_teu_2519 <= (exec_trap_flag_2475 and NEQ_u2_u1_2517_wire);
    -- flow through binary operator AND_u1_u1_2656_inst
    AND_u1_u1_2656_wire <= (NOT_u1_u1_2653_wire and NOT_u1_u1_2655_wire);
    -- flow through binary operator AND_u1_u1_2660_inst
    run_thread_2661 <= (AND_u1_u1_2656_wire and EQ_u2_u1_2659_wire);
    -- flow through binary operator AND_u1_u1_2690_inst
    query_debugger_flag_2691 <= (NOT_u1_u1_2688_wire and debug_mode_selected_2331);
    -- flow through binary operator AND_u1_u1_2695_inst
    first_connect_to_debugger_2696 <= (run_thread_2661 and DBG_INIT_2269);
    -- flow through binary operator AND_u1_u1_2707_inst
    mc_error_2708 <= (EQ_u2_u1_2705_wire and query_debugger_flag_2691);
    -- flow through binary operator AND_u1_u1_2714_inst
    tv_0_2715 <= (query_debugger_flag_2691 and BITSEL_u32_u1_2713_wire);
    -- flow through binary operator AND_u1_u1_2719_inst
    intr_to_dbg_2720 <= (query_debugger_flag_2691 and INTERRUPT_FLAG_2265);
    -- flow through binary operator AND_u1_u1_2724_inst
    annul_to_dbg_2725 <= (query_debugger_flag_2691 and ANNUL_2261);
    -- flow through binary operator AND_u1_u1_2735_inst
    first_connect_to_gdb_flag_2736 <= (first_connect_to_debugger_2696 and debug_mode_selected_2331);
    -- flow through binary operator AND_u1_u1_2805_inst
    run_DBG_IGNORE_BP_2806 <= (query_debugger_flag_2691 and post_et_dbg_DBG_IGNORE_BP_2753);
    -- flow through binary operator AND_u1_u1_2837_inst
    trace_to_teu_2838 <= (run_thread_2661 and trace_on_flag_2206);
    -- flow through binary operator AND_u1_u1_2911_inst
    post_teu_run_thread_2912 <= (run_thread_2661 and teu_machine_state_valid_2855);
    -- flow through binary operator AND_u1_u1_2977_inst
    AND_u1_u1_2977_wire <= (post_teu_run_thread_2912 and post_run_psr_modified_2879);
    -- flow through binary operator AND_u1_u1_2985_inst
    AND_u1_u1_2985_wire <= (post_teu_run_thread_2912 and post_run_tbr_modified_2883);
    -- flow through binary operator AND_u1_u1_2993_inst
    AND_u1_u1_2993_wire <= (run_thread_2661 and post_run_machine_error_2948);
    -- flow through binary operator AND_u1_u1_3038_inst
    next_INTERRUPT_FLAG_3039 <= (run_thread_2661 and post_run_interrupt_found_2944);
    -- flow through binary operator BITSEL_u32_u1_2466_inst
    process(TV_2439) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(TV_2439, konst_2465_wire_constant, tmp_var);
      BITSEL_u32_u1_2466_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_2479_inst
    process(PSR_2427) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(PSR_2427, konst_2478_wire_constant, tmp_var);
      ET_2480 <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_2713_inst
    process(TV_2439) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(TV_2439, konst_2712_wire_constant, tmp_var);
      BITSEL_u32_u1_2713_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_2760_inst
    process(TV_2439) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(TV_2439, konst_2759_wire_constant, tmp_var);
      BITSEL_u32_u1_2760_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u11_u75_3151_inst
    process(CONCAT_u4_u11_3147_wire, CONCAT_u32_u64_3150_wire) -- 
      variable tmp_var : std_logic_vector(74 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u4_u11_3147_wire, CONCAT_u32_u64_3150_wire, tmp_var);
      CONCAT_u11_u75_3151_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u171_u179_3174_inst
    process(next_loopback_STATE_3158, RPIPE_ccu_to_ccu_reset_3173_wire) -- 
      variable tmp_var : std_logic_vector(178 downto 0); -- 
    begin -- 
      ApConcat_proc(next_loopback_STATE_3158, RPIPE_ccu_to_ccu_reset_3173_wire, tmp_var);
      CONCAT_u171_u179_3174_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u1_u2_3167_inst
    process(next_ANNUL_3045, next_INTERRUPT_FLAG_3039) -- 
      variable tmp_var : std_logic_vector(1 downto 0); -- 
    begin -- 
      ApConcat_proc(next_ANNUL_3045, next_INTERRUPT_FLAG_3039, tmp_var);
      CONCAT_u1_u2_3167_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u1_u33_2815_inst
    process(debug_mode_selected_2331, run_PC_2786) -- 
      variable tmp_var : std_logic_vector(32 downto 0); -- 
    begin -- 
      ApConcat_proc(debug_mode_selected_2331, run_PC_2786, tmp_var);
      CONCAT_u1_u33_2815_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u1_u3_2765_inst
    process(R_ZERO_1_2762_wire_constant, slice_2764_wire) -- 
      variable tmp_var : std_logic_vector(2 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ZERO_1_2762_wire_constant, slice_2764_wire, tmp_var);
      CONCAT_u1_u3_2765_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u1_u9_3171_inst
    process(next_DBG_INIT_2685, next_DBG_STATUS_3034) -- 
      variable tmp_var : std_logic_vector(8 downto 0); -- 
    begin -- 
      ApConcat_proc(next_DBG_INIT_2685, next_DBG_STATUS_3034, tmp_var);
      CONCAT_u1_u9_3171_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u32_u33_2821_inst
    process(run_PSR_2798, run_ANNUL_2780) -- 
      variable tmp_var : std_logic_vector(32 downto 0); -- 
    begin -- 
      ApConcat_proc(run_PSR_2798, run_ANNUL_2780, tmp_var);
      CONCAT_u32_u33_2821_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u32_u64_3150_inst
    process(next_PC_3069, next_NPC_3081) -- 
      variable tmp_var : std_logic_vector(63 downto 0); -- 
    begin -- 
      ApConcat_proc(next_PC_3069, next_NPC_3081, tmp_var);
      CONCAT_u32_u64_3150_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u32_u64_3154_inst
    process(next_PSR_3093, next_TBR_3105) -- 
      variable tmp_var : std_logic_vector(63 downto 0); -- 
    begin -- 
      ApConcat_proc(next_PSR_3093, next_TBR_3105, tmp_var);
      CONCAT_u32_u64_3154_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u33_u34_2823_inst
    process(CONCAT_u32_u33_2821_wire, logging_trace_selected_2331) -- 
      variable tmp_var : std_logic_vector(33 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u32_u33_2821_wire, logging_trace_selected_2331, tmp_var);
      CONCAT_u33_u34_2823_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u33_u65_2817_inst
    process(CONCAT_u1_u33_2815_wire, run_NPC_2792) -- 
      variable tmp_var : std_logic_vector(64 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u1_u33_2815_wire, run_NPC_2792, tmp_var);
      CONCAT_u33_u65_2817_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u34_u36_2827_inst
    process(CONCAT_u33_u34_2823_wire) -- 
      variable tmp_var : std_logic_vector(35 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u33_u34_2823_wire, CONCAT_u1_u2_2826_wire_constant, tmp_var);
      CONCAT_u34_u36_2827_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u4_u11_3147_inst
    process(next_ILVL_3137, next_TICC_TRAP_TYPE_3143) -- 
      variable tmp_var : std_logic_vector(10 downto 0); -- 
    begin -- 
      ApConcat_proc(next_ILVL_3137, next_TICC_TRAP_TYPE_3143, tmp_var);
      CONCAT_u4_u11_3147_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u4_u41_2528_inst
    process(CONCAT_u1_u4_2523_wire_constant, CONCAT_u5_u37_2527_wire) -- 
      variable tmp_var : std_logic_vector(40 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u1_u4_2523_wire_constant, CONCAT_u5_u37_2527_wire, tmp_var);
      write_tbr_command_2529 <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u4_u41_2545_inst
    process(CONCAT_u1_u4_2540_wire_constant, CONCAT_u5_u37_2544_wire) -- 
      variable tmp_var : std_logic_vector(40 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u1_u4_2540_wire_constant, CONCAT_u5_u37_2544_wire, tmp_var);
      write_psr_command_2546 <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u4_u41_2562_inst
    process(CONCAT_u1_u4_2557_wire_constant, CONCAT_u5_u37_2561_wire) -- 
      variable tmp_var : std_logic_vector(40 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u1_u4_2557_wire_constant, CONCAT_u5_u37_2561_wire, tmp_var);
      write_l1_command_2563 <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u4_u41_2576_inst
    process(CONCAT_u1_u4_2571_wire_constant, CONCAT_u5_u37_2575_wire) -- 
      variable tmp_var : std_logic_vector(40 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u1_u4_2571_wire_constant, CONCAT_u5_u37_2575_wire, tmp_var);
      write_l2_command_2577 <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u4_u5_2761_inst
    process(ILVL_2445, BITSEL_u32_u1_2760_wire) -- 
      variable tmp_var : std_logic_vector(4 downto 0); -- 
    begin -- 
      ApConcat_proc(ILVL_2445, BITSEL_u32_u1_2760_wire, tmp_var);
      CONCAT_u4_u5_2761_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u4_u5_2810_inst
    process(THREAD_COUNTER_2249, ccu_in_single_step_mode_2378) -- 
      variable tmp_var : std_logic_vector(4 downto 0); -- 
    begin -- 
      ApConcat_proc(THREAD_COUNTER_2249, ccu_in_single_step_mode_2378, tmp_var);
      CONCAT_u4_u5_2810_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u4_u5_3162_inst
    process(next_THREAD_COUNTER_3117) -- 
      variable tmp_var : std_logic_vector(4 downto 0); -- 
    begin -- 
      ApConcat_proc(next_THREAD_COUNTER_3117, R_ZERO_1_3161_wire_constant, tmp_var);
      CONCAT_u4_u5_3162_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u5_u37_2527_inst
    process(type_cast_2525_wire_constant, et_TBR_2512) -- 
      variable tmp_var : std_logic_vector(36 downto 0); -- 
    begin -- 
      ApConcat_proc(type_cast_2525_wire_constant, et_TBR_2512, tmp_var);
      CONCAT_u5_u37_2527_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u5_u37_2544_inst
    process(type_cast_2542_wire_constant, et_PSR_2512) -- 
      variable tmp_var : std_logic_vector(36 downto 0); -- 
    begin -- 
      ApConcat_proc(type_cast_2542_wire_constant, et_PSR_2512, tmp_var);
      CONCAT_u5_u37_2544_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u5_u37_2561_inst
    process(type_cast_2559_wire_constant, et_L1_2512) -- 
      variable tmp_var : std_logic_vector(36 downto 0); -- 
    begin -- 
      ApConcat_proc(type_cast_2559_wire_constant, et_L1_2512, tmp_var);
      CONCAT_u5_u37_2561_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u5_u37_2575_inst
    process(type_cast_2573_wire_constant, et_L2_2512) -- 
      variable tmp_var : std_logic_vector(36 downto 0); -- 
    begin -- 
      ApConcat_proc(type_cast_2573_wire_constant, et_L2_2512, tmp_var);
      CONCAT_u5_u37_2575_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u5_u6_2812_inst
    process(CONCAT_u4_u5_2810_wire, run_DBG_IGNORE_BP_2806) -- 
      variable tmp_var : std_logic_vector(5 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u4_u5_2810_wire, run_DBG_IGNORE_BP_2806, tmp_var);
      CONCAT_u5_u6_2812_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u5_u7_3164_inst
    process(CONCAT_u4_u5_3162_wire, next_PMODE_3057) -- 
      variable tmp_var : std_logic_vector(6 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u4_u5_3162_wire, next_PMODE_3057, tmp_var);
      CONCAT_u5_u7_3164_wire <= tmp_var; --
    end process;
    -- shared split operator group (51) : CONCAT_u5_u8_2766_inst 
    ApConcat_group_51: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(7 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 2);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= CONCAT_u4_u5_2761_wire & CONCAT_u1_u3_2765_wire;
      to_pmode_2767 <= data_out(7 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u5_u8_2766_inst_req_0;
      CONCAT_u5_u8_2766_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u5_u8_2766_inst_req_1;
      CONCAT_u5_u8_2766_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_51_gI: SplitGuardInterface generic map(name => "ApConcat_group_51_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_51",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 5,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 3, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 8,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 2,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 51
    -- flow through binary operator CONCAT_u64_u96_3156_inst
    process(CONCAT_u32_u64_3154_wire, next_TV_3131) -- 
      variable tmp_var : std_logic_vector(95 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u32_u64_3154_wire, next_TV_3131, tmp_var);
      CONCAT_u64_u96_3156_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u6_u71_2818_inst
    process(CONCAT_u5_u6_2812_wire, CONCAT_u33_u65_2817_wire) -- 
      variable tmp_var : std_logic_vector(70 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u5_u6_2812_wire, CONCAT_u33_u65_2817_wire, tmp_var);
      CONCAT_u6_u71_2818_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u71_u107_2828_inst
    process(CONCAT_u6_u71_2818_wire, CONCAT_u34_u36_2827_wire) -- 
      variable tmp_var : std_logic_vector(106 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u6_u71_2818_wire, CONCAT_u34_u36_2827_wire, tmp_var);
      thread_info_to_teu_2829 <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u75_u171_3157_inst
    process(CONCAT_u11_u75_3151_wire, CONCAT_u64_u96_3156_wire) -- 
      variable tmp_var : std_logic_vector(170 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u11_u75_3151_wire, CONCAT_u64_u96_3156_wire, tmp_var);
      next_loopback_STATE_3158 <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u7_u9_3168_inst
    process(CONCAT_u5_u7_3164_wire, CONCAT_u1_u2_3167_wire) -- 
      variable tmp_var : std_logic_vector(8 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u5_u7_3164_wire, CONCAT_u1_u2_3167_wire, tmp_var);
      CONCAT_u7_u9_3168_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u9_u188_3175_inst
    process(CONCAT_u1_u9_3171_wire, CONCAT_u171_u179_3174_wire) -- 
      variable tmp_var : std_logic_vector(187 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u1_u9_3171_wire, CONCAT_u171_u179_3174_wire, tmp_var);
      CONCAT_u9_u188_3175_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u9_u197_3176_inst
    process(CONCAT_u7_u9_3168_wire, CONCAT_u9_u188_3175_wire) -- 
      variable tmp_var : std_logic_vector(196 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u7_u9_3168_wire, CONCAT_u9_u188_3175_wire, tmp_var);
      next_CIRCULANT_3177 <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u2_u1_2313_inst
    process(PMODE_2257) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(PMODE_2257, R_PROCESSOR_RESET_MODE_2312_wire_constant, tmp_var);
      in_reset_mode_2314 <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u2_u1_2318_inst
    process(PMODE_2257) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(PMODE_2257, R_PROCESSOR_ERROR_MODE_2317_wire_constant, tmp_var);
      in_error_mode_2319 <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u2_u1_2323_inst
    process(PMODE_2257) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(PMODE_2257, R_PROCESSOR_EXECUTE_MODE_2322_wire_constant, tmp_var);
      in_exec_mode_2324 <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u2_u1_2392_inst
    process(pmode_before_exec_trap_2375) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(pmode_before_exec_trap_2375, R_PROCESSOR_ERROR_MODE_2391_wire_constant, tmp_var);
      processor_in_error_2393 <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u2_u1_2659_inst
    process(post_et_PMODE_2591) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(post_et_PMODE_2591, R_PROCESSOR_EXECUTE_MODE_2658_wire_constant, tmp_var);
      EQ_u2_u1_2659_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u2_u1_2705_inst
    process(post_et_PMODE_2591) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(post_et_PMODE_2591, R_PROCESSOR_ERROR_MODE_2704_wire_constant, tmp_var);
      EQ_u2_u1_2705_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u4_u1_3001_inst
    process(THREAD_COUNTER_2249) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(THREAD_COUNTER_2249, konst_3000_wire_constant, tmp_var);
      EQ_u4_u1_3001_wire <= tmp_var; --
    end process;
    -- flow through binary operator NEQ_u2_u1_2517_inst
    process(et_PMODE_2512) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntNe_proc(et_PMODE_2512, R_PROCESSOR_ERROR_MODE_2516_wire_constant, tmp_var);
      NEQ_u2_u1_2517_wire <= tmp_var; --
    end process;
    -- unary operator NOT_u1_u1_2339_inst
    process(in_reset_mode_2314) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", in_reset_mode_2314, tmp_var);
      NOT_u1_u1_2339_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_2382_inst
    process(in_reset_mode_2314) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", in_reset_mode_2314, tmp_var);
      NOT_u1_u1_2382_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_2473_inst
    process(go_to_reset_mode_2334) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", go_to_reset_mode_2334, tmp_var);
      NOT_u1_u1_2473_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_2653_inst
    process(processor_in_error_2393) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", processor_in_error_2393, tmp_var);
      NOT_u1_u1_2653_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_2655_inst
    process(go_to_reset_mode_2334) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", go_to_reset_mode_2334, tmp_var);
      NOT_u1_u1_2655_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_2688_inst
    process(DBG_INIT_2269) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", DBG_INIT_2269, tmp_var);
      NOT_u1_u1_2688_wire <= tmp_var; -- 
    end process;
    -- flow through binary operator OR_u1_u1_2341_inst
    reset_mem_subsystem_2342 <= (from_entry_2253 or AND_u1_u1_2340_wire);
    -- flow through binary operator OR_u1_u1_2385_inst
    init_flag_2386 <= (from_entry_2253 or AND_u1_u1_2384_wire);
    -- flow through binary operator OR_u1_u1_2468_inst
    there_is_an_exception_2469 <= (BITSEL_u32_u1_2466_wire or INTERRUPT_FLAG_2265);
    -- flow through binary operator OR_u1_u1_2665_inst
    send_reset_to_teu_2666 <= (go_to_reset_mode_2334 or processor_in_error_2393);
    -- flow through binary operator OR_u1_u1_2700_inst
    debug_active_2701 <= (query_debugger_flag_2691 or first_connect_to_debugger_2696);
    -- flow through binary operator OR_u2_u2_2366_inst
    OR_u2_u2_2366_wire <= (MUX_2358_wire or MUX_2365_wire);
    -- flow through binary operator OR_u2_u2_2374_inst
    pmode_before_exec_trap_2375 <= (OR_u2_u2_2366_wire or MUX_2373_wire);
    -- read from input-signal DBG_TO_CCU_INIT_NPC_SIG
    RPIPE_DBG_TO_CCU_INIT_NPC_SIG_2395_wire <= DBG_TO_CCU_INIT_NPC_SIG;
    RPIPE_DBG_TO_CCU_INIT_NPC_SIG_3074_wire <= DBG_TO_CCU_INIT_NPC_SIG;
    -- read from input-signal DBG_TO_CCU_INIT_PC_SIG
    RPIPE_DBG_TO_CCU_INIT_PC_SIG_2394_wire <= DBG_TO_CCU_INIT_PC_SIG;
    RPIPE_DBG_TO_CCU_INIT_PC_SIG_3062_wire <= DBG_TO_CCU_INIT_PC_SIG;
    -- read from input-signal DBG_TO_CCU_INIT_PSR_SIG
    RPIPE_DBG_TO_CCU_INIT_PSR_SIG_2396_wire <= DBG_TO_CCU_INIT_PSR_SIG;
    RPIPE_DBG_TO_CCU_INIT_PSR_SIG_3086_wire <= DBG_TO_CCU_INIT_PSR_SIG;
    -- shared inport operator group (3) : RPIPE_ccu_start_2202_inst 
    InportGroup_3: Block -- 
      signal data_out: std_logic_vector(0 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 0 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= RPIPE_ccu_start_2202_inst_req_0;
      RPIPE_ccu_start_2202_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= RPIPE_ccu_start_2202_inst_req_1;
      RPIPE_ccu_start_2202_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      start_ccu_2203 <= data_out(0 downto 0);
      ccu_start_read_3_gI: SplitGuardInterface generic map(name => "ccu_start_read_3_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      ccu_start_read_3: InputPortRevised -- 
        generic map ( name => "ccu_start_read_3", data_width => 1,  num_reqs => 1,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => ccu_start_pipe_read_req(0),
          oack => ccu_start_pipe_read_ack(0),
          odata => ccu_start_pipe_read_data(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 3
    -- read from input-signal ccu_to_ccu_reset
    RPIPE_ccu_to_ccu_reset_3173_wire <= ccu_to_ccu_reset;
    -- shared inport operator group (5) : RPIPE_teu_to_ccu_2850_inst 
    InportGroup_5: Block -- 
      signal data_out: std_logic_vector(225 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 0 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => true);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= RPIPE_teu_to_ccu_2850_inst_req_0;
      RPIPE_teu_to_ccu_2850_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= RPIPE_teu_to_ccu_2850_inst_req_1;
      RPIPE_teu_to_ccu_2850_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <= run_thread_2661(0);
      machine_state_from_teu_2851 <= data_out(225 downto 0);
      teu_to_ccu_read_5_gI: SplitGuardInterface generic map(name => "teu_to_ccu_read_5_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      teu_to_ccu_read_5: InputPortRevised -- 
        generic map ( name => "teu_to_ccu_read_5", data_width => 226,  num_reqs => 1,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => teu_to_ccu_pipe_read_req(0),
          oack => teu_to_ccu_pipe_read_ack(0),
          odata => teu_to_ccu_pipe_read_data(225 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 5
    -- shared outport operator group (0) : WPIPE_AJIT_to_ENV_processor_mode_2192_inst WPIPE_AJIT_to_ENV_processor_mode_2207_inst WPIPE_AJIT_to_ENV_processor_mode_2768_inst 
    OutportGroup_0: Block -- 
      signal data_in: std_logic_vector(23 downto 0);
      signal sample_req, sample_ack : BooleanArray( 2 downto 0);
      signal update_req, update_ack : BooleanArray( 2 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 2 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 2 downto 0);
      signal guard_vector : std_logic_vector( 2 downto 0);
      constant inBUFs : IntegerArray(2 downto 0) := (2 => 0, 1 => 0, 0 => 0);
      constant guardFlags : BooleanArray(2 downto 0) := (0 => false, 1 => false, 2 => false);
      constant guardBuffering: IntegerArray(2 downto 0)  := (0 => 2, 1 => 2, 2 => 2);
      -- 
    begin -- 
      sample_req_unguarded(2) <= WPIPE_AJIT_to_ENV_processor_mode_2192_inst_req_0;
      sample_req_unguarded(1) <= WPIPE_AJIT_to_ENV_processor_mode_2207_inst_req_0;
      sample_req_unguarded(0) <= WPIPE_AJIT_to_ENV_processor_mode_2768_inst_req_0;
      WPIPE_AJIT_to_ENV_processor_mode_2192_inst_ack_0 <= sample_ack_unguarded(2);
      WPIPE_AJIT_to_ENV_processor_mode_2207_inst_ack_0 <= sample_ack_unguarded(1);
      WPIPE_AJIT_to_ENV_processor_mode_2768_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(2) <= WPIPE_AJIT_to_ENV_processor_mode_2192_inst_req_1;
      update_req_unguarded(1) <= WPIPE_AJIT_to_ENV_processor_mode_2207_inst_req_1;
      update_req_unguarded(0) <= WPIPE_AJIT_to_ENV_processor_mode_2768_inst_req_1;
      WPIPE_AJIT_to_ENV_processor_mode_2192_inst_ack_1 <= update_ack_unguarded(2);
      WPIPE_AJIT_to_ENV_processor_mode_2207_inst_ack_1 <= update_ack_unguarded(1);
      WPIPE_AJIT_to_ENV_processor_mode_2768_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      data_in <= type_cast_2194_wire_constant & type_cast_2209_wire_constant & to_pmode_2767;
      AJIT_to_ENV_processor_mode_write_0_gI: SplitGuardInterface generic map(name => "AJIT_to_ENV_processor_mode_write_0_gI", nreqs => 3, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      AJIT_to_ENV_processor_mode_write_0: OutputPortRevised -- 
        generic map ( name => "AJIT_to_ENV_processor_mode", data_width => 8, num_reqs => 3, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => AJIT_to_ENV_processor_mode_pipe_write_req(0),
          oack => AJIT_to_ENV_processor_mode_pipe_write_ack(0),
          odata => AJIT_to_ENV_processor_mode_pipe_write_data(7 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 0
    -- shared outport operator group (1) : WPIPE_BROADCAST_INIT_PC_2407_inst 
    OutportGroup_1: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_BROADCAST_INIT_PC_2407_inst_req_0;
      WPIPE_BROADCAST_INIT_PC_2407_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_BROADCAST_INIT_PC_2407_inst_req_1;
      WPIPE_BROADCAST_INIT_PC_2407_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= init_PC_2406;
      BROADCAST_INIT_PC_write_1_gI: SplitGuardInterface generic map(name => "BROADCAST_INIT_PC_write_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      BROADCAST_INIT_PC_write_1: OutputPortRevised -- 
        generic map ( name => "BROADCAST_INIT_PC", data_width => 32, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => BROADCAST_INIT_PC_pipe_write_req(0),
          oack => BROADCAST_INIT_PC_pipe_write_ack(0),
          odata => BROADCAST_INIT_PC_pipe_write_data(31 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 1
    -- shared outport operator group (2) : WPIPE_CCU_TO_DBG_MODE_SIG_2196_inst WPIPE_CCU_TO_DBG_MODE_SIG_2211_inst WPIPE_CCU_TO_DBG_MODE_SIG_2771_inst 
    OutportGroup_2: Block -- 
      signal data_in: std_logic_vector(11 downto 0);
      signal sample_req, sample_ack : BooleanArray( 2 downto 0);
      signal update_req, update_ack : BooleanArray( 2 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 2 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 2 downto 0);
      signal guard_vector : std_logic_vector( 2 downto 0);
      constant inBUFs : IntegerArray(2 downto 0) := (2 => 0, 1 => 0, 0 => 0);
      constant guardFlags : BooleanArray(2 downto 0) := (0 => false, 1 => false, 2 => false);
      constant guardBuffering: IntegerArray(2 downto 0)  := (0 => 2, 1 => 2, 2 => 2);
      -- 
    begin -- 
      sample_req_unguarded(2) <= WPIPE_CCU_TO_DBG_MODE_SIG_2196_inst_req_0;
      sample_req_unguarded(1) <= WPIPE_CCU_TO_DBG_MODE_SIG_2211_inst_req_0;
      sample_req_unguarded(0) <= WPIPE_CCU_TO_DBG_MODE_SIG_2771_inst_req_0;
      WPIPE_CCU_TO_DBG_MODE_SIG_2196_inst_ack_0 <= sample_ack_unguarded(2);
      WPIPE_CCU_TO_DBG_MODE_SIG_2211_inst_ack_0 <= sample_ack_unguarded(1);
      WPIPE_CCU_TO_DBG_MODE_SIG_2771_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(2) <= WPIPE_CCU_TO_DBG_MODE_SIG_2196_inst_req_1;
      update_req_unguarded(1) <= WPIPE_CCU_TO_DBG_MODE_SIG_2211_inst_req_1;
      update_req_unguarded(0) <= WPIPE_CCU_TO_DBG_MODE_SIG_2771_inst_req_1;
      WPIPE_CCU_TO_DBG_MODE_SIG_2196_inst_ack_1 <= update_ack_unguarded(2);
      WPIPE_CCU_TO_DBG_MODE_SIG_2211_inst_ack_1 <= update_ack_unguarded(1);
      WPIPE_CCU_TO_DBG_MODE_SIG_2771_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      guard_vector(2)  <=  '1';
      data_in <= type_cast_2198_wire_constant & type_cast_2213_wire_constant & type_cast_2773_wire;
      CCU_TO_DBG_MODE_SIG_write_2_gI: SplitGuardInterface generic map(name => "CCU_TO_DBG_MODE_SIG_write_2_gI", nreqs => 3, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      CCU_TO_DBG_MODE_SIG_write_2: OutputPortRevised -- 
        generic map ( name => "CCU_TO_DBG_MODE_SIG", data_width => 4, num_reqs => 3, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => CCU_TO_DBG_MODE_SIG_pipe_write_req(0),
          oack => CCU_TO_DBG_MODE_SIG_pipe_write_ack(0),
          odata => CCU_TO_DBG_MODE_SIG_pipe_write_data(3 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 2
    -- shared outport operator group (3) : WPIPE_ccu_to_teu_2677_inst WPIPE_ccu_to_teu_2831_inst WPIPE_ccu_to_teu_2922_inst 
    OutportGroup_3: Block -- 
      signal data_in: std_logic_vector(320 downto 0);
      signal sample_req, sample_ack : BooleanArray( 2 downto 0);
      signal update_req, update_ack : BooleanArray( 2 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 2 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 2 downto 0);
      signal guard_vector : std_logic_vector( 2 downto 0);
      constant inBUFs : IntegerArray(2 downto 0) := (2 => 0, 1 => 0, 0 => 0);
      constant guardFlags : BooleanArray(2 downto 0) := (0 => true, 1 => true, 2 => true);
      constant guardBuffering: IntegerArray(2 downto 0)  := (0 => 2, 1 => 2, 2 => 2);
      -- 
    begin -- 
      sample_req_unguarded(2) <= WPIPE_ccu_to_teu_2677_inst_req_0;
      sample_req_unguarded(1) <= WPIPE_ccu_to_teu_2831_inst_req_0;
      sample_req_unguarded(0) <= WPIPE_ccu_to_teu_2922_inst_req_0;
      WPIPE_ccu_to_teu_2677_inst_ack_0 <= sample_ack_unguarded(2);
      WPIPE_ccu_to_teu_2831_inst_ack_0 <= sample_ack_unguarded(1);
      WPIPE_ccu_to_teu_2922_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(2) <= WPIPE_ccu_to_teu_2677_inst_req_1;
      update_req_unguarded(1) <= WPIPE_ccu_to_teu_2831_inst_req_1;
      update_req_unguarded(0) <= WPIPE_ccu_to_teu_2922_inst_req_1;
      WPIPE_ccu_to_teu_2677_inst_ack_1 <= update_ack_unguarded(2);
      WPIPE_ccu_to_teu_2831_inst_ack_1 <= update_ack_unguarded(1);
      WPIPE_ccu_to_teu_2922_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <= post_teu_run_thread_2912(0);
      guard_vector(1)  <= run_thread_2661(0);
      guard_vector(2)  <= send_reset_to_teu_2666(0);
      data_in <= reset_1_to_teu_2675 & thread_info_to_teu_2829 & reset_2_to_teu_2920;
      ccu_to_teu_write_3_gI: SplitGuardInterface generic map(name => "ccu_to_teu_write_3_gI", nreqs => 3, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      ccu_to_teu_write_3: OutputPortRevised -- 
        generic map ( name => "ccu_to_teu", data_width => 107, num_reqs => 3, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => ccu_to_teu_pipe_write_req(0),
          oack => ccu_to_teu_pipe_write_ack(0),
          odata => ccu_to_teu_pipe_write_data(106 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 3
    -- shared call operator group (0) : call_stmt_2200_call 
    ccu_debug_initialize_call_group_0: Block -- 
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs: IntegerArray(0 downto 0) := (others => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_2200_call_req_0;
      call_stmt_2200_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_2200_call_req_1;
      call_stmt_2200_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      ccu_debug_initialize_call_group_0_gI: SplitGuardInterface generic map(name => "ccu_debug_initialize_call_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      CallReq: InputMuxBaseNoData -- 
        generic map (name => "InputMuxBaseNoData",
        twidth => 1,
        nreqs => 1,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          reqR => ccu_debug_initialize_call_reqs(0),
          ackR => ccu_debug_initialize_call_acks(0),
          tagR => ccu_debug_initialize_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseNoData -- 
        generic map ( -- 
          detailed_buffering_per_output => outBUFs, 
          twidth => 1,
          name => "OutputDemuxBaseNoData",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          reqL => ccu_debug_initialize_return_acks(0), -- cross-over
          ackL => ccu_debug_initialize_return_reqs(0), -- cross-over
          tagL => ccu_debug_initialize_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    volatile_operator_decode_cpu_resets_3291: decode_cpu_resets_Volatile port map(reset_val => reset_from_replicator_2281, hard_reset_asserted => hard_reset_asserted_2331, single_step_mode_selected => single_step_mode_selected_2331, debug_mode_selected => debug_mode_selected_2331, debug_break_on_traps => debug_break_on_traps_2331, logging_trace_selected => logging_trace_selected_2331); 
    -- shared call operator group (2) : call_stmt_2344_call 
    reset_dcache_icache_mmu_call_group_2: Block -- 
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs: IntegerArray(0 downto 0) := (others => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => true);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_2344_call_req_0;
      call_stmt_2344_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_2344_call_req_1;
      call_stmt_2344_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <= reset_mem_subsystem_2342(0);
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      reset_dcache_icache_mmu_call_group_2_gI: SplitGuardInterface generic map(name => "reset_dcache_icache_mmu_call_group_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      CallReq: InputMuxBaseNoData -- 
        generic map (name => "InputMuxBaseNoData",
        twidth => 1,
        nreqs => 1,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          reqR => reset_dcache_icache_mmu_call_reqs(0),
          ackR => reset_dcache_icache_mmu_call_acks(0),
          tagR => reset_dcache_icache_mmu_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseNoData -- 
        generic map ( -- 
          detailed_buffering_per_output => outBUFs, 
          twidth => 1,
          name => "OutputDemuxBaseNoData",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          reqL => reset_dcache_icache_mmu_return_acks(0), -- cross-over
          ackL => reset_dcache_icache_mmu_return_reqs(0), -- cross-over
          tagL => reset_dcache_icache_mmu_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 2
    volatile_operator_init_processor_state_3313: init_processor_state_Volatile port map(ipc => RPIPE_DBG_TO_CCU_INIT_PC_SIG_2394_wire, inpc => RPIPE_DBG_TO_CCU_INIT_NPC_SIG_2395_wire, ipsr => RPIPE_DBG_TO_CCU_INIT_PSR_SIG_2396_wire, pmode => init_PMODE_2406, psr => init_PSR_2406, wim => init_WIM_2406, tbr => init_TBR_2406, tv => init_TV_2406, pc => init_PC_2406, npc => init_NPC_2406, ilvl => init_ILVL_2406, ticc_trap_type => init_TICC_TRAP_TYPE_2406); 
    operator_selectTrap_3327_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      signal sample_req_ug, sample_ack_ug, update_req_ug, update_ack_ug: BooleanArray(0 downto 0); 
      signal guard_vector : std_logic_vector(0 downto 0); 
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => true);
      -- 
    begin -- 
      sample_req_ug(0) <= call_stmt_2491_call_req_0;
      call_stmt_2491_call_ack_0<= sample_ack_ug(0);
      update_req_ug(0) <= call_stmt_2491_call_req_1;
      call_stmt_2491_call_ack_1<= update_ack_ug(0);
      guard_vector(0) <=  exec_trap_flag_2475(0);
      call_stmt_2491_call_gI: SplitGuardInterface generic map(name => "call_stmt_2491_call_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_ug,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_ug,
        cr_in => update_req_ug,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_ug,
        guards => guard_vector); -- 
      call_stmt_2491_call: selectTrap_Operator  port map ( -- 
        sample_req => sample_req(0), 
        sample_ack => sample_ack(0), 
        update_req => update_req(0), 
        update_ack => update_ack(0), 
        iTV => TV_2439,
        iTBR => TBR_2433,
        iET => ET_2480,
        iPMODE => PMODE_2257,
        iILVL => ILVL_2445,
        iTICC_TRAP_TYPE => TICC_TRAP_TYPE_2451,
        oTV => st_TV_2491,
        oTBR => st_TBR_2491,
        oPMODE => st_PMODE_2491,
        clk => clk, reset => reset  
        -- 
      );-- 
    end block;
    volatile_operator_calculatePostTrapRegisterValues_3328: calculatePostTrapRegisterValues_Volatile port map(exec_trap_flag => exec_trap_flag_2475, iPMODE => st_PMODE_2491, iPSR => PSR_2427, iTBR => st_TBR_2491, iTV => st_TV_2491, iPC => PC_2415, iNPC => NPC_2421, iILVL => ILVL_2445, iTICC_TRAP_TYPE => TICC_TRAP_TYPE_2451, iANNUL => ANNUL_2261, init_PC => init_PC_2406, init_NPC => init_NPC_2406, oPMODE => et_PMODE_2512, oPSR => et_PSR_2512, oTBR => et_TBR_2512, oTV => et_TV_2512, oPC => et_PC_2512, oNPC => et_NPC_2512, oL1 => et_L1_2512, oL2 => et_L2_2512); 
    -- shared call operator group (6) : call_stmt_2533_call call_stmt_2550_call call_stmt_2567_call call_stmt_2581_call 
    access_iunit_registers_call_group_6: Block -- 
      signal data_in: std_logic_vector(163 downto 0);
      signal data_out: std_logic_vector(127 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 3 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 3 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 3 downto 0);
      signal guard_vector : std_logic_vector( 3 downto 0);
      constant inBUFs : IntegerArray(3 downto 0) := (3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant outBUFs : IntegerArray(3 downto 0) := (3 => 1, 2 => 1, 1 => 1, 0 => 1);
      constant guardFlags : BooleanArray(3 downto 0) := (0 => true, 1 => true, 2 => true, 3 => true);
      constant guardBuffering: IntegerArray(3 downto 0)  := (0 => 3, 1 => 3, 2 => 3, 3 => 3);
      -- 
    begin -- 
      reqL_unguarded(3) <= call_stmt_2533_call_req_0;
      reqL_unguarded(2) <= call_stmt_2550_call_req_0;
      reqL_unguarded(1) <= call_stmt_2567_call_req_0;
      reqL_unguarded(0) <= call_stmt_2581_call_req_0;
      call_stmt_2533_call_ack_0 <= ackL_unguarded(3);
      call_stmt_2550_call_ack_0 <= ackL_unguarded(2);
      call_stmt_2567_call_ack_0 <= ackL_unguarded(1);
      call_stmt_2581_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(3) <= call_stmt_2533_call_req_1;
      reqR_unguarded(2) <= call_stmt_2550_call_req_1;
      reqR_unguarded(1) <= call_stmt_2567_call_req_1;
      reqR_unguarded(0) <= call_stmt_2581_call_req_1;
      call_stmt_2533_call_ack_1 <= ackR_unguarded(3);
      call_stmt_2550_call_ack_1 <= ackR_unguarded(2);
      call_stmt_2567_call_ack_1 <= ackR_unguarded(1);
      call_stmt_2581_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <= write_et_regs_to_teu_2519(0);
      guard_vector(1)  <= write_et_regs_to_teu_2519(0);
      guard_vector(2)  <= write_et_regs_to_teu_2519(0);
      guard_vector(3)  <= write_et_regs_to_teu_2519(0);
      access_iunit_registers_call_group_6_accessRegulator_0: access_regulator_base generic map (name => "access_iunit_registers_call_group_6_accessRegulator_0", num_slots => 1) -- 
        port map (req => reqL_unregulated(0), -- 
          ack => ackL_unregulated(0),
          regulated_req => reqL(0),
          regulated_ack => ackL(0),
          release_req => reqR(0),
          release_ack => ackR(0),
          clk => clk, reset => reset); -- 
      access_iunit_registers_call_group_6_accessRegulator_1: access_regulator_base generic map (name => "access_iunit_registers_call_group_6_accessRegulator_1", num_slots => 1) -- 
        port map (req => reqL_unregulated(1), -- 
          ack => ackL_unregulated(1),
          regulated_req => reqL(1),
          regulated_ack => ackL(1),
          release_req => reqR(1),
          release_ack => ackR(1),
          clk => clk, reset => reset); -- 
      access_iunit_registers_call_group_6_accessRegulator_2: access_regulator_base generic map (name => "access_iunit_registers_call_group_6_accessRegulator_2", num_slots => 1) -- 
        port map (req => reqL_unregulated(2), -- 
          ack => ackL_unregulated(2),
          regulated_req => reqL(2),
          regulated_ack => ackL(2),
          release_req => reqR(2),
          release_ack => ackR(2),
          clk => clk, reset => reset); -- 
      access_iunit_registers_call_group_6_accessRegulator_3: access_regulator_base generic map (name => "access_iunit_registers_call_group_6_accessRegulator_3", num_slots => 1) -- 
        port map (req => reqL_unregulated(3), -- 
          ack => ackL_unregulated(3),
          regulated_req => reqL(3),
          regulated_ack => ackL(3),
          release_req => reqR(3),
          release_ack => ackR(3),
          clk => clk, reset => reset); -- 
      access_iunit_registers_call_group_6_gI: SplitGuardInterface generic map(name => "access_iunit_registers_call_group_6_gI", nreqs => 4, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= write_tbr_command_2529 & write_psr_command_2546 & write_l1_command_2563 & write_l2_command_2577;
      wr_tbr_stat_2533 <= data_out(127 downto 96);
      w_psr_stat_2550 <= data_out(95 downto 64);
      wr_l1_stat_2567 <= data_out(63 downto 32);
      wr_l2_stat_2581 <= data_out(31 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 164,
        owidth => 41,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 3,
        nreqs => 4,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => access_iunit_registers_call_reqs(0),
          ackR => access_iunit_registers_call_acks(0),
          dataR => access_iunit_registers_call_data(40 downto 0),
          tagR => access_iunit_registers_call_tag(2 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 32,
          owidth => 128,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 3,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 4) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => access_iunit_registers_return_acks(0), -- cross-over
          ackL => access_iunit_registers_return_reqs(0), -- cross-over
          dataL => access_iunit_registers_return_data(31 downto 0),
          tagL => access_iunit_registers_return_tag(2 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 6
    -- shared call operator group (7) : call_stmt_2753_call 
    queryDebugger_call_group_7: Block -- 
      signal data_in: std_logic_vector(109 downto 0);
      signal data_out: std_logic_vector(97 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 2);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 2);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => true);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_2753_call_req_0;
      call_stmt_2753_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_2753_call_req_1;
      call_stmt_2753_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <= debug_active_2701(0);
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      queryDebugger_call_group_7_gI: SplitGuardInterface generic map(name => "queryDebugger_call_group_7_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= first_connect_to_gdb_flag_2736 & mc_error_2708 & tv_0_2715 & intr_to_dbg_2720 & annul_to_dbg_2725 & debug_break_on_traps_2331 & dbg_status_to_dbg_2731 & post_et_PC_2615 & post_et_NPC_2621 & post_et_PSR_2597;
      post_et_dbg_ANNUL_2753 <= data_out(97 downto 97);
      post_et_dbg_DBG_IGNORE_BP_2753 <= data_out(96 downto 96);
      post_et_dbg_PC_2753 <= data_out(95 downto 64);
      post_et_dbg_NPC_2753 <= data_out(63 downto 32);
      post_et_dbg_PSR_2753 <= data_out(31 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 110,
        owidth => 110,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => queryDebugger_call_reqs(0),
          ackR => queryDebugger_call_acks(0),
          dataR => queryDebugger_call_data(109 downto 0),
          tagR => queryDebugger_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 98,
          owidth => 98,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => queryDebugger_return_acks(0), -- cross-over
          ackL => queryDebugger_return_reqs(0), -- cross-over
          dataL => queryDebugger_return_data(97 downto 0),
          tagL => queryDebugger_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 7
    volatile_operator_advancePC_3430: advancePC_Volatile port map(i_run_thread => run_thread_2661, i_debug_mode_selected => debug_mode_selected_2331, i_single_step_mode => post_run_single_step_return_2936, i_machine_error => post_run_machine_error_2948, i_exception_found => post_run_exception_found_2940, i_interrupt_found => post_run_interrupt_found_2944, i_annul_instr => post_run_annul_instr_2928, i_annul_next_instr => post_run_next_annul_2932, i_dbg_status => post_run_DBG_STATUS_2871, i_PC => post_run_PC_2895, i_NPC => post_run_NPC_2899, i_NNPC => post_run_NNPC_2903, o_annul_instr => post_adv_ANNUL_INSTR_3023, o_PC => post_adv_PC_3023, o_NPC => post_adv_NPC_3023); 
    -- 
  end Block; -- data_path
  -- 
end ccu_daemon_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity ccu_debug_daemon is -- 
  generic (tag_length : integer); 
  port ( -- 
    ccu_daemon_to_ccu_debug_daemon_pipe_read_req : out  std_logic_vector(0 downto 0);
    ccu_daemon_to_ccu_debug_daemon_pipe_read_ack : in   std_logic_vector(0 downto 0);
    ccu_daemon_to_ccu_debug_daemon_pipe_read_data : in   std_logic_vector(32 downto 0);
    debug_interface_to_ccu_pipe_read_req : out  std_logic_vector(0 downto 0);
    debug_interface_to_ccu_pipe_read_ack : in   std_logic_vector(0 downto 0);
    debug_interface_to_ccu_pipe_read_data : in   std_logic_vector(32 downto 0);
    CCU_TO_DBG_MODE_SIG : in std_logic_vector(3 downto 0);
    init_npc : in std_logic_vector(31 downto 0);
    init_pc : in std_logic_vector(31 downto 0);
    init_psr : in std_logic_vector(31 downto 0);
    DBG_TO_CCU_RESET_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
    DBG_TO_CCU_RESET_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
    DBG_TO_CCU_RESET_SIG_pipe_write_data : out  std_logic_vector(4 downto 0);
    DBG_TO_CCU_INIT_NPC_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
    DBG_TO_CCU_INIT_NPC_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
    DBG_TO_CCU_INIT_NPC_SIG_pipe_write_data : out  std_logic_vector(31 downto 0);
    DBG_TO_CCU_INIT_PC_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
    DBG_TO_CCU_INIT_PC_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
    DBG_TO_CCU_INIT_PC_SIG_pipe_write_data : out  std_logic_vector(31 downto 0);
    DBG_TO_CCU_INIT_PSR_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
    DBG_TO_CCU_INIT_PSR_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
    DBG_TO_CCU_INIT_PSR_SIG_pipe_write_data : out  std_logic_vector(31 downto 0);
    ccu_debug_daemon_to_ccu_daemon_pipe_write_req : out  std_logic_vector(0 downto 0);
    ccu_debug_daemon_to_ccu_daemon_pipe_write_ack : in   std_logic_vector(0 downto 0);
    ccu_debug_daemon_to_ccu_daemon_pipe_write_data : out  std_logic_vector(31 downto 0);
    ccu_to_debug_interface_pipe_write_req : out  std_logic_vector(0 downto 0);
    ccu_to_debug_interface_pipe_write_ack : in   std_logic_vector(0 downto 0);
    ccu_to_debug_interface_pipe_write_data : out  std_logic_vector(32 downto 0);
    init_npc_pipe_write_req : out  std_logic_vector(0 downto 0);
    init_npc_pipe_write_ack : in   std_logic_vector(0 downto 0);
    init_npc_pipe_write_data : out  std_logic_vector(31 downto 0);
    init_pc_pipe_write_req : out  std_logic_vector(0 downto 0);
    init_pc_pipe_write_ack : in   std_logic_vector(0 downto 0);
    init_pc_pipe_write_data : out  std_logic_vector(31 downto 0);
    init_psr_pipe_write_req : out  std_logic_vector(0 downto 0);
    init_psr_pipe_write_ack : in   std_logic_vector(0 downto 0);
    init_psr_pipe_write_data : out  std_logic_vector(31 downto 0);
    read_fpunit_register_call_reqs : out  std_logic_vector(0 downto 0);
    read_fpunit_register_call_acks : in   std_logic_vector(0 downto 0);
    read_fpunit_register_call_data : out  std_logic_vector(5 downto 0);
    read_fpunit_register_call_tag  :  out  std_logic_vector(0 downto 0);
    read_fpunit_register_return_reqs : out  std_logic_vector(0 downto 0);
    read_fpunit_register_return_acks : in   std_logic_vector(0 downto 0);
    read_fpunit_register_return_data : in   std_logic_vector(31 downto 0);
    read_fpunit_register_return_tag :  in   std_logic_vector(0 downto 0);
    write_iunit_register_call_reqs : out  std_logic_vector(0 downto 0);
    write_iunit_register_call_acks : in   std_logic_vector(0 downto 0);
    write_iunit_register_call_data : out  std_logic_vector(39 downto 0);
    write_iunit_register_call_tag  :  out  std_logic_vector(0 downto 0);
    write_iunit_register_return_reqs : out  std_logic_vector(0 downto 0);
    write_iunit_register_return_acks : in   std_logic_vector(0 downto 0);
    write_iunit_register_return_data : in   std_logic_vector(0 downto 0);
    write_iunit_register_return_tag :  in   std_logic_vector(0 downto 0);
    read_iunit_register_call_reqs : out  std_logic_vector(0 downto 0);
    read_iunit_register_call_acks : in   std_logic_vector(0 downto 0);
    read_iunit_register_call_data : out  std_logic_vector(7 downto 0);
    read_iunit_register_call_tag  :  out  std_logic_vector(0 downto 0);
    read_iunit_register_return_reqs : out  std_logic_vector(0 downto 0);
    read_iunit_register_return_acks : in   std_logic_vector(0 downto 0);
    read_iunit_register_return_data : in   std_logic_vector(31 downto 0);
    read_iunit_register_return_tag :  in   std_logic_vector(0 downto 0);
    write_fpunit_register_call_reqs : out  std_logic_vector(0 downto 0);
    write_fpunit_register_call_acks : in   std_logic_vector(0 downto 0);
    write_fpunit_register_call_data : out  std_logic_vector(37 downto 0);
    write_fpunit_register_call_tag  :  out  std_logic_vector(0 downto 0);
    write_fpunit_register_return_reqs : out  std_logic_vector(0 downto 0);
    write_fpunit_register_return_acks : in   std_logic_vector(0 downto 0);
    write_fpunit_register_return_data : in   std_logic_vector(0 downto 0);
    write_fpunit_register_return_tag :  in   std_logic_vector(0 downto 0);
    read_from_memory_call_reqs : out  std_logic_vector(0 downto 0);
    read_from_memory_call_acks : in   std_logic_vector(0 downto 0);
    read_from_memory_call_data : out  std_logic_vector(39 downto 0);
    read_from_memory_call_tag  :  out  std_logic_vector(0 downto 0);
    read_from_memory_return_reqs : out  std_logic_vector(0 downto 0);
    read_from_memory_return_acks : in   std_logic_vector(0 downto 0);
    read_from_memory_return_data : in   std_logic_vector(32 downto 0);
    read_from_memory_return_tag :  in   std_logic_vector(0 downto 0);
    write_to_memory_call_reqs : out  std_logic_vector(0 downto 0);
    write_to_memory_call_acks : in   std_logic_vector(0 downto 0);
    write_to_memory_call_data : out  std_logic_vector(71 downto 0);
    write_to_memory_call_tag  :  out  std_logic_vector(0 downto 0);
    write_to_memory_return_reqs : out  std_logic_vector(0 downto 0);
    write_to_memory_return_acks : in   std_logic_vector(0 downto 0);
    write_to_memory_return_data : in   std_logic_vector(0 downto 0);
    write_to_memory_return_tag :  in   std_logic_vector(0 downto 0);
    send_ccu_to_teu_debug_call_reqs : out  std_logic_vector(0 downto 0);
    send_ccu_to_teu_debug_call_acks : in   std_logic_vector(0 downto 0);
    send_ccu_to_teu_debug_call_data : out  std_logic_vector(38 downto 0);
    send_ccu_to_teu_debug_call_tag  :  out  std_logic_vector(0 downto 0);
    send_ccu_to_teu_debug_return_reqs : out  std_logic_vector(0 downto 0);
    send_ccu_to_teu_debug_return_acks : in   std_logic_vector(0 downto 0);
    send_ccu_to_teu_debug_return_data : in   std_logic_vector(0 downto 0);
    send_ccu_to_teu_debug_return_tag :  in   std_logic_vector(0 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity ccu_debug_daemon;
architecture ccu_debug_daemon_arch of ccu_debug_daemon is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  -- output port buffer signals
  signal ccu_debug_daemon_CP_1447_start: Boolean;
  signal ccu_debug_daemon_CP_1447_symbol: Boolean;
  -- volatile/operator module components. 
  component decode_debug_command_Volatile is -- 
    port ( -- 
      valid_debug_cmd : in  std_logic_vector(0 downto 0);
      length : in  std_logic_vector(7 downto 0);
      op_code : in  std_logic_vector(7 downto 0);
      connect_cmd : out  std_logic_vector(0 downto 0);
      resume_cmd : out  std_logic_vector(0 downto 0);
      detach_cmd : out  std_logic_vector(0 downto 0);
      kill_cmd : out  std_logic_vector(0 downto 0);
      read_iu_reg_cmd : out  std_logic_vector(0 downto 0);
      read_fp_reg_cmd : out  std_logic_vector(0 downto 0);
      read_csr_cmd : out  std_logic_vector(0 downto 0);
      read_mem_cmd : out  std_logic_vector(0 downto 0);
      write_iu_reg_cmd : out  std_logic_vector(0 downto 0);
      write_fp_reg_cmd : out  std_logic_vector(0 downto 0);
      write_mem_cmd : out  std_logic_vector(0 downto 0);
      set_break_cmd : out  std_logic_vector(0 downto 0);
      set_watch_cmd : out  std_logic_vector(0 downto 0);
      remove_break_cmd : out  std_logic_vector(0 downto 0);
      remove_watch_cmd : out  std_logic_vector(0 downto 0);
      write_reset_cmd : out  std_logic_vector(0 downto 0);
      write_init_pc_cmd : out  std_logic_vector(0 downto 0);
      write_init_npc_cmd : out  std_logic_vector(0 downto 0);
      write_init_psr_cmd : out  std_logic_vector(0 downto 0);
      read_mode_cmd : out  std_logic_vector(0 downto 0);
      read_init_pc_cmd : out  std_logic_vector(0 downto 0);
      read_init_npc_cmd : out  std_logic_vector(0 downto 0);
      read_init_psr_cmd : out  std_logic_vector(0 downto 0);
      illegal_cmd : out  std_logic_vector(0 downto 0);
      single_word_cmd : out  std_logic_vector(0 downto 0);
      two_word_cmd : out  std_logic_vector(0 downto 0);
      three_word_cmd : out  std_logic_vector(0 downto 0);
      cmd_len_error : out  std_logic_vector(0 downto 0)-- 
    );
    -- 
  end component; 
  component read_fpunit_register is -- 
    generic (tag_length : integer); 
    port ( -- 
      fsr_flag : in  std_logic_vector(0 downto 0);
      reg_id : in  std_logic_vector(4 downto 0);
      ret_val : out  std_logic_vector(31 downto 0);
      access_fpunit_registers_call_reqs : out  std_logic_vector(0 downto 0);
      access_fpunit_registers_call_acks : in   std_logic_vector(0 downto 0);
      access_fpunit_registers_call_data : out  std_logic_vector(38 downto 0);
      access_fpunit_registers_call_tag  :  out  std_logic_vector(0 downto 0);
      access_fpunit_registers_return_reqs : out  std_logic_vector(0 downto 0);
      access_fpunit_registers_return_acks : in   std_logic_vector(0 downto 0);
      access_fpunit_registers_return_data : in   std_logic_vector(32 downto 0);
      access_fpunit_registers_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component write_iunit_register is -- 
    generic (tag_length : integer); 
    port ( -- 
      reg_type : in  std_logic_vector(2 downto 0);
      reg_id : in  std_logic_vector(4 downto 0);
      reg_val : in  std_logic_vector(31 downto 0);
      ignore : out  std_logic_vector(0 downto 0);
      access_iunit_registers_call_reqs : out  std_logic_vector(0 downto 0);
      access_iunit_registers_call_acks : in   std_logic_vector(0 downto 0);
      access_iunit_registers_call_data : out  std_logic_vector(40 downto 0);
      access_iunit_registers_call_tag  :  out  std_logic_vector(2 downto 0);
      access_iunit_registers_return_reqs : out  std_logic_vector(0 downto 0);
      access_iunit_registers_return_acks : in   std_logic_vector(0 downto 0);
      access_iunit_registers_return_data : in   std_logic_vector(31 downto 0);
      access_iunit_registers_return_tag :  in   std_logic_vector(2 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component read_iunit_register is -- 
    generic (tag_length : integer); 
    port ( -- 
      reg_type : in  std_logic_vector(2 downto 0);
      reg_id : in  std_logic_vector(4 downto 0);
      ret_val : out  std_logic_vector(31 downto 0);
      access_iunit_registers_call_reqs : out  std_logic_vector(0 downto 0);
      access_iunit_registers_call_acks : in   std_logic_vector(0 downto 0);
      access_iunit_registers_call_data : out  std_logic_vector(40 downto 0);
      access_iunit_registers_call_tag  :  out  std_logic_vector(2 downto 0);
      access_iunit_registers_return_reqs : out  std_logic_vector(0 downto 0);
      access_iunit_registers_return_acks : in   std_logic_vector(0 downto 0);
      access_iunit_registers_return_data : in   std_logic_vector(31 downto 0);
      access_iunit_registers_return_tag :  in   std_logic_vector(2 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component write_fpunit_register is -- 
    generic (tag_length : integer); 
    port ( -- 
      fsr_flag : in  std_logic_vector(0 downto 0);
      reg_id : in  std_logic_vector(4 downto 0);
      reg_val : in  std_logic_vector(31 downto 0);
      err : out  std_logic_vector(0 downto 0);
      access_fpunit_registers_call_reqs : out  std_logic_vector(0 downto 0);
      access_fpunit_registers_call_acks : in   std_logic_vector(0 downto 0);
      access_fpunit_registers_call_data : out  std_logic_vector(38 downto 0);
      access_fpunit_registers_call_tag  :  out  std_logic_vector(0 downto 0);
      access_fpunit_registers_return_reqs : out  std_logic_vector(0 downto 0);
      access_fpunit_registers_return_acks : in   std_logic_vector(0 downto 0);
      access_fpunit_registers_return_data : in   std_logic_vector(32 downto 0);
      access_fpunit_registers_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component read_from_memory is -- 
    generic (tag_length : integer); 
    port ( -- 
      asi : in  std_logic_vector(7 downto 0);
      addr : in  std_logic_vector(31 downto 0);
      err_flag : out  std_logic_vector(0 downto 0);
      data : out  std_logic_vector(31 downto 0);
      access_memory_call_reqs : out  std_logic_vector(0 downto 0);
      access_memory_call_acks : in   std_logic_vector(0 downto 0);
      access_memory_call_data : out  std_logic_vector(72 downto 0);
      access_memory_call_tag  :  out  std_logic_vector(0 downto 0);
      access_memory_return_reqs : out  std_logic_vector(0 downto 0);
      access_memory_return_acks : in   std_logic_vector(0 downto 0);
      access_memory_return_data : in   std_logic_vector(32 downto 0);
      access_memory_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component write_to_memory is -- 
    generic (tag_length : integer); 
    port ( -- 
      asi : in  std_logic_vector(7 downto 0);
      addr : in  std_logic_vector(31 downto 0);
      data : in  std_logic_vector(31 downto 0);
      err_flag : out  std_logic_vector(0 downto 0);
      access_memory_call_reqs : out  std_logic_vector(0 downto 0);
      access_memory_call_acks : in   std_logic_vector(0 downto 0);
      access_memory_call_data : out  std_logic_vector(72 downto 0);
      access_memory_call_tag  :  out  std_logic_vector(0 downto 0);
      access_memory_return_reqs : out  std_logic_vector(0 downto 0);
      access_memory_return_acks : in   std_logic_vector(0 downto 0);
      access_memory_return_data : in   std_logic_vector(32 downto 0);
      access_memory_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component send_ccu_to_teu_debug is -- 
    generic (tag_length : integer); 
    port ( -- 
      opcode : in  std_logic_vector(2 downto 0);
      watch_reg_type : in  std_logic_vector(1 downto 0);
      reg_id : in  std_logic_vector(1 downto 0);
      reg_val : in  std_logic_vector(31 downto 0);
      err : out  std_logic_vector(0 downto 0);
      access_ccu_to_teu_debug_call_reqs : out  std_logic_vector(0 downto 0);
      access_ccu_to_teu_debug_call_acks : in   std_logic_vector(0 downto 0);
      access_ccu_to_teu_debug_call_data : out  std_logic_vector(39 downto 0);
      access_ccu_to_teu_debug_call_tag  :  out  std_logic_vector(0 downto 0);
      access_ccu_to_teu_debug_return_reqs : out  std_logic_vector(0 downto 0);
      access_ccu_to_teu_debug_return_acks : in   std_logic_vector(0 downto 0);
      access_ccu_to_teu_debug_return_data : in   std_logic_vector(0 downto 0);
      access_ccu_to_teu_debug_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component construct_send_ccu_to_teu_args_Volatile is -- 
    port ( -- 
      set_break_cmd : in  std_logic_vector(0 downto 0);
      set_watch_cmd : in  std_logic_vector(0 downto 0);
      remove_break_cmd : in  std_logic_vector(0 downto 0);
      remove_watch_cmd : in  std_logic_vector(0 downto 0);
      kill_cmd : in  std_logic_vector(0 downto 0);
      cmd_data : in  std_logic_vector(15 downto 0);
      second_word : in  std_logic_vector(31 downto 0);
      call_flag : out  std_logic_vector(0 downto 0);
      arg0 : out  std_logic_vector(2 downto 0);
      arg1 : out  std_logic_vector(1 downto 0);
      arg2 : out  std_logic_vector(1 downto 0);
      arg3 : out  std_logic_vector(31 downto 0)-- 
    );
    -- 
  end component; 
  -- links between control-path and data-path
  signal OR_u1_u1_4281_inst_req_1 : boolean;
  signal WPIPE_ccu_to_debug_interface_3985_inst_req_1 : boolean;
  signal slice_4289_inst_ack_0 : boolean;
  signal WPIPE_ccu_to_debug_interface_3985_inst_ack_1 : boolean;
  signal WPIPE_init_pc_4296_inst_ack_1 : boolean;
  signal OR_u1_u1_4281_inst_ack_1 : boolean;
  signal WPIPE_ccu_to_debug_interface_3985_inst_req_0 : boolean;
  signal WPIPE_init_pc_4296_inst_req_1 : boolean;
  signal WPIPE_init_pc_4296_inst_ack_0 : boolean;
  signal if_stmt_4283_branch_ack_0 : boolean;
  signal if_stmt_4292_branch_ack_0 : boolean;
  signal if_stmt_4283_branch_req_0 : boolean;
  signal WPIPE_ccu_to_debug_interface_3985_inst_ack_0 : boolean;
  signal if_stmt_4283_branch_ack_1 : boolean;
  signal phi_stmt_3955_req_0 : boolean;
  signal WPIPE_init_pc_4296_inst_req_0 : boolean;
  signal slice_4289_inst_ack_1 : boolean;
  signal slice_4289_inst_req_1 : boolean;
  signal OR_u1_u1_4281_inst_req_0 : boolean;
  signal if_stmt_4292_branch_ack_1 : boolean;
  signal OR_u1_u1_4281_inst_ack_0 : boolean;
  signal slice_4289_inst_req_0 : boolean;
  signal if_stmt_4303_branch_ack_1 : boolean;
  signal if_stmt_4303_branch_ack_0 : boolean;
  signal WPIPE_ccu_to_debug_interface_4904_inst_ack_0 : boolean;
  signal WPIPE_ccu_to_debug_interface_4904_inst_req_0 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_inst_req_0 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_inst_ack_0 : boolean;
  signal if_stmt_4292_branch_req_0 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_inst_ack_1 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_inst_req_1 : boolean;
  signal phi_stmt_3967_req_0 : boolean;
  signal WPIPE_init_npc_4307_inst_req_1 : boolean;
  signal WPIPE_init_npc_4307_inst_ack_1 : boolean;
  signal WPIPE_DBG_TO_CCU_RESET_SIG_4287_inst_ack_1 : boolean;
  signal WPIPE_DBG_TO_CCU_RESET_SIG_4287_inst_req_1 : boolean;
  signal WPIPE_ccu_to_debug_interface_4904_inst_req_1 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_inst_ack_0 : boolean;
  signal WPIPE_init_npc_4307_inst_req_0 : boolean;
  signal phi_stmt_3971_req_0 : boolean;
  signal WPIPE_init_npc_4307_inst_ack_0 : boolean;
  signal RPIPE_debug_interface_to_ccu_3950_inst_req_0 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_inst_req_0 : boolean;
  signal WPIPE_DBG_TO_CCU_RESET_SIG_4287_inst_ack_0 : boolean;
  signal WPIPE_DBG_TO_CCU_RESET_SIG_4287_inst_req_0 : boolean;
  signal if_stmt_4303_branch_req_0 : boolean;
  signal WPIPE_ccu_to_debug_interface_4904_inst_ack_1 : boolean;
  signal WPIPE_ccu_to_debug_interface_4911_inst_req_1 : boolean;
  signal RPIPE_debug_interface_to_ccu_3950_inst_req_1 : boolean;
  signal phi_stmt_3959_req_0 : boolean;
  signal RPIPE_debug_interface_to_ccu_3950_inst_ack_0 : boolean;
  signal phi_stmt_3946_req_1 : boolean;
  signal RPIPE_debug_interface_to_ccu_3950_inst_ack_1 : boolean;
  signal phi_stmt_3942_req_0 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_inst_req_1 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_inst_ack_1 : boolean;
  signal nI_4854_4848_buf_ack_1 : boolean;
  signal if_stmt_4314_branch_req_0 : boolean;
  signal nI_4854_4848_buf_req_1 : boolean;
  signal if_stmt_4314_branch_ack_1 : boolean;
  signal if_stmt_4314_branch_ack_0 : boolean;
  signal phi_stmt_3946_req_0 : boolean;
  signal WPIPE_init_psr_4318_inst_req_0 : boolean;
  signal WPIPE_init_psr_4318_inst_ack_0 : boolean;
  signal WPIPE_init_psr_4318_inst_req_1 : boolean;
  signal WPIPE_init_psr_4318_inst_ack_1 : boolean;
  signal do_while_stmt_4843_branch_ack_1 : boolean;
  signal do_while_stmt_4843_branch_ack_0 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_inst_req_0 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_inst_ack_0 : boolean;
  signal nI_4854_4848_buf_ack_0 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_inst_req_1 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_inst_ack_1 : boolean;
  signal nI_4854_4848_buf_req_0 : boolean;
  signal phi_stmt_3963_req_0 : boolean;
  signal WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_inst_ack_1 : boolean;
  signal WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_inst_req_1 : boolean;
  signal if_stmt_4325_branch_req_0 : boolean;
  signal if_stmt_4325_branch_ack_1 : boolean;
  signal if_stmt_4325_branch_ack_0 : boolean;
  signal W_rinit_pc_4329_inst_req_0 : boolean;
  signal W_rinit_pc_4329_inst_ack_0 : boolean;
  signal W_rinit_pc_4329_inst_req_1 : boolean;
  signal WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_inst_ack_0 : boolean;
  signal W_rinit_pc_4329_inst_ack_1 : boolean;
  signal WPIPE_ccu_to_debug_interface_4911_inst_ack_0 : boolean;
  signal phi_stmt_3951_req_0 : boolean;
  signal WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_inst_req_0 : boolean;
  signal WPIPE_ccu_to_debug_interface_4911_inst_req_0 : boolean;
  signal WPIPE_ccu_to_debug_interface_4911_inst_ack_1 : boolean;
  signal if_stmt_4333_branch_req_0 : boolean;
  signal if_stmt_4333_branch_ack_1 : boolean;
  signal if_stmt_4333_branch_ack_0 : boolean;
  signal W_rinit_npc_4337_inst_req_0 : boolean;
  signal W_rinit_npc_4337_inst_ack_0 : boolean;
  signal W_rinit_npc_4337_inst_req_1 : boolean;
  signal W_rinit_npc_4337_inst_ack_1 : boolean;
  signal if_stmt_4341_branch_req_0 : boolean;
  signal if_stmt_4341_branch_ack_1 : boolean;
  signal if_stmt_4341_branch_ack_0 : boolean;
  signal W_rinit_psr_4345_inst_req_0 : boolean;
  signal W_rinit_psr_4345_inst_ack_0 : boolean;
  signal W_rinit_psr_4345_inst_req_1 : boolean;
  signal W_rinit_psr_4345_inst_ack_1 : boolean;
  signal if_stmt_4349_branch_req_0 : boolean;
  signal if_stmt_4349_branch_ack_1 : boolean;
  signal if_stmt_4349_branch_ack_0 : boolean;
  signal W_mode_sig_4353_inst_req_0 : boolean;
  signal W_mode_sig_4353_inst_ack_0 : boolean;
  signal W_mode_sig_4353_inst_req_1 : boolean;
  signal W_mode_sig_4353_inst_ack_1 : boolean;
  signal CONCAT_u24_u32_4363_inst_req_0 : boolean;
  signal CONCAT_u24_u32_4363_inst_ack_0 : boolean;
  signal CONCAT_u24_u32_4363_inst_req_1 : boolean;
  signal CONCAT_u24_u32_4363_inst_ack_1 : boolean;
  signal OR_u32_u32_4385_inst_req_0 : boolean;
  signal OR_u32_u32_4385_inst_ack_0 : boolean;
  signal OR_u32_u32_4385_inst_req_1 : boolean;
  signal OR_u32_u32_4385_inst_ack_1 : boolean;
  signal if_stmt_4387_branch_req_0 : boolean;
  signal if_stmt_4387_branch_ack_1 : boolean;
  signal if_stmt_4387_branch_ack_0 : boolean;
  signal call_stmt_4440_call_req_0 : boolean;
  signal call_stmt_4440_call_ack_0 : boolean;
  signal call_stmt_4440_call_req_1 : boolean;
  signal call_stmt_4440_call_ack_1 : boolean;
  signal if_stmt_4450_branch_req_0 : boolean;
  signal if_stmt_4450_branch_ack_1 : boolean;
  signal if_stmt_4450_branch_ack_0 : boolean;
  signal call_stmt_4465_call_req_0 : boolean;
  signal call_stmt_4465_call_ack_0 : boolean;
  signal call_stmt_4465_call_req_1 : boolean;
  signal call_stmt_4465_call_ack_1 : boolean;
  signal if_stmt_4471_branch_req_0 : boolean;
  signal if_stmt_4471_branch_ack_1 : boolean;
  signal if_stmt_4471_branch_ack_0 : boolean;
  signal call_stmt_4525_call_req_0 : boolean;
  signal call_stmt_4525_call_ack_0 : boolean;
  signal call_stmt_4525_call_req_1 : boolean;
  signal call_stmt_4525_call_ack_1 : boolean;
  signal if_stmt_4536_branch_req_0 : boolean;
  signal if_stmt_4536_branch_ack_1 : boolean;
  signal if_stmt_4536_branch_ack_0 : boolean;
  signal call_stmt_4552_call_req_0 : boolean;
  signal call_stmt_4552_call_ack_0 : boolean;
  signal call_stmt_4552_call_req_1 : boolean;
  signal call_stmt_4552_call_ack_1 : boolean;
  signal if_stmt_4558_branch_req_0 : boolean;
  signal if_stmt_4558_branch_ack_1 : boolean;
  signal if_stmt_4558_branch_ack_0 : boolean;
  signal call_stmt_4570_call_req_0 : boolean;
  signal call_stmt_4570_call_ack_0 : boolean;
  signal call_stmt_4570_call_req_1 : boolean;
  signal call_stmt_4570_call_ack_1 : boolean;
  signal if_stmt_4576_branch_req_0 : boolean;
  signal if_stmt_4576_branch_ack_1 : boolean;
  signal if_stmt_4576_branch_ack_0 : boolean;
  signal call_stmt_4588_call_req_0 : boolean;
  signal call_stmt_4588_call_ack_0 : boolean;
  signal call_stmt_4588_call_req_1 : boolean;
  signal call_stmt_4588_call_ack_1 : boolean;
  signal call_stmt_4619_call_req_0 : boolean;
  signal call_stmt_4619_call_ack_0 : boolean;
  signal call_stmt_4619_call_req_1 : boolean;
  signal call_stmt_4619_call_ack_1 : boolean;
  signal if_stmt_4827_branch_req_0 : boolean;
  signal if_stmt_4827_branch_ack_1 : boolean;
  signal if_stmt_4827_branch_ack_0 : boolean;
  signal if_stmt_4839_branch_req_0 : boolean;
  signal if_stmt_4839_branch_ack_1 : boolean;
  signal if_stmt_4839_branch_ack_0 : boolean;
  signal do_while_stmt_4843_branch_req_0 : boolean;
  signal phi_stmt_4845_req_1 : boolean;
  signal phi_stmt_4845_req_0 : boolean;
  signal phi_stmt_4845_ack_0 : boolean;
  signal get_from_dbg_4223_3974_buf_req_0 : boolean;
  signal get_from_dbg_4223_3974_buf_ack_0 : boolean;
  signal get_from_dbg_4223_3974_buf_req_1 : boolean;
  signal get_from_dbg_4223_3974_buf_ack_1 : boolean;
  signal phi_stmt_3971_req_1 : boolean;
  signal next_second_word_4247_3962_buf_req_0 : boolean;
  signal next_second_word_4247_3962_buf_ack_0 : boolean;
  signal next_second_word_4247_3962_buf_req_1 : boolean;
  signal next_second_word_4247_3962_buf_ack_1 : boolean;
  signal phi_stmt_3959_req_1 : boolean;
  signal nCCD_STATE_4184_3954_buf_req_0 : boolean;
  signal nCCD_STATE_4184_3954_buf_ack_0 : boolean;
  signal nCCD_STATE_4184_3954_buf_req_1 : boolean;
  signal nCCD_STATE_4184_3954_buf_ack_1 : boolean;
  signal phi_stmt_3951_req_1 : boolean;
  signal RPIPE_ccu_daemon_to_ccu_debug_daemon_3945_inst_req_0 : boolean;
  signal RPIPE_ccu_daemon_to_ccu_debug_daemon_3945_inst_ack_0 : boolean;
  signal RPIPE_ccu_daemon_to_ccu_debug_daemon_3945_inst_req_1 : boolean;
  signal RPIPE_ccu_daemon_to_ccu_debug_daemon_3945_inst_ack_1 : boolean;
  signal phi_stmt_3942_req_1 : boolean;
  signal next_third_word_4257_3966_buf_req_0 : boolean;
  signal next_third_word_4257_3966_buf_ack_0 : boolean;
  signal next_third_word_4257_3966_buf_req_1 : boolean;
  signal next_third_word_4257_3966_buf_ack_1 : boolean;
  signal phi_stmt_3963_req_1 : boolean;
  signal next_fourth_word_4267_3970_buf_req_0 : boolean;
  signal next_fourth_word_4267_3970_buf_ack_0 : boolean;
  signal next_fourth_word_4267_3970_buf_req_1 : boolean;
  signal next_fourth_word_4267_3970_buf_ack_1 : boolean;
  signal phi_stmt_3967_req_1 : boolean;
  signal next_first_word_4237_3958_buf_req_0 : boolean;
  signal next_first_word_4237_3958_buf_ack_0 : boolean;
  signal next_first_word_4237_3958_buf_req_1 : boolean;
  signal next_first_word_4237_3958_buf_ack_1 : boolean;
  signal phi_stmt_3955_req_1 : boolean;
  signal phi_stmt_3942_ack_0 : boolean;
  signal phi_stmt_3946_ack_0 : boolean;
  signal phi_stmt_3951_ack_0 : boolean;
  signal phi_stmt_3955_ack_0 : boolean;
  signal phi_stmt_3959_ack_0 : boolean;
  signal phi_stmt_3963_ack_0 : boolean;
  signal phi_stmt_3967_ack_0 : boolean;
  signal phi_stmt_3971_ack_0 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "ccu_debug_daemon_input_buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      data_width => tag_length + 0) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(tag_length-1 downto 0) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length-1 downto 0);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  ccu_debug_daemon_CP_1447_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "ccu_debug_daemon_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 0) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(tag_length-1 downto 0) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length-1 downto 0);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= ccu_debug_daemon_CP_1447_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= ccu_debug_daemon_CP_1447_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= ccu_debug_daemon_CP_1447_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  ccu_debug_daemon_CP_1447: Block -- control-path 
    signal ccu_debug_daemon_CP_1447_elements: BooleanArray(184 downto 0);
    -- 
  begin -- 
    ccu_debug_daemon_CP_1447_elements(0) <= ccu_debug_daemon_CP_1447_start;
    ccu_debug_daemon_CP_1447_symbol <= ccu_debug_daemon_CP_1447_elements(1);
    -- CP-element group 0:  branch  transition  place  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	142 
    -- CP-element group 0:  members (5) 
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 branch_block_stmt_3940/merge_stmt_3941__entry__
      -- CP-element group 0: 	 branch_block_stmt_3940/branch_block_stmt_3940__entry__
      -- CP-element group 0: 	 branch_block_stmt_3940/$entry
      -- CP-element group 0: 	 branch_block_stmt_3940/merge_stmt_3941_dead_link/$entry
      -- 
    -- CP-element group 1:  transition  place  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 $exit
      -- CP-element group 1: 	 branch_block_stmt_3940/branch_block_stmt_3940__exit__
      -- CP-element group 1: 	 branch_block_stmt_3940/$exit
      -- 
    ccu_debug_daemon_CP_1447_elements(1) <= false; 
    -- CP-element group 2:  merge  fork  transition  place  output  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	184 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	18 
    -- CP-element group 2: 	20 
    -- CP-element group 2: 	21 
    -- CP-element group 2:  members (12) 
      -- CP-element group 2: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/OR_u1_u1_4281_Update/cr
      -- CP-element group 2: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/WPIPE_ccu_to_debug_interface_3985_sample_start_
      -- CP-element group 2: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/$entry
      -- CP-element group 2: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/OR_u1_u1_4281_Update/$entry
      -- CP-element group 2: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/WPIPE_ccu_to_debug_interface_3985_Sample/req
      -- CP-element group 2: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282__entry__
      -- CP-element group 2: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/OR_u1_u1_4281_Sample/$entry
      -- CP-element group 2: 	 branch_block_stmt_3940/merge_stmt_3941__exit__
      -- CP-element group 2: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/OR_u1_u1_4281_Sample/rr
      -- CP-element group 2: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/OR_u1_u1_4281_sample_start_
      -- CP-element group 2: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/WPIPE_ccu_to_debug_interface_3985_Sample/$entry
      -- CP-element group 2: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/OR_u1_u1_4281_update_start_
      -- 
    cr_1525_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1525_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(2), ack => OR_u1_u1_4281_inst_req_1); -- 
    req_1506_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1506_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(2), ack => WPIPE_ccu_to_debug_interface_3985_inst_req_0); -- 
    rr_1520_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1520_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(2), ack => OR_u1_u1_4281_inst_req_0); -- 
    ccu_debug_daemon_CP_1447_elements(2) <= ccu_debug_daemon_CP_1447_elements(184);
    -- CP-element group 3:  merge  branch  transition  place  output  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	24 
    -- CP-element group 3: 	28 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	29 
    -- CP-element group 3: 	30 
    -- CP-element group 3:  members (23) 
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/AND_u1_u1_4295/AND_u1_u1_4295_inputs/$entry
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/AND_u1_u1_4295/AND_u1_u1_4295_inputs/$exit
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292__entry__
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/AND_u1_u1_4295/SplitProtocol/Sample/ra
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_if_link/$entry
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/AND_u1_u1_4295/SplitProtocol/Sample/rr
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/AND_u1_u1_4295/SplitProtocol/Update/$entry
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/AND_u1_u1_4295/SplitProtocol/Update/$exit
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4283__exit__
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/AND_u1_u1_4295/$entry
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_else_link/$entry
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/AND_u1_u1_4295/SplitProtocol/$exit
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/AND_u1_u1_4295/SplitProtocol/Sample/$exit
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/AND_u1_u1_4295/SplitProtocol/$entry
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/AND_u1_u1_4295/SplitProtocol/Update/cr
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/$exit
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/$entry
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/branch_req
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_dead_link/$entry
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/AND_u1_u1_4295/SplitProtocol/Update/ca
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/AND_u1_u1_4295/SplitProtocol/Sample/$entry
      -- CP-element group 3: 	 branch_block_stmt_3940/AND_u1_u1_4295_place
      -- CP-element group 3: 	 branch_block_stmt_3940/if_stmt_4292_eval_test/AND_u1_u1_4295/$exit
      -- 
    branch_req_1622_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_1622_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(3), ack => if_stmt_4292_branch_req_0); -- 
    ccu_debug_daemon_CP_1447_elements(3) <= OrReduce(ccu_debug_daemon_CP_1447_elements(24) & ccu_debug_daemon_CP_1447_elements(28));
    -- CP-element group 4:  merge  branch  transition  place  output  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	30 
    -- CP-element group 4: 	35 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	36 
    -- CP-element group 4: 	37 
    -- CP-element group 4:  members (23) 
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_dead_link/$entry
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4292__exit__
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303__entry__
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/AND_u1_u1_4306/$entry
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/AND_u1_u1_4306/SplitProtocol/Sample/ra
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/$entry
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/$exit
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/AND_u1_u1_4306/SplitProtocol/Sample/$entry
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/AND_u1_u1_4306/$exit
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_if_link/$entry
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/AND_u1_u1_4306/SplitProtocol/$entry
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/AND_u1_u1_4306/AND_u1_u1_4306_inputs/$entry
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/AND_u1_u1_4306/SplitProtocol/Update/$entry
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/AND_u1_u1_4306/SplitProtocol/Sample/$exit
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_else_link/$entry
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/AND_u1_u1_4306/SplitProtocol/$exit
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/AND_u1_u1_4306/AND_u1_u1_4306_inputs/$exit
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/AND_u1_u1_4306/SplitProtocol/Update/$exit
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/AND_u1_u1_4306/SplitProtocol/Sample/rr
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/branch_req
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/AND_u1_u1_4306/SplitProtocol/Update/cr
      -- CP-element group 4: 	 branch_block_stmt_3940/if_stmt_4303_eval_test/AND_u1_u1_4306/SplitProtocol/Update/ca
      -- CP-element group 4: 	 branch_block_stmt_3940/AND_u1_u1_4306_place
      -- 
    branch_req_1691_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_1691_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(4), ack => if_stmt_4303_branch_req_0); -- 
    ccu_debug_daemon_CP_1447_elements(4) <= OrReduce(ccu_debug_daemon_CP_1447_elements(30) & ccu_debug_daemon_CP_1447_elements(35));
    -- CP-element group 5:  merge  branch  transition  place  output  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	37 
    -- CP-element group 5: 	42 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	43 
    -- CP-element group 5: 	44 
    -- CP-element group 5:  members (23) 
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4303__exit__
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314__entry__
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_dead_link/$entry
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/$entry
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/$exit
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/AND_u1_u1_4317/$entry
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/AND_u1_u1_4317/$exit
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/AND_u1_u1_4317/AND_u1_u1_4317_inputs/$entry
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/AND_u1_u1_4317/AND_u1_u1_4317_inputs/$exit
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/AND_u1_u1_4317/SplitProtocol/$entry
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/AND_u1_u1_4317/SplitProtocol/$exit
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/AND_u1_u1_4317/SplitProtocol/Sample/$entry
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/AND_u1_u1_4317/SplitProtocol/Sample/$exit
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/AND_u1_u1_4317/SplitProtocol/Sample/rr
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/AND_u1_u1_4317/SplitProtocol/Sample/ra
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/AND_u1_u1_4317/SplitProtocol/Update/$entry
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/AND_u1_u1_4317/SplitProtocol/Update/$exit
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/AND_u1_u1_4317/SplitProtocol/Update/cr
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/AND_u1_u1_4317/SplitProtocol/Update/ca
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_eval_test/branch_req
      -- CP-element group 5: 	 branch_block_stmt_3940/AND_u1_u1_4317_place
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_if_link/$entry
      -- CP-element group 5: 	 branch_block_stmt_3940/if_stmt_4314_else_link/$entry
      -- 
    branch_req_1760_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_1760_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(5), ack => if_stmt_4314_branch_req_0); -- 
    ccu_debug_daemon_CP_1447_elements(5) <= OrReduce(ccu_debug_daemon_CP_1447_elements(37) & ccu_debug_daemon_CP_1447_elements(42));
    -- CP-element group 6:  merge  branch  transition  place  output  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	44 
    -- CP-element group 6: 	49 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	50 
    -- CP-element group 6: 	51 
    -- CP-element group 6:  members (23) 
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325__entry__
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4314__exit__
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_dead_link/$entry
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/$entry
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/$exit
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/AND_u1_u1_4328/$entry
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/AND_u1_u1_4328/$exit
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/AND_u1_u1_4328/AND_u1_u1_4328_inputs/$entry
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/AND_u1_u1_4328/AND_u1_u1_4328_inputs/$exit
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/AND_u1_u1_4328/SplitProtocol/$entry
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/AND_u1_u1_4328/SplitProtocol/$exit
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/AND_u1_u1_4328/SplitProtocol/Sample/$entry
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/AND_u1_u1_4328/SplitProtocol/Sample/$exit
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/AND_u1_u1_4328/SplitProtocol/Sample/rr
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/AND_u1_u1_4328/SplitProtocol/Sample/ra
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/AND_u1_u1_4328/SplitProtocol/Update/$entry
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/AND_u1_u1_4328/SplitProtocol/Update/$exit
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/AND_u1_u1_4328/SplitProtocol/Update/cr
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/AND_u1_u1_4328/SplitProtocol/Update/ca
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_eval_test/branch_req
      -- CP-element group 6: 	 branch_block_stmt_3940/AND_u1_u1_4328_place
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_if_link/$entry
      -- CP-element group 6: 	 branch_block_stmt_3940/if_stmt_4325_else_link/$entry
      -- 
    branch_req_1829_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_1829_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(6), ack => if_stmt_4325_branch_req_0); -- 
    ccu_debug_daemon_CP_1447_elements(6) <= OrReduce(ccu_debug_daemon_CP_1447_elements(44) & ccu_debug_daemon_CP_1447_elements(49));
    -- CP-element group 7:  merge  branch  transition  place  output  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	51 
    -- CP-element group 7: 	53 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	54 
    -- CP-element group 7: 	55 
    -- CP-element group 7:  members (23) 
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333__entry__
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4325__exit__
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_dead_link/$entry
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/$entry
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/$exit
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/AND_u1_u1_4336/$entry
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/AND_u1_u1_4336/$exit
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/AND_u1_u1_4336/AND_u1_u1_4336_inputs/$entry
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/AND_u1_u1_4336/AND_u1_u1_4336_inputs/$exit
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/AND_u1_u1_4336/SplitProtocol/$entry
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/AND_u1_u1_4336/SplitProtocol/$exit
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/AND_u1_u1_4336/SplitProtocol/Sample/$entry
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/AND_u1_u1_4336/SplitProtocol/Sample/$exit
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/AND_u1_u1_4336/SplitProtocol/Sample/rr
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/AND_u1_u1_4336/SplitProtocol/Sample/ra
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/AND_u1_u1_4336/SplitProtocol/Update/$entry
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/AND_u1_u1_4336/SplitProtocol/Update/$exit
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/AND_u1_u1_4336/SplitProtocol/Update/cr
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/AND_u1_u1_4336/SplitProtocol/Update/ca
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_eval_test/branch_req
      -- CP-element group 7: 	 branch_block_stmt_3940/AND_u1_u1_4336_place
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_if_link/$entry
      -- CP-element group 7: 	 branch_block_stmt_3940/if_stmt_4333_else_link/$entry
      -- 
    branch_req_1884_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_1884_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(7), ack => if_stmt_4333_branch_req_0); -- 
    ccu_debug_daemon_CP_1447_elements(7) <= OrReduce(ccu_debug_daemon_CP_1447_elements(51) & ccu_debug_daemon_CP_1447_elements(53));
    -- CP-element group 8:  merge  branch  transition  place  output  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	55 
    -- CP-element group 8: 	57 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	58 
    -- CP-element group 8: 	59 
    -- CP-element group 8:  members (23) 
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4333__exit__
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341__entry__
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_dead_link/$entry
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/$entry
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/$exit
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/AND_u1_u1_4344/$entry
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/AND_u1_u1_4344/$exit
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/AND_u1_u1_4344/AND_u1_u1_4344_inputs/$entry
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/AND_u1_u1_4344/AND_u1_u1_4344_inputs/$exit
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/AND_u1_u1_4344/SplitProtocol/$entry
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/AND_u1_u1_4344/SplitProtocol/$exit
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/AND_u1_u1_4344/SplitProtocol/Sample/$entry
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/AND_u1_u1_4344/SplitProtocol/Sample/$exit
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/AND_u1_u1_4344/SplitProtocol/Sample/rr
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/AND_u1_u1_4344/SplitProtocol/Sample/ra
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/AND_u1_u1_4344/SplitProtocol/Update/$entry
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/AND_u1_u1_4344/SplitProtocol/Update/$exit
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/AND_u1_u1_4344/SplitProtocol/Update/cr
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/AND_u1_u1_4344/SplitProtocol/Update/ca
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_eval_test/branch_req
      -- CP-element group 8: 	 branch_block_stmt_3940/AND_u1_u1_4344_place
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_if_link/$entry
      -- CP-element group 8: 	 branch_block_stmt_3940/if_stmt_4341_else_link/$entry
      -- 
    branch_req_1939_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_1939_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(8), ack => if_stmt_4341_branch_req_0); -- 
    ccu_debug_daemon_CP_1447_elements(8) <= OrReduce(ccu_debug_daemon_CP_1447_elements(55) & ccu_debug_daemon_CP_1447_elements(57));
    -- CP-element group 9:  merge  branch  transition  place  output  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	59 
    -- CP-element group 9: 	61 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	62 
    -- CP-element group 9: 	63 
    -- CP-element group 9:  members (23) 
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4341__exit__
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349__entry__
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_dead_link/$entry
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/$entry
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/$exit
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/AND_u1_u1_4352/$entry
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/AND_u1_u1_4352/$exit
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/AND_u1_u1_4352/AND_u1_u1_4352_inputs/$entry
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/AND_u1_u1_4352/AND_u1_u1_4352_inputs/$exit
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/AND_u1_u1_4352/SplitProtocol/$entry
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/AND_u1_u1_4352/SplitProtocol/$exit
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/AND_u1_u1_4352/SplitProtocol/Sample/$entry
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/AND_u1_u1_4352/SplitProtocol/Sample/$exit
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/AND_u1_u1_4352/SplitProtocol/Sample/rr
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/AND_u1_u1_4352/SplitProtocol/Sample/ra
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/AND_u1_u1_4352/SplitProtocol/Update/$entry
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/AND_u1_u1_4352/SplitProtocol/Update/$exit
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/AND_u1_u1_4352/SplitProtocol/Update/cr
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/AND_u1_u1_4352/SplitProtocol/Update/ca
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_eval_test/branch_req
      -- CP-element group 9: 	 branch_block_stmt_3940/AND_u1_u1_4352_place
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_if_link/$entry
      -- CP-element group 9: 	 branch_block_stmt_3940/if_stmt_4349_else_link/$entry
      -- 
    branch_req_1994_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_1994_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(9), ack => if_stmt_4349_branch_req_0); -- 
    ccu_debug_daemon_CP_1447_elements(9) <= OrReduce(ccu_debug_daemon_CP_1447_elements(59) & ccu_debug_daemon_CP_1447_elements(61));
    -- CP-element group 10:  merge  fork  transition  place  output  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	63 
    -- CP-element group 10: 	67 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	68 
    -- CP-element group 10: 	69 
    -- CP-element group 10:  members (9) 
      -- CP-element group 10: 	 branch_block_stmt_3940/if_stmt_4349__exit__
      -- CP-element group 10: 	 branch_block_stmt_3940/assign_stmt_4386__entry__
      -- CP-element group 10: 	 branch_block_stmt_3940/assign_stmt_4386/$entry
      -- CP-element group 10: 	 branch_block_stmt_3940/assign_stmt_4386/OR_u32_u32_4385_sample_start_
      -- CP-element group 10: 	 branch_block_stmt_3940/assign_stmt_4386/OR_u32_u32_4385_update_start_
      -- CP-element group 10: 	 branch_block_stmt_3940/assign_stmt_4386/OR_u32_u32_4385_Sample/$entry
      -- CP-element group 10: 	 branch_block_stmt_3940/assign_stmt_4386/OR_u32_u32_4385_Sample/rr
      -- CP-element group 10: 	 branch_block_stmt_3940/assign_stmt_4386/OR_u32_u32_4385_Update/$entry
      -- CP-element group 10: 	 branch_block_stmt_3940/assign_stmt_4386/OR_u32_u32_4385_Update/cr
      -- 
    rr_2047_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2047_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(10), ack => OR_u32_u32_4385_inst_req_0); -- 
    cr_2052_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2052_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(10), ack => OR_u32_u32_4385_inst_req_1); -- 
    ccu_debug_daemon_CP_1447_elements(10) <= OrReduce(ccu_debug_daemon_CP_1447_elements(63) & ccu_debug_daemon_CP_1447_elements(67));
    -- CP-element group 11:  merge  branch  transition  place  output  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	71 
    -- CP-element group 11: 	73 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	74 
    -- CP-element group 11: 	75 
    -- CP-element group 11:  members (23) 
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450__entry__
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4387__exit__
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_dead_link/$entry
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/$entry
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/$exit
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/AND_u1_u1_4453/$entry
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/AND_u1_u1_4453/$exit
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/AND_u1_u1_4453/AND_u1_u1_4453_inputs/$entry
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/AND_u1_u1_4453/AND_u1_u1_4453_inputs/$exit
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/AND_u1_u1_4453/SplitProtocol/$entry
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/AND_u1_u1_4453/SplitProtocol/$exit
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/AND_u1_u1_4453/SplitProtocol/Sample/$entry
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/AND_u1_u1_4453/SplitProtocol/Sample/$exit
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/AND_u1_u1_4453/SplitProtocol/Sample/rr
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/AND_u1_u1_4453/SplitProtocol/Sample/ra
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/AND_u1_u1_4453/SplitProtocol/Update/$entry
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/AND_u1_u1_4453/SplitProtocol/Update/$exit
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/AND_u1_u1_4453/SplitProtocol/Update/cr
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/AND_u1_u1_4453/SplitProtocol/Update/ca
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_eval_test/branch_req
      -- CP-element group 11: 	 branch_block_stmt_3940/AND_u1_u1_4453_place
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_if_link/$entry
      -- CP-element group 11: 	 branch_block_stmt_3940/if_stmt_4450_else_link/$entry
      -- 
    branch_req_2135_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_2135_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(11), ack => if_stmt_4450_branch_req_0); -- 
    ccu_debug_daemon_CP_1447_elements(11) <= OrReduce(ccu_debug_daemon_CP_1447_elements(71) & ccu_debug_daemon_CP_1447_elements(73));
    -- CP-element group 12:  merge  branch  transition  place  output  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	75 
    -- CP-element group 12: 	77 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	78 
    -- CP-element group 12: 	79 
    -- CP-element group 12:  members (23) 
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471__entry__
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4450__exit__
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_dead_link/$entry
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/$entry
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/$exit
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/AND_u1_u1_4474/$entry
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/AND_u1_u1_4474/$exit
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/AND_u1_u1_4474/AND_u1_u1_4474_inputs/$entry
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/AND_u1_u1_4474/AND_u1_u1_4474_inputs/$exit
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/AND_u1_u1_4474/SplitProtocol/$entry
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/AND_u1_u1_4474/SplitProtocol/$exit
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/AND_u1_u1_4474/SplitProtocol/Sample/$entry
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/AND_u1_u1_4474/SplitProtocol/Sample/$exit
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/AND_u1_u1_4474/SplitProtocol/Sample/rr
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/AND_u1_u1_4474/SplitProtocol/Sample/ra
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/AND_u1_u1_4474/SplitProtocol/Update/$entry
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/AND_u1_u1_4474/SplitProtocol/Update/$exit
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/AND_u1_u1_4474/SplitProtocol/Update/cr
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/AND_u1_u1_4474/SplitProtocol/Update/ca
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_eval_test/branch_req
      -- CP-element group 12: 	 branch_block_stmt_3940/AND_u1_u1_4474_place
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_if_link/$entry
      -- CP-element group 12: 	 branch_block_stmt_3940/if_stmt_4471_else_link/$entry
      -- 
    branch_req_2190_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_2190_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(12), ack => if_stmt_4471_branch_req_0); -- 
    ccu_debug_daemon_CP_1447_elements(12) <= OrReduce(ccu_debug_daemon_CP_1447_elements(75) & ccu_debug_daemon_CP_1447_elements(77));
    -- CP-element group 13:  merge  branch  transition  place  output  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	79 
    -- CP-element group 13: 	81 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	82 
    -- CP-element group 13: 	83 
    -- CP-element group 13:  members (23) 
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536__entry__
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4471__exit__
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_dead_link/$entry
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/$entry
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/$exit
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/AND_u1_u1_4539/$entry
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/AND_u1_u1_4539/$exit
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/AND_u1_u1_4539/AND_u1_u1_4539_inputs/$entry
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/AND_u1_u1_4539/AND_u1_u1_4539_inputs/$exit
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/AND_u1_u1_4539/SplitProtocol/$entry
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/AND_u1_u1_4539/SplitProtocol/$exit
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/AND_u1_u1_4539/SplitProtocol/Sample/$entry
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/AND_u1_u1_4539/SplitProtocol/Sample/$exit
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/AND_u1_u1_4539/SplitProtocol/Sample/rr
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/AND_u1_u1_4539/SplitProtocol/Sample/ra
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/AND_u1_u1_4539/SplitProtocol/Update/$entry
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/AND_u1_u1_4539/SplitProtocol/Update/$exit
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/AND_u1_u1_4539/SplitProtocol/Update/cr
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/AND_u1_u1_4539/SplitProtocol/Update/ca
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_eval_test/branch_req
      -- CP-element group 13: 	 branch_block_stmt_3940/AND_u1_u1_4539_place
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_if_link/$entry
      -- CP-element group 13: 	 branch_block_stmt_3940/if_stmt_4536_else_link/$entry
      -- 
    branch_req_2245_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_2245_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(13), ack => if_stmt_4536_branch_req_0); -- 
    ccu_debug_daemon_CP_1447_elements(13) <= OrReduce(ccu_debug_daemon_CP_1447_elements(79) & ccu_debug_daemon_CP_1447_elements(81));
    -- CP-element group 14:  merge  branch  transition  place  output  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	83 
    -- CP-element group 14: 	85 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	86 
    -- CP-element group 14: 	87 
    -- CP-element group 14:  members (23) 
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558__entry__
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4536__exit__
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_dead_link/$entry
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/$entry
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/$exit
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/AND_u1_u1_4561/$entry
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/AND_u1_u1_4561/$exit
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/AND_u1_u1_4561/AND_u1_u1_4561_inputs/$entry
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/AND_u1_u1_4561/AND_u1_u1_4561_inputs/$exit
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/AND_u1_u1_4561/SplitProtocol/$entry
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/AND_u1_u1_4561/SplitProtocol/$exit
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/AND_u1_u1_4561/SplitProtocol/Sample/$entry
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/AND_u1_u1_4561/SplitProtocol/Sample/$exit
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/AND_u1_u1_4561/SplitProtocol/Sample/rr
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/AND_u1_u1_4561/SplitProtocol/Sample/ra
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/AND_u1_u1_4561/SplitProtocol/Update/$entry
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/AND_u1_u1_4561/SplitProtocol/Update/$exit
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/AND_u1_u1_4561/SplitProtocol/Update/cr
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/AND_u1_u1_4561/SplitProtocol/Update/ca
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_eval_test/branch_req
      -- CP-element group 14: 	 branch_block_stmt_3940/AND_u1_u1_4561_place
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_if_link/$entry
      -- CP-element group 14: 	 branch_block_stmt_3940/if_stmt_4558_else_link/$entry
      -- 
    branch_req_2300_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_2300_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(14), ack => if_stmt_4558_branch_req_0); -- 
    ccu_debug_daemon_CP_1447_elements(14) <= OrReduce(ccu_debug_daemon_CP_1447_elements(83) & ccu_debug_daemon_CP_1447_elements(85));
    -- CP-element group 15:  merge  branch  transition  place  output  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	87 
    -- CP-element group 15: 	89 
    -- CP-element group 15: successors 
    -- CP-element group 15: 	90 
    -- CP-element group 15: 	91 
    -- CP-element group 15:  members (23) 
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576__entry__
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4558__exit__
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_dead_link/$entry
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/$entry
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/$exit
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/AND_u1_u1_4579/$entry
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/AND_u1_u1_4579/$exit
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/AND_u1_u1_4579/AND_u1_u1_4579_inputs/$entry
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/AND_u1_u1_4579/AND_u1_u1_4579_inputs/$exit
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/AND_u1_u1_4579/SplitProtocol/$entry
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/AND_u1_u1_4579/SplitProtocol/$exit
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/AND_u1_u1_4579/SplitProtocol/Sample/$entry
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/AND_u1_u1_4579/SplitProtocol/Sample/$exit
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/AND_u1_u1_4579/SplitProtocol/Sample/rr
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/AND_u1_u1_4579/SplitProtocol/Sample/ra
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/AND_u1_u1_4579/SplitProtocol/Update/$entry
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/AND_u1_u1_4579/SplitProtocol/Update/$exit
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/AND_u1_u1_4579/SplitProtocol/Update/cr
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/AND_u1_u1_4579/SplitProtocol/Update/ca
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_eval_test/branch_req
      -- CP-element group 15: 	 branch_block_stmt_3940/AND_u1_u1_4579_place
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_if_link/$entry
      -- CP-element group 15: 	 branch_block_stmt_3940/if_stmt_4576_else_link/$entry
      -- 
    branch_req_2355_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_2355_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(15), ack => if_stmt_4576_branch_req_0); -- 
    ccu_debug_daemon_CP_1447_elements(15) <= OrReduce(ccu_debug_daemon_CP_1447_elements(87) & ccu_debug_daemon_CP_1447_elements(89));
    -- CP-element group 16:  merge  fork  transition  place  output  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	91 
    -- CP-element group 16: 	93 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	94 
    -- CP-element group 16: 	95 
    -- CP-element group 16:  members (9) 
      -- CP-element group 16: 	 branch_block_stmt_3940/call_stmt_4607_to_assign_stmt_4826__entry__
      -- CP-element group 16: 	 branch_block_stmt_3940/if_stmt_4576__exit__
      -- CP-element group 16: 	 branch_block_stmt_3940/call_stmt_4607_to_assign_stmt_4826/$entry
      -- CP-element group 16: 	 branch_block_stmt_3940/call_stmt_4607_to_assign_stmt_4826/call_stmt_4619_sample_start_
      -- CP-element group 16: 	 branch_block_stmt_3940/call_stmt_4607_to_assign_stmt_4826/call_stmt_4619_update_start_
      -- CP-element group 16: 	 branch_block_stmt_3940/call_stmt_4607_to_assign_stmt_4826/call_stmt_4619_Sample/$entry
      -- CP-element group 16: 	 branch_block_stmt_3940/call_stmt_4607_to_assign_stmt_4826/call_stmt_4619_Sample/crr
      -- CP-element group 16: 	 branch_block_stmt_3940/call_stmt_4607_to_assign_stmt_4826/call_stmt_4619_Update/$entry
      -- CP-element group 16: 	 branch_block_stmt_3940/call_stmt_4607_to_assign_stmt_4826/call_stmt_4619_Update/ccr
      -- 
    crr_2394_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2394_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(16), ack => call_stmt_4619_call_req_0); -- 
    ccr_2399_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2399_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(16), ack => call_stmt_4619_call_req_1); -- 
    ccu_debug_daemon_CP_1447_elements(16) <= OrReduce(ccu_debug_daemon_CP_1447_elements(91) & ccu_debug_daemon_CP_1447_elements(93));
    -- CP-element group 17:  merge  transition  place  output  bypass 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	97 
    -- CP-element group 17: 	98 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	138 
    -- CP-element group 17:  members (6) 
      -- CP-element group 17: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913__entry__
      -- CP-element group 17: 	 branch_block_stmt_3940/if_stmt_4827__exit__
      -- CP-element group 17: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4904_Sample/req
      -- CP-element group 17: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4904_Sample/$entry
      -- CP-element group 17: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4904_sample_start_
      -- CP-element group 17: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/$entry
      -- 
    req_2595_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2595_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(17), ack => WPIPE_ccu_to_debug_interface_4904_inst_req_0); -- 
    ccu_debug_daemon_CP_1447_elements(17) <= OrReduce(ccu_debug_daemon_CP_1447_elements(97) & ccu_debug_daemon_CP_1447_elements(98));
    -- CP-element group 18:  transition  input  output  bypass 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	2 
    -- CP-element group 18: successors 
    -- CP-element group 18: 	19 
    -- CP-element group 18:  members (6) 
      -- CP-element group 18: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/WPIPE_ccu_to_debug_interface_3985_Update/req
      -- CP-element group 18: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/WPIPE_ccu_to_debug_interface_3985_Sample/ack
      -- CP-element group 18: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/WPIPE_ccu_to_debug_interface_3985_Update/$entry
      -- CP-element group 18: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/WPIPE_ccu_to_debug_interface_3985_Sample/$exit
      -- CP-element group 18: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/WPIPE_ccu_to_debug_interface_3985_update_start_
      -- CP-element group 18: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/WPIPE_ccu_to_debug_interface_3985_sample_completed_
      -- 
    ack_1507_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 18_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_debug_interface_3985_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(18)); -- 
    req_1511_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1511_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(18), ack => WPIPE_ccu_to_debug_interface_3985_inst_req_1); -- 
    -- CP-element group 19:  transition  input  bypass 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	18 
    -- CP-element group 19: successors 
    -- CP-element group 19: 	22 
    -- CP-element group 19:  members (3) 
      -- CP-element group 19: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/WPIPE_ccu_to_debug_interface_3985_Update/ack
      -- CP-element group 19: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/WPIPE_ccu_to_debug_interface_3985_Update/$exit
      -- CP-element group 19: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/WPIPE_ccu_to_debug_interface_3985_update_completed_
      -- 
    ack_1512_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 19_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_debug_interface_3985_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(19)); -- 
    -- CP-element group 20:  transition  input  bypass 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: 	2 
    -- CP-element group 20: successors 
    -- CP-element group 20:  members (3) 
      -- CP-element group 20: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/OR_u1_u1_4281_Sample/$exit
      -- CP-element group 20: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/OR_u1_u1_4281_Sample/ra
      -- CP-element group 20: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/OR_u1_u1_4281_sample_completed_
      -- 
    ra_1521_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 20_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => OR_u1_u1_4281_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(20)); -- 
    -- CP-element group 21:  transition  input  bypass 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: 	2 
    -- CP-element group 21: successors 
    -- CP-element group 21: 	22 
    -- CP-element group 21:  members (3) 
      -- CP-element group 21: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/OR_u1_u1_4281_Update/ca
      -- CP-element group 21: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/OR_u1_u1_4281_Update/$exit
      -- CP-element group 21: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/OR_u1_u1_4281_update_completed_
      -- 
    ca_1526_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 21_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => OR_u1_u1_4281_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(21)); -- 
    -- CP-element group 22:  branch  join  transition  place  output  bypass 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: 	19 
    -- CP-element group 22: 	21 
    -- CP-element group 22: successors 
    -- CP-element group 22: 	23 
    -- CP-element group 22: 	24 
    -- CP-element group 22:  members (24) 
      -- CP-element group 22: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282/$exit
      -- CP-element group 22: 	 branch_block_stmt_3940/AND_u1_u1_4286_place
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/AND_u1_u1_4286/SplitProtocol/Sample/ra
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_else_link/$entry
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/branch_req
      -- CP-element group 22: 	 branch_block_stmt_3940/assign_stmt_3979_to_assign_stmt_4282__exit__
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_if_link/$entry
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283__entry__
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_dead_link/$entry
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/$entry
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/$exit
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/AND_u1_u1_4286/SplitProtocol/Update/ca
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/AND_u1_u1_4286/SplitProtocol/Sample/rr
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/AND_u1_u1_4286/SplitProtocol/Sample/$exit
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/AND_u1_u1_4286/SplitProtocol/Sample/$entry
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/AND_u1_u1_4286/SplitProtocol/Update/cr
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/AND_u1_u1_4286/SplitProtocol/$exit
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/AND_u1_u1_4286/SplitProtocol/$entry
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/AND_u1_u1_4286/AND_u1_u1_4286_inputs/$exit
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/AND_u1_u1_4286/SplitProtocol/Update/$exit
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/AND_u1_u1_4286/AND_u1_u1_4286_inputs/$entry
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/AND_u1_u1_4286/$exit
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/AND_u1_u1_4286/SplitProtocol/Update/$entry
      -- CP-element group 22: 	 branch_block_stmt_3940/if_stmt_4283_eval_test/AND_u1_u1_4286/$entry
      -- 
    branch_req_1553_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_1553_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(22), ack => if_stmt_4283_branch_req_0); -- 
    ccu_debug_daemon_cp_element_group_22: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 36) := "ccu_debug_daemon_cp_element_group_22"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(19) & ccu_debug_daemon_CP_1447_elements(21);
      gj_ccu_debug_daemon_cp_element_group_22 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(22), clk => clk, reset => reset); --
    end block;
    -- CP-element group 23:  fork  transition  place  input  output  bypass 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: 	22 
    -- CP-element group 23: successors 
    -- CP-element group 23: 	25 
    -- CP-element group 23: 	26 
    -- CP-element group 23:  members (10) 
      -- CP-element group 23: 	 branch_block_stmt_3940/if_stmt_4283_if_link/$exit
      -- CP-element group 23: 	 branch_block_stmt_3940/assign_stmt_4290/$entry
      -- CP-element group 23: 	 branch_block_stmt_3940/assign_stmt_4290__entry__
      -- CP-element group 23: 	 branch_block_stmt_3940/if_stmt_4283_if_link/if_choice_transition
      -- CP-element group 23: 	 branch_block_stmt_3940/assign_stmt_4290/slice_4289_Update/cr
      -- CP-element group 23: 	 branch_block_stmt_3940/assign_stmt_4290/slice_4289_Update/$entry
      -- CP-element group 23: 	 branch_block_stmt_3940/assign_stmt_4290/slice_4289_Sample/rr
      -- CP-element group 23: 	 branch_block_stmt_3940/assign_stmt_4290/slice_4289_Sample/$entry
      -- CP-element group 23: 	 branch_block_stmt_3940/assign_stmt_4290/slice_4289_update_start_
      -- CP-element group 23: 	 branch_block_stmt_3940/assign_stmt_4290/slice_4289_sample_start_
      -- 
    if_choice_transition_1558_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 23_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4283_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(23)); -- 
    cr_1580_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_1580_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(23), ack => slice_4289_inst_req_1); -- 
    rr_1575_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_1575_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(23), ack => slice_4289_inst_req_0); -- 
    -- CP-element group 24:  transition  input  bypass 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: 	22 
    -- CP-element group 24: successors 
    -- CP-element group 24: 	3 
    -- CP-element group 24:  members (2) 
      -- CP-element group 24: 	 branch_block_stmt_3940/if_stmt_4283_else_link/else_choice_transition
      -- CP-element group 24: 	 branch_block_stmt_3940/if_stmt_4283_else_link/$exit
      -- 
    else_choice_transition_1562_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 24_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4283_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(24)); -- 
    -- CP-element group 25:  transition  input  bypass 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: 	23 
    -- CP-element group 25: successors 
    -- CP-element group 25:  members (3) 
      -- CP-element group 25: 	 branch_block_stmt_3940/assign_stmt_4290/slice_4289_Sample/ra
      -- CP-element group 25: 	 branch_block_stmt_3940/assign_stmt_4290/slice_4289_Sample/$exit
      -- CP-element group 25: 	 branch_block_stmt_3940/assign_stmt_4290/slice_4289_sample_completed_
      -- 
    ra_1576_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 25_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_4289_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(25)); -- 
    -- CP-element group 26:  transition  input  output  bypass 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: 	23 
    -- CP-element group 26: successors 
    -- CP-element group 26: 	27 
    -- CP-element group 26:  members (6) 
      -- CP-element group 26: 	 branch_block_stmt_3940/assign_stmt_4290/WPIPE_DBG_TO_CCU_RESET_SIG_4287_Sample/$entry
      -- CP-element group 26: 	 branch_block_stmt_3940/assign_stmt_4290/WPIPE_DBG_TO_CCU_RESET_SIG_4287_sample_start_
      -- CP-element group 26: 	 branch_block_stmt_3940/assign_stmt_4290/slice_4289_Update/ca
      -- CP-element group 26: 	 branch_block_stmt_3940/assign_stmt_4290/slice_4289_Update/$exit
      -- CP-element group 26: 	 branch_block_stmt_3940/assign_stmt_4290/slice_4289_update_completed_
      -- CP-element group 26: 	 branch_block_stmt_3940/assign_stmt_4290/WPIPE_DBG_TO_CCU_RESET_SIG_4287_Sample/req
      -- 
    ca_1581_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 26_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => slice_4289_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(26)); -- 
    req_1589_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1589_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(26), ack => WPIPE_DBG_TO_CCU_RESET_SIG_4287_inst_req_0); -- 
    -- CP-element group 27:  transition  input  output  bypass 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: 	26 
    -- CP-element group 27: successors 
    -- CP-element group 27: 	28 
    -- CP-element group 27:  members (6) 
      -- CP-element group 27: 	 branch_block_stmt_3940/assign_stmt_4290/WPIPE_DBG_TO_CCU_RESET_SIG_4287_sample_completed_
      -- CP-element group 27: 	 branch_block_stmt_3940/assign_stmt_4290/WPIPE_DBG_TO_CCU_RESET_SIG_4287_Update/req
      -- CP-element group 27: 	 branch_block_stmt_3940/assign_stmt_4290/WPIPE_DBG_TO_CCU_RESET_SIG_4287_update_start_
      -- CP-element group 27: 	 branch_block_stmt_3940/assign_stmt_4290/WPIPE_DBG_TO_CCU_RESET_SIG_4287_Update/$entry
      -- CP-element group 27: 	 branch_block_stmt_3940/assign_stmt_4290/WPIPE_DBG_TO_CCU_RESET_SIG_4287_Sample/ack
      -- CP-element group 27: 	 branch_block_stmt_3940/assign_stmt_4290/WPIPE_DBG_TO_CCU_RESET_SIG_4287_Sample/$exit
      -- 
    ack_1590_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 27_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_DBG_TO_CCU_RESET_SIG_4287_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(27)); -- 
    req_1594_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1594_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(27), ack => WPIPE_DBG_TO_CCU_RESET_SIG_4287_inst_req_1); -- 
    -- CP-element group 28:  transition  place  input  bypass 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: 	27 
    -- CP-element group 28: successors 
    -- CP-element group 28: 	3 
    -- CP-element group 28:  members (5) 
      -- CP-element group 28: 	 branch_block_stmt_3940/assign_stmt_4290/$exit
      -- CP-element group 28: 	 branch_block_stmt_3940/assign_stmt_4290__exit__
      -- CP-element group 28: 	 branch_block_stmt_3940/assign_stmt_4290/WPIPE_DBG_TO_CCU_RESET_SIG_4287_update_completed_
      -- CP-element group 28: 	 branch_block_stmt_3940/assign_stmt_4290/WPIPE_DBG_TO_CCU_RESET_SIG_4287_Update/ack
      -- CP-element group 28: 	 branch_block_stmt_3940/assign_stmt_4290/WPIPE_DBG_TO_CCU_RESET_SIG_4287_Update/$exit
      -- 
    ack_1595_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 28_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_DBG_TO_CCU_RESET_SIG_4287_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(28)); -- 
    -- CP-element group 29:  fork  transition  place  input  output  bypass 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: 	3 
    -- CP-element group 29: successors 
    -- CP-element group 29: 	31 
    -- CP-element group 29: 	33 
    -- CP-element group 29:  members (10) 
      -- CP-element group 29: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301__entry__
      -- CP-element group 29: 	 branch_block_stmt_3940/if_stmt_4292_if_link/$exit
      -- CP-element group 29: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_init_pc_4296_Sample/$entry
      -- CP-element group 29: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_init_pc_4296_Sample/req
      -- CP-element group 29: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_Sample/$entry
      -- CP-element group 29: 	 branch_block_stmt_3940/if_stmt_4292_if_link/if_choice_transition
      -- CP-element group 29: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_sample_start_
      -- CP-element group 29: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_init_pc_4296_sample_start_
      -- CP-element group 29: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_Sample/req
      -- CP-element group 29: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/$entry
      -- 
    if_choice_transition_1627_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 29_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4292_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(29)); -- 
    req_1644_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1644_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(29), ack => WPIPE_init_pc_4296_inst_req_0); -- 
    req_1658_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1658_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(29), ack => WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_inst_req_0); -- 
    -- CP-element group 30:  transition  input  bypass 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: 	3 
    -- CP-element group 30: successors 
    -- CP-element group 30: 	4 
    -- CP-element group 30:  members (2) 
      -- CP-element group 30: 	 branch_block_stmt_3940/if_stmt_4292_else_link/else_choice_transition
      -- CP-element group 30: 	 branch_block_stmt_3940/if_stmt_4292_else_link/$exit
      -- 
    else_choice_transition_1631_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 30_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4292_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(30)); -- 
    -- CP-element group 31:  transition  input  output  bypass 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: 	29 
    -- CP-element group 31: successors 
    -- CP-element group 31: 	32 
    -- CP-element group 31:  members (6) 
      -- CP-element group 31: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_init_pc_4296_update_start_
      -- CP-element group 31: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_init_pc_4296_Update/req
      -- CP-element group 31: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_init_pc_4296_Sample/ack
      -- CP-element group 31: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_init_pc_4296_Sample/$exit
      -- CP-element group 31: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_init_pc_4296_sample_completed_
      -- CP-element group 31: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_init_pc_4296_Update/$entry
      -- 
    ack_1645_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 31_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_init_pc_4296_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(31)); -- 
    req_1649_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1649_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(31), ack => WPIPE_init_pc_4296_inst_req_1); -- 
    -- CP-element group 32:  transition  input  bypass 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	31 
    -- CP-element group 32: successors 
    -- CP-element group 32: 	35 
    -- CP-element group 32:  members (3) 
      -- CP-element group 32: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_init_pc_4296_Update/ack
      -- CP-element group 32: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_init_pc_4296_update_completed_
      -- CP-element group 32: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_init_pc_4296_Update/$exit
      -- 
    ack_1650_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 32_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_init_pc_4296_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(32)); -- 
    -- CP-element group 33:  transition  input  output  bypass 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: 	29 
    -- CP-element group 33: successors 
    -- CP-element group 33: 	34 
    -- CP-element group 33:  members (6) 
      -- CP-element group 33: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_sample_completed_
      -- CP-element group 33: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_Sample/$exit
      -- CP-element group 33: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_Update/req
      -- CP-element group 33: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_Update/$entry
      -- CP-element group 33: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_Sample/ack
      -- CP-element group 33: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_update_start_
      -- 
    ack_1659_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 33_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(33)); -- 
    req_1663_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1663_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(33), ack => WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_inst_req_1); -- 
    -- CP-element group 34:  transition  input  bypass 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: 	33 
    -- CP-element group 34: successors 
    -- CP-element group 34: 	35 
    -- CP-element group 34:  members (3) 
      -- CP-element group 34: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_update_completed_
      -- CP-element group 34: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_Update/ack
      -- CP-element group 34: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_Update/$exit
      -- 
    ack_1664_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 34_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(34)); -- 
    -- CP-element group 35:  join  transition  place  bypass 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: 	32 
    -- CP-element group 35: 	34 
    -- CP-element group 35: successors 
    -- CP-element group 35: 	4 
    -- CP-element group 35:  members (2) 
      -- CP-element group 35: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301__exit__
      -- CP-element group 35: 	 branch_block_stmt_3940/assign_stmt_4298_to_assign_stmt_4301/$exit
      -- 
    ccu_debug_daemon_cp_element_group_35: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 36) := "ccu_debug_daemon_cp_element_group_35"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(32) & ccu_debug_daemon_CP_1447_elements(34);
      gj_ccu_debug_daemon_cp_element_group_35 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(35), clk => clk, reset => reset); --
    end block;
    -- CP-element group 36:  fork  transition  place  input  output  bypass 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: 	4 
    -- CP-element group 36: successors 
    -- CP-element group 36: 	38 
    -- CP-element group 36: 	40 
    -- CP-element group 36:  members (10) 
      -- CP-element group 36: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312__entry__
      -- CP-element group 36: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_init_npc_4307_Sample/$entry
      -- CP-element group 36: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_init_npc_4307_sample_start_
      -- CP-element group 36: 	 branch_block_stmt_3940/if_stmt_4303_if_link/if_choice_transition
      -- CP-element group 36: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_Sample/$entry
      -- CP-element group 36: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_Sample/req
      -- CP-element group 36: 	 branch_block_stmt_3940/if_stmt_4303_if_link/$exit
      -- CP-element group 36: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_sample_start_
      -- CP-element group 36: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_init_npc_4307_Sample/req
      -- CP-element group 36: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/$entry
      -- 
    if_choice_transition_1696_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 36_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4303_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(36)); -- 
    req_1727_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1727_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(36), ack => WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_inst_req_0); -- 
    req_1713_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1713_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(36), ack => WPIPE_init_npc_4307_inst_req_0); -- 
    -- CP-element group 37:  transition  input  bypass 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: 	4 
    -- CP-element group 37: successors 
    -- CP-element group 37: 	5 
    -- CP-element group 37:  members (2) 
      -- CP-element group 37: 	 branch_block_stmt_3940/if_stmt_4303_else_link/else_choice_transition
      -- CP-element group 37: 	 branch_block_stmt_3940/if_stmt_4303_else_link/$exit
      -- 
    else_choice_transition_1700_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 37_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4303_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(37)); -- 
    -- CP-element group 38:  transition  input  output  bypass 
    -- CP-element group 38: predecessors 
    -- CP-element group 38: 	36 
    -- CP-element group 38: successors 
    -- CP-element group 38: 	39 
    -- CP-element group 38:  members (6) 
      -- CP-element group 38: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_init_npc_4307_Sample/$exit
      -- CP-element group 38: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_init_npc_4307_sample_completed_
      -- CP-element group 38: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_init_npc_4307_Update/$entry
      -- CP-element group 38: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_init_npc_4307_Update/req
      -- CP-element group 38: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_init_npc_4307_update_start_
      -- CP-element group 38: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_init_npc_4307_Sample/ack
      -- 
    ack_1714_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 38_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_init_npc_4307_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(38)); -- 
    req_1718_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1718_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(38), ack => WPIPE_init_npc_4307_inst_req_1); -- 
    -- CP-element group 39:  transition  input  bypass 
    -- CP-element group 39: predecessors 
    -- CP-element group 39: 	38 
    -- CP-element group 39: successors 
    -- CP-element group 39: 	42 
    -- CP-element group 39:  members (3) 
      -- CP-element group 39: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_init_npc_4307_update_completed_
      -- CP-element group 39: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_init_npc_4307_Update/$exit
      -- CP-element group 39: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_init_npc_4307_Update/ack
      -- 
    ack_1719_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 39_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_init_npc_4307_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(39)); -- 
    -- CP-element group 40:  transition  input  output  bypass 
    -- CP-element group 40: predecessors 
    -- CP-element group 40: 	36 
    -- CP-element group 40: successors 
    -- CP-element group 40: 	41 
    -- CP-element group 40:  members (6) 
      -- CP-element group 40: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_Sample/$exit
      -- CP-element group 40: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_Sample/ack
      -- CP-element group 40: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_sample_completed_
      -- CP-element group 40: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_Update/$entry
      -- CP-element group 40: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_update_start_
      -- CP-element group 40: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_Update/req
      -- 
    ack_1728_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 40_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(40)); -- 
    req_1732_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1732_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(40), ack => WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_inst_req_1); -- 
    -- CP-element group 41:  transition  input  bypass 
    -- CP-element group 41: predecessors 
    -- CP-element group 41: 	40 
    -- CP-element group 41: successors 
    -- CP-element group 41: 	42 
    -- CP-element group 41:  members (3) 
      -- CP-element group 41: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_Update/$exit
      -- CP-element group 41: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_update_completed_
      -- CP-element group 41: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_Update/ack
      -- 
    ack_1733_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 41_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(41)); -- 
    -- CP-element group 42:  join  transition  place  bypass 
    -- CP-element group 42: predecessors 
    -- CP-element group 42: 	39 
    -- CP-element group 42: 	41 
    -- CP-element group 42: successors 
    -- CP-element group 42: 	5 
    -- CP-element group 42:  members (2) 
      -- CP-element group 42: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312__exit__
      -- CP-element group 42: 	 branch_block_stmt_3940/assign_stmt_4309_to_assign_stmt_4312/$exit
      -- 
    ccu_debug_daemon_cp_element_group_42: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 36) := "ccu_debug_daemon_cp_element_group_42"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(39) & ccu_debug_daemon_CP_1447_elements(41);
      gj_ccu_debug_daemon_cp_element_group_42 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(42), clk => clk, reset => reset); --
    end block;
    -- CP-element group 43:  fork  transition  place  input  output  bypass 
    -- CP-element group 43: predecessors 
    -- CP-element group 43: 	5 
    -- CP-element group 43: successors 
    -- CP-element group 43: 	45 
    -- CP-element group 43: 	47 
    -- CP-element group 43:  members (10) 
      -- CP-element group 43: 	 branch_block_stmt_3940/if_stmt_4314_if_link/$exit
      -- CP-element group 43: 	 branch_block_stmt_3940/if_stmt_4314_if_link/if_choice_transition
      -- CP-element group 43: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323__entry__
      -- CP-element group 43: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/$entry
      -- CP-element group 43: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_init_psr_4318_sample_start_
      -- CP-element group 43: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_init_psr_4318_Sample/$entry
      -- CP-element group 43: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_init_psr_4318_Sample/req
      -- CP-element group 43: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_sample_start_
      -- CP-element group 43: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_Sample/$entry
      -- CP-element group 43: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_Sample/req
      -- 
    if_choice_transition_1765_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 43_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4314_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(43)); -- 
    req_1782_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1782_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(43), ack => WPIPE_init_psr_4318_inst_req_0); -- 
    req_1796_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1796_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(43), ack => WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_inst_req_0); -- 
    -- CP-element group 44:  transition  input  bypass 
    -- CP-element group 44: predecessors 
    -- CP-element group 44: 	5 
    -- CP-element group 44: successors 
    -- CP-element group 44: 	6 
    -- CP-element group 44:  members (2) 
      -- CP-element group 44: 	 branch_block_stmt_3940/if_stmt_4314_else_link/$exit
      -- CP-element group 44: 	 branch_block_stmt_3940/if_stmt_4314_else_link/else_choice_transition
      -- 
    else_choice_transition_1769_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 44_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4314_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(44)); -- 
    -- CP-element group 45:  transition  input  output  bypass 
    -- CP-element group 45: predecessors 
    -- CP-element group 45: 	43 
    -- CP-element group 45: successors 
    -- CP-element group 45: 	46 
    -- CP-element group 45:  members (6) 
      -- CP-element group 45: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_init_psr_4318_sample_completed_
      -- CP-element group 45: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_init_psr_4318_update_start_
      -- CP-element group 45: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_init_psr_4318_Sample/$exit
      -- CP-element group 45: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_init_psr_4318_Sample/ack
      -- CP-element group 45: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_init_psr_4318_Update/$entry
      -- CP-element group 45: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_init_psr_4318_Update/req
      -- 
    ack_1783_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 45_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_init_psr_4318_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(45)); -- 
    req_1787_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1787_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(45), ack => WPIPE_init_psr_4318_inst_req_1); -- 
    -- CP-element group 46:  transition  input  bypass 
    -- CP-element group 46: predecessors 
    -- CP-element group 46: 	45 
    -- CP-element group 46: successors 
    -- CP-element group 46: 	49 
    -- CP-element group 46:  members (3) 
      -- CP-element group 46: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_init_psr_4318_update_completed_
      -- CP-element group 46: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_init_psr_4318_Update/$exit
      -- CP-element group 46: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_init_psr_4318_Update/ack
      -- 
    ack_1788_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 46_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_init_psr_4318_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(46)); -- 
    -- CP-element group 47:  transition  input  output  bypass 
    -- CP-element group 47: predecessors 
    -- CP-element group 47: 	43 
    -- CP-element group 47: successors 
    -- CP-element group 47: 	48 
    -- CP-element group 47:  members (6) 
      -- CP-element group 47: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_sample_completed_
      -- CP-element group 47: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_update_start_
      -- CP-element group 47: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_Sample/$exit
      -- CP-element group 47: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_Sample/ack
      -- CP-element group 47: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_Update/$entry
      -- CP-element group 47: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_Update/req
      -- 
    ack_1797_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 47_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(47)); -- 
    req_1801_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1801_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(47), ack => WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_inst_req_1); -- 
    -- CP-element group 48:  transition  input  bypass 
    -- CP-element group 48: predecessors 
    -- CP-element group 48: 	47 
    -- CP-element group 48: successors 
    -- CP-element group 48: 	49 
    -- CP-element group 48:  members (3) 
      -- CP-element group 48: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_update_completed_
      -- CP-element group 48: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_Update/$exit
      -- CP-element group 48: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_Update/ack
      -- 
    ack_1802_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 48_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(48)); -- 
    -- CP-element group 49:  join  transition  place  bypass 
    -- CP-element group 49: predecessors 
    -- CP-element group 49: 	46 
    -- CP-element group 49: 	48 
    -- CP-element group 49: successors 
    -- CP-element group 49: 	6 
    -- CP-element group 49:  members (2) 
      -- CP-element group 49: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323__exit__
      -- CP-element group 49: 	 branch_block_stmt_3940/assign_stmt_4320_to_assign_stmt_4323/$exit
      -- 
    ccu_debug_daemon_cp_element_group_49: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 36) := "ccu_debug_daemon_cp_element_group_49"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(46) & ccu_debug_daemon_CP_1447_elements(48);
      gj_ccu_debug_daemon_cp_element_group_49 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(49), clk => clk, reset => reset); --
    end block;
    -- CP-element group 50:  fork  transition  place  input  output  bypass 
    -- CP-element group 50: predecessors 
    -- CP-element group 50: 	6 
    -- CP-element group 50: successors 
    -- CP-element group 50: 	52 
    -- CP-element group 50: 	53 
    -- CP-element group 50:  members (10) 
      -- CP-element group 50: 	 branch_block_stmt_3940/if_stmt_4325_if_link/$exit
      -- CP-element group 50: 	 branch_block_stmt_3940/if_stmt_4325_if_link/if_choice_transition
      -- CP-element group 50: 	 branch_block_stmt_3940/assign_stmt_4331__entry__
      -- CP-element group 50: 	 branch_block_stmt_3940/assign_stmt_4331/$entry
      -- CP-element group 50: 	 branch_block_stmt_3940/assign_stmt_4331/assign_stmt_4331_sample_start_
      -- CP-element group 50: 	 branch_block_stmt_3940/assign_stmt_4331/assign_stmt_4331_update_start_
      -- CP-element group 50: 	 branch_block_stmt_3940/assign_stmt_4331/assign_stmt_4331_Sample/$entry
      -- CP-element group 50: 	 branch_block_stmt_3940/assign_stmt_4331/assign_stmt_4331_Sample/req
      -- CP-element group 50: 	 branch_block_stmt_3940/assign_stmt_4331/assign_stmt_4331_Update/$entry
      -- CP-element group 50: 	 branch_block_stmt_3940/assign_stmt_4331/assign_stmt_4331_Update/req
      -- 
    if_choice_transition_1834_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 50_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4325_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(50)); -- 
    req_1851_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1851_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(50), ack => W_rinit_pc_4329_inst_req_0); -- 
    req_1856_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1856_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(50), ack => W_rinit_pc_4329_inst_req_1); -- 
    -- CP-element group 51:  transition  input  bypass 
    -- CP-element group 51: predecessors 
    -- CP-element group 51: 	6 
    -- CP-element group 51: successors 
    -- CP-element group 51: 	7 
    -- CP-element group 51:  members (2) 
      -- CP-element group 51: 	 branch_block_stmt_3940/if_stmt_4325_else_link/$exit
      -- CP-element group 51: 	 branch_block_stmt_3940/if_stmt_4325_else_link/else_choice_transition
      -- 
    else_choice_transition_1838_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 51_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4325_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(51)); -- 
    -- CP-element group 52:  transition  input  bypass 
    -- CP-element group 52: predecessors 
    -- CP-element group 52: 	50 
    -- CP-element group 52: successors 
    -- CP-element group 52:  members (3) 
      -- CP-element group 52: 	 branch_block_stmt_3940/assign_stmt_4331/assign_stmt_4331_sample_completed_
      -- CP-element group 52: 	 branch_block_stmt_3940/assign_stmt_4331/assign_stmt_4331_Sample/$exit
      -- CP-element group 52: 	 branch_block_stmt_3940/assign_stmt_4331/assign_stmt_4331_Sample/ack
      -- 
    ack_1852_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 52_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_rinit_pc_4329_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(52)); -- 
    -- CP-element group 53:  transition  place  input  bypass 
    -- CP-element group 53: predecessors 
    -- CP-element group 53: 	50 
    -- CP-element group 53: successors 
    -- CP-element group 53: 	7 
    -- CP-element group 53:  members (5) 
      -- CP-element group 53: 	 branch_block_stmt_3940/assign_stmt_4331__exit__
      -- CP-element group 53: 	 branch_block_stmt_3940/assign_stmt_4331/$exit
      -- CP-element group 53: 	 branch_block_stmt_3940/assign_stmt_4331/assign_stmt_4331_update_completed_
      -- CP-element group 53: 	 branch_block_stmt_3940/assign_stmt_4331/assign_stmt_4331_Update/$exit
      -- CP-element group 53: 	 branch_block_stmt_3940/assign_stmt_4331/assign_stmt_4331_Update/ack
      -- 
    ack_1857_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 53_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_rinit_pc_4329_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(53)); -- 
    -- CP-element group 54:  fork  transition  place  input  output  bypass 
    -- CP-element group 54: predecessors 
    -- CP-element group 54: 	7 
    -- CP-element group 54: successors 
    -- CP-element group 54: 	56 
    -- CP-element group 54: 	57 
    -- CP-element group 54:  members (10) 
      -- CP-element group 54: 	 branch_block_stmt_3940/if_stmt_4333_if_link/$exit
      -- CP-element group 54: 	 branch_block_stmt_3940/if_stmt_4333_if_link/if_choice_transition
      -- CP-element group 54: 	 branch_block_stmt_3940/assign_stmt_4339__entry__
      -- CP-element group 54: 	 branch_block_stmt_3940/assign_stmt_4339/$entry
      -- CP-element group 54: 	 branch_block_stmt_3940/assign_stmt_4339/assign_stmt_4339_sample_start_
      -- CP-element group 54: 	 branch_block_stmt_3940/assign_stmt_4339/assign_stmt_4339_update_start_
      -- CP-element group 54: 	 branch_block_stmt_3940/assign_stmt_4339/assign_stmt_4339_Sample/$entry
      -- CP-element group 54: 	 branch_block_stmt_3940/assign_stmt_4339/assign_stmt_4339_Sample/req
      -- CP-element group 54: 	 branch_block_stmt_3940/assign_stmt_4339/assign_stmt_4339_Update/$entry
      -- CP-element group 54: 	 branch_block_stmt_3940/assign_stmt_4339/assign_stmt_4339_Update/req
      -- 
    if_choice_transition_1889_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 54_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4333_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(54)); -- 
    req_1906_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1906_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(54), ack => W_rinit_npc_4337_inst_req_0); -- 
    req_1911_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1911_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(54), ack => W_rinit_npc_4337_inst_req_1); -- 
    -- CP-element group 55:  transition  input  bypass 
    -- CP-element group 55: predecessors 
    -- CP-element group 55: 	7 
    -- CP-element group 55: successors 
    -- CP-element group 55: 	8 
    -- CP-element group 55:  members (2) 
      -- CP-element group 55: 	 branch_block_stmt_3940/if_stmt_4333_else_link/$exit
      -- CP-element group 55: 	 branch_block_stmt_3940/if_stmt_4333_else_link/else_choice_transition
      -- 
    else_choice_transition_1893_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 55_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4333_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(55)); -- 
    -- CP-element group 56:  transition  input  bypass 
    -- CP-element group 56: predecessors 
    -- CP-element group 56: 	54 
    -- CP-element group 56: successors 
    -- CP-element group 56:  members (3) 
      -- CP-element group 56: 	 branch_block_stmt_3940/assign_stmt_4339/assign_stmt_4339_sample_completed_
      -- CP-element group 56: 	 branch_block_stmt_3940/assign_stmt_4339/assign_stmt_4339_Sample/$exit
      -- CP-element group 56: 	 branch_block_stmt_3940/assign_stmt_4339/assign_stmt_4339_Sample/ack
      -- 
    ack_1907_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 56_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_rinit_npc_4337_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(56)); -- 
    -- CP-element group 57:  transition  place  input  bypass 
    -- CP-element group 57: predecessors 
    -- CP-element group 57: 	54 
    -- CP-element group 57: successors 
    -- CP-element group 57: 	8 
    -- CP-element group 57:  members (5) 
      -- CP-element group 57: 	 branch_block_stmt_3940/assign_stmt_4339__exit__
      -- CP-element group 57: 	 branch_block_stmt_3940/assign_stmt_4339/$exit
      -- CP-element group 57: 	 branch_block_stmt_3940/assign_stmt_4339/assign_stmt_4339_update_completed_
      -- CP-element group 57: 	 branch_block_stmt_3940/assign_stmt_4339/assign_stmt_4339_Update/$exit
      -- CP-element group 57: 	 branch_block_stmt_3940/assign_stmt_4339/assign_stmt_4339_Update/ack
      -- 
    ack_1912_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 57_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_rinit_npc_4337_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(57)); -- 
    -- CP-element group 58:  fork  transition  place  input  output  bypass 
    -- CP-element group 58: predecessors 
    -- CP-element group 58: 	8 
    -- CP-element group 58: successors 
    -- CP-element group 58: 	60 
    -- CP-element group 58: 	61 
    -- CP-element group 58:  members (10) 
      -- CP-element group 58: 	 branch_block_stmt_3940/if_stmt_4341_if_link/$exit
      -- CP-element group 58: 	 branch_block_stmt_3940/if_stmt_4341_if_link/if_choice_transition
      -- CP-element group 58: 	 branch_block_stmt_3940/assign_stmt_4347__entry__
      -- CP-element group 58: 	 branch_block_stmt_3940/assign_stmt_4347/$entry
      -- CP-element group 58: 	 branch_block_stmt_3940/assign_stmt_4347/assign_stmt_4347_sample_start_
      -- CP-element group 58: 	 branch_block_stmt_3940/assign_stmt_4347/assign_stmt_4347_update_start_
      -- CP-element group 58: 	 branch_block_stmt_3940/assign_stmt_4347/assign_stmt_4347_Sample/$entry
      -- CP-element group 58: 	 branch_block_stmt_3940/assign_stmt_4347/assign_stmt_4347_Sample/req
      -- CP-element group 58: 	 branch_block_stmt_3940/assign_stmt_4347/assign_stmt_4347_Update/$entry
      -- CP-element group 58: 	 branch_block_stmt_3940/assign_stmt_4347/assign_stmt_4347_Update/req
      -- 
    if_choice_transition_1944_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 58_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4341_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(58)); -- 
    req_1961_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1961_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(58), ack => W_rinit_psr_4345_inst_req_0); -- 
    req_1966_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_1966_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(58), ack => W_rinit_psr_4345_inst_req_1); -- 
    -- CP-element group 59:  transition  input  bypass 
    -- CP-element group 59: predecessors 
    -- CP-element group 59: 	8 
    -- CP-element group 59: successors 
    -- CP-element group 59: 	9 
    -- CP-element group 59:  members (2) 
      -- CP-element group 59: 	 branch_block_stmt_3940/if_stmt_4341_else_link/$exit
      -- CP-element group 59: 	 branch_block_stmt_3940/if_stmt_4341_else_link/else_choice_transition
      -- 
    else_choice_transition_1948_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 59_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4341_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(59)); -- 
    -- CP-element group 60:  transition  input  bypass 
    -- CP-element group 60: predecessors 
    -- CP-element group 60: 	58 
    -- CP-element group 60: successors 
    -- CP-element group 60:  members (3) 
      -- CP-element group 60: 	 branch_block_stmt_3940/assign_stmt_4347/assign_stmt_4347_sample_completed_
      -- CP-element group 60: 	 branch_block_stmt_3940/assign_stmt_4347/assign_stmt_4347_Sample/$exit
      -- CP-element group 60: 	 branch_block_stmt_3940/assign_stmt_4347/assign_stmt_4347_Sample/ack
      -- 
    ack_1962_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 60_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_rinit_psr_4345_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(60)); -- 
    -- CP-element group 61:  transition  place  input  bypass 
    -- CP-element group 61: predecessors 
    -- CP-element group 61: 	58 
    -- CP-element group 61: successors 
    -- CP-element group 61: 	9 
    -- CP-element group 61:  members (5) 
      -- CP-element group 61: 	 branch_block_stmt_3940/assign_stmt_4347__exit__
      -- CP-element group 61: 	 branch_block_stmt_3940/assign_stmt_4347/$exit
      -- CP-element group 61: 	 branch_block_stmt_3940/assign_stmt_4347/assign_stmt_4347_update_completed_
      -- CP-element group 61: 	 branch_block_stmt_3940/assign_stmt_4347/assign_stmt_4347_Update/$exit
      -- CP-element group 61: 	 branch_block_stmt_3940/assign_stmt_4347/assign_stmt_4347_Update/ack
      -- 
    ack_1967_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 61_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_rinit_psr_4345_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(61)); -- 
    -- CP-element group 62:  fork  transition  place  input  output  bypass 
    -- CP-element group 62: predecessors 
    -- CP-element group 62: 	9 
    -- CP-element group 62: successors 
    -- CP-element group 62: 	64 
    -- CP-element group 62: 	65 
    -- CP-element group 62: 	67 
    -- CP-element group 62:  members (13) 
      -- CP-element group 62: 	 branch_block_stmt_3940/if_stmt_4349_if_link/$exit
      -- CP-element group 62: 	 branch_block_stmt_3940/if_stmt_4349_if_link/if_choice_transition
      -- CP-element group 62: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364__entry__
      -- CP-element group 62: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/$entry
      -- CP-element group 62: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/assign_stmt_4355_sample_start_
      -- CP-element group 62: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/assign_stmt_4355_update_start_
      -- CP-element group 62: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/assign_stmt_4355_Sample/$entry
      -- CP-element group 62: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/assign_stmt_4355_Sample/req
      -- CP-element group 62: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/assign_stmt_4355_Update/$entry
      -- CP-element group 62: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/assign_stmt_4355_Update/req
      -- CP-element group 62: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/CONCAT_u24_u32_4363_update_start_
      -- CP-element group 62: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/CONCAT_u24_u32_4363_Update/$entry
      -- CP-element group 62: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/CONCAT_u24_u32_4363_Update/cr
      -- 
    if_choice_transition_1999_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 62_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4349_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(62)); -- 
    req_2016_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2016_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(62), ack => W_mode_sig_4353_inst_req_0); -- 
    req_2021_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2021_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(62), ack => W_mode_sig_4353_inst_req_1); -- 
    cr_2035_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_2035_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(62), ack => CONCAT_u24_u32_4363_inst_req_1); -- 
    -- CP-element group 63:  transition  input  bypass 
    -- CP-element group 63: predecessors 
    -- CP-element group 63: 	9 
    -- CP-element group 63: successors 
    -- CP-element group 63: 	10 
    -- CP-element group 63:  members (2) 
      -- CP-element group 63: 	 branch_block_stmt_3940/if_stmt_4349_else_link/$exit
      -- CP-element group 63: 	 branch_block_stmt_3940/if_stmt_4349_else_link/else_choice_transition
      -- 
    else_choice_transition_2003_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 63_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4349_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(63)); -- 
    -- CP-element group 64:  transition  input  bypass 
    -- CP-element group 64: predecessors 
    -- CP-element group 64: 	62 
    -- CP-element group 64: successors 
    -- CP-element group 64:  members (3) 
      -- CP-element group 64: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/assign_stmt_4355_sample_completed_
      -- CP-element group 64: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/assign_stmt_4355_Sample/$exit
      -- CP-element group 64: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/assign_stmt_4355_Sample/ack
      -- 
    ack_2017_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 64_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_mode_sig_4353_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(64)); -- 
    -- CP-element group 65:  transition  input  output  bypass 
    -- CP-element group 65: predecessors 
    -- CP-element group 65: 	62 
    -- CP-element group 65: successors 
    -- CP-element group 65: 	66 
    -- CP-element group 65:  members (6) 
      -- CP-element group 65: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/assign_stmt_4355_update_completed_
      -- CP-element group 65: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/assign_stmt_4355_Update/$exit
      -- CP-element group 65: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/assign_stmt_4355_Update/ack
      -- CP-element group 65: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/CONCAT_u24_u32_4363_sample_start_
      -- CP-element group 65: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/CONCAT_u24_u32_4363_Sample/$entry
      -- CP-element group 65: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/CONCAT_u24_u32_4363_Sample/rr
      -- 
    ack_2022_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 65_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_mode_sig_4353_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(65)); -- 
    rr_2030_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_2030_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(65), ack => CONCAT_u24_u32_4363_inst_req_0); -- 
    -- CP-element group 66:  transition  input  bypass 
    -- CP-element group 66: predecessors 
    -- CP-element group 66: 	65 
    -- CP-element group 66: successors 
    -- CP-element group 66:  members (3) 
      -- CP-element group 66: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/CONCAT_u24_u32_4363_sample_completed_
      -- CP-element group 66: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/CONCAT_u24_u32_4363_Sample/$exit
      -- CP-element group 66: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/CONCAT_u24_u32_4363_Sample/ra
      -- 
    ra_2031_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 66_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u24_u32_4363_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(66)); -- 
    -- CP-element group 67:  transition  place  input  bypass 
    -- CP-element group 67: predecessors 
    -- CP-element group 67: 	62 
    -- CP-element group 67: successors 
    -- CP-element group 67: 	10 
    -- CP-element group 67:  members (5) 
      -- CP-element group 67: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364__exit__
      -- CP-element group 67: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/$exit
      -- CP-element group 67: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/CONCAT_u24_u32_4363_update_completed_
      -- CP-element group 67: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/CONCAT_u24_u32_4363_Update/$exit
      -- CP-element group 67: 	 branch_block_stmt_3940/assign_stmt_4355_to_assign_stmt_4364/CONCAT_u24_u32_4363_Update/ca
      -- 
    ca_2036_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 67_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u24_u32_4363_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(67)); -- 
    -- CP-element group 68:  transition  input  bypass 
    -- CP-element group 68: predecessors 
    -- CP-element group 68: 	10 
    -- CP-element group 68: successors 
    -- CP-element group 68:  members (3) 
      -- CP-element group 68: 	 branch_block_stmt_3940/assign_stmt_4386/OR_u32_u32_4385_sample_completed_
      -- CP-element group 68: 	 branch_block_stmt_3940/assign_stmt_4386/OR_u32_u32_4385_Sample/$exit
      -- CP-element group 68: 	 branch_block_stmt_3940/assign_stmt_4386/OR_u32_u32_4385_Sample/ra
      -- 
    ra_2048_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 68_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => OR_u32_u32_4385_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(68)); -- 
    -- CP-element group 69:  branch  transition  place  input  output  bypass 
    -- CP-element group 69: predecessors 
    -- CP-element group 69: 	10 
    -- CP-element group 69: successors 
    -- CP-element group 69: 	70 
    -- CP-element group 69: 	71 
    -- CP-element group 69:  members (27) 
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387__entry__
      -- CP-element group 69: 	 branch_block_stmt_3940/assign_stmt_4386__exit__
      -- CP-element group 69: 	 branch_block_stmt_3940/assign_stmt_4386/$exit
      -- CP-element group 69: 	 branch_block_stmt_3940/assign_stmt_4386/OR_u32_u32_4385_update_completed_
      -- CP-element group 69: 	 branch_block_stmt_3940/assign_stmt_4386/OR_u32_u32_4385_Update/$exit
      -- CP-element group 69: 	 branch_block_stmt_3940/assign_stmt_4386/OR_u32_u32_4385_Update/ca
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_dead_link/$entry
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/$entry
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/$exit
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/AND_u1_u1_4390/$entry
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/AND_u1_u1_4390/$exit
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/AND_u1_u1_4390/AND_u1_u1_4390_inputs/$entry
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/AND_u1_u1_4390/AND_u1_u1_4390_inputs/$exit
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/AND_u1_u1_4390/SplitProtocol/$entry
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/AND_u1_u1_4390/SplitProtocol/$exit
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/AND_u1_u1_4390/SplitProtocol/Sample/$entry
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/AND_u1_u1_4390/SplitProtocol/Sample/$exit
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/AND_u1_u1_4390/SplitProtocol/Sample/rr
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/AND_u1_u1_4390/SplitProtocol/Sample/ra
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/AND_u1_u1_4390/SplitProtocol/Update/$entry
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/AND_u1_u1_4390/SplitProtocol/Update/$exit
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/AND_u1_u1_4390/SplitProtocol/Update/cr
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/AND_u1_u1_4390/SplitProtocol/Update/ca
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_eval_test/branch_req
      -- CP-element group 69: 	 branch_block_stmt_3940/AND_u1_u1_4390_place
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_if_link/$entry
      -- CP-element group 69: 	 branch_block_stmt_3940/if_stmt_4387_else_link/$entry
      -- 
    ca_2053_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 69_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => OR_u32_u32_4385_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(69)); -- 
    branch_req_2080_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_2080_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(69), ack => if_stmt_4387_branch_req_0); -- 
    -- CP-element group 70:  fork  transition  place  input  output  bypass 
    -- CP-element group 70: predecessors 
    -- CP-element group 70: 	69 
    -- CP-element group 70: successors 
    -- CP-element group 70: 	72 
    -- CP-element group 70: 	73 
    -- CP-element group 70:  members (10) 
      -- CP-element group 70: 	 branch_block_stmt_3940/if_stmt_4387_if_link/$exit
      -- CP-element group 70: 	 branch_block_stmt_3940/if_stmt_4387_if_link/if_choice_transition
      -- CP-element group 70: 	 branch_block_stmt_3940/assign_stmt_4394_to_call_stmt_4440__entry__
      -- CP-element group 70: 	 branch_block_stmt_3940/assign_stmt_4394_to_call_stmt_4440/$entry
      -- CP-element group 70: 	 branch_block_stmt_3940/assign_stmt_4394_to_call_stmt_4440/call_stmt_4440_sample_start_
      -- CP-element group 70: 	 branch_block_stmt_3940/assign_stmt_4394_to_call_stmt_4440/call_stmt_4440_update_start_
      -- CP-element group 70: 	 branch_block_stmt_3940/assign_stmt_4394_to_call_stmt_4440/call_stmt_4440_Sample/$entry
      -- CP-element group 70: 	 branch_block_stmt_3940/assign_stmt_4394_to_call_stmt_4440/call_stmt_4440_Sample/crr
      -- CP-element group 70: 	 branch_block_stmt_3940/assign_stmt_4394_to_call_stmt_4440/call_stmt_4440_Update/$entry
      -- CP-element group 70: 	 branch_block_stmt_3940/assign_stmt_4394_to_call_stmt_4440/call_stmt_4440_Update/ccr
      -- 
    if_choice_transition_2085_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 70_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4387_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(70)); -- 
    crr_2102_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2102_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(70), ack => call_stmt_4440_call_req_0); -- 
    ccr_2107_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2107_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(70), ack => call_stmt_4440_call_req_1); -- 
    -- CP-element group 71:  transition  input  bypass 
    -- CP-element group 71: predecessors 
    -- CP-element group 71: 	69 
    -- CP-element group 71: successors 
    -- CP-element group 71: 	11 
    -- CP-element group 71:  members (2) 
      -- CP-element group 71: 	 branch_block_stmt_3940/if_stmt_4387_else_link/$exit
      -- CP-element group 71: 	 branch_block_stmt_3940/if_stmt_4387_else_link/else_choice_transition
      -- 
    else_choice_transition_2089_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 71_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4387_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(71)); -- 
    -- CP-element group 72:  transition  input  bypass 
    -- CP-element group 72: predecessors 
    -- CP-element group 72: 	70 
    -- CP-element group 72: successors 
    -- CP-element group 72:  members (3) 
      -- CP-element group 72: 	 branch_block_stmt_3940/assign_stmt_4394_to_call_stmt_4440/call_stmt_4440_sample_completed_
      -- CP-element group 72: 	 branch_block_stmt_3940/assign_stmt_4394_to_call_stmt_4440/call_stmt_4440_Sample/$exit
      -- CP-element group 72: 	 branch_block_stmt_3940/assign_stmt_4394_to_call_stmt_4440/call_stmt_4440_Sample/cra
      -- 
    cra_2103_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 72_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_4440_call_ack_0, ack => ccu_debug_daemon_CP_1447_elements(72)); -- 
    -- CP-element group 73:  transition  place  input  bypass 
    -- CP-element group 73: predecessors 
    -- CP-element group 73: 	70 
    -- CP-element group 73: successors 
    -- CP-element group 73: 	11 
    -- CP-element group 73:  members (5) 
      -- CP-element group 73: 	 branch_block_stmt_3940/assign_stmt_4394_to_call_stmt_4440__exit__
      -- CP-element group 73: 	 branch_block_stmt_3940/assign_stmt_4394_to_call_stmt_4440/$exit
      -- CP-element group 73: 	 branch_block_stmt_3940/assign_stmt_4394_to_call_stmt_4440/call_stmt_4440_update_completed_
      -- CP-element group 73: 	 branch_block_stmt_3940/assign_stmt_4394_to_call_stmt_4440/call_stmt_4440_Update/$exit
      -- CP-element group 73: 	 branch_block_stmt_3940/assign_stmt_4394_to_call_stmt_4440/call_stmt_4440_Update/cca
      -- 
    cca_2108_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 73_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_4440_call_ack_1, ack => ccu_debug_daemon_CP_1447_elements(73)); -- 
    -- CP-element group 74:  fork  transition  place  input  output  bypass 
    -- CP-element group 74: predecessors 
    -- CP-element group 74: 	11 
    -- CP-element group 74: successors 
    -- CP-element group 74: 	76 
    -- CP-element group 74: 	77 
    -- CP-element group 74:  members (10) 
      -- CP-element group 74: 	 branch_block_stmt_3940/if_stmt_4450_if_link/$exit
      -- CP-element group 74: 	 branch_block_stmt_3940/if_stmt_4450_if_link/if_choice_transition
      -- CP-element group 74: 	 branch_block_stmt_3940/assign_stmt_4457_to_call_stmt_4465__entry__
      -- CP-element group 74: 	 branch_block_stmt_3940/assign_stmt_4457_to_call_stmt_4465/$entry
      -- CP-element group 74: 	 branch_block_stmt_3940/assign_stmt_4457_to_call_stmt_4465/call_stmt_4465_sample_start_
      -- CP-element group 74: 	 branch_block_stmt_3940/assign_stmt_4457_to_call_stmt_4465/call_stmt_4465_update_start_
      -- CP-element group 74: 	 branch_block_stmt_3940/assign_stmt_4457_to_call_stmt_4465/call_stmt_4465_Sample/$entry
      -- CP-element group 74: 	 branch_block_stmt_3940/assign_stmt_4457_to_call_stmt_4465/call_stmt_4465_Sample/crr
      -- CP-element group 74: 	 branch_block_stmt_3940/assign_stmt_4457_to_call_stmt_4465/call_stmt_4465_Update/$entry
      -- CP-element group 74: 	 branch_block_stmt_3940/assign_stmt_4457_to_call_stmt_4465/call_stmt_4465_Update/ccr
      -- 
    if_choice_transition_2140_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 74_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4450_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(74)); -- 
    crr_2157_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2157_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(74), ack => call_stmt_4465_call_req_0); -- 
    ccr_2162_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2162_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(74), ack => call_stmt_4465_call_req_1); -- 
    -- CP-element group 75:  transition  input  bypass 
    -- CP-element group 75: predecessors 
    -- CP-element group 75: 	11 
    -- CP-element group 75: successors 
    -- CP-element group 75: 	12 
    -- CP-element group 75:  members (2) 
      -- CP-element group 75: 	 branch_block_stmt_3940/if_stmt_4450_else_link/$exit
      -- CP-element group 75: 	 branch_block_stmt_3940/if_stmt_4450_else_link/else_choice_transition
      -- 
    else_choice_transition_2144_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 75_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4450_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(75)); -- 
    -- CP-element group 76:  transition  input  bypass 
    -- CP-element group 76: predecessors 
    -- CP-element group 76: 	74 
    -- CP-element group 76: successors 
    -- CP-element group 76:  members (3) 
      -- CP-element group 76: 	 branch_block_stmt_3940/assign_stmt_4457_to_call_stmt_4465/call_stmt_4465_sample_completed_
      -- CP-element group 76: 	 branch_block_stmt_3940/assign_stmt_4457_to_call_stmt_4465/call_stmt_4465_Sample/$exit
      -- CP-element group 76: 	 branch_block_stmt_3940/assign_stmt_4457_to_call_stmt_4465/call_stmt_4465_Sample/cra
      -- 
    cra_2158_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 76_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_4465_call_ack_0, ack => ccu_debug_daemon_CP_1447_elements(76)); -- 
    -- CP-element group 77:  transition  place  input  bypass 
    -- CP-element group 77: predecessors 
    -- CP-element group 77: 	74 
    -- CP-element group 77: successors 
    -- CP-element group 77: 	12 
    -- CP-element group 77:  members (5) 
      -- CP-element group 77: 	 branch_block_stmt_3940/assign_stmt_4457_to_call_stmt_4465__exit__
      -- CP-element group 77: 	 branch_block_stmt_3940/assign_stmt_4457_to_call_stmt_4465/$exit
      -- CP-element group 77: 	 branch_block_stmt_3940/assign_stmt_4457_to_call_stmt_4465/call_stmt_4465_update_completed_
      -- CP-element group 77: 	 branch_block_stmt_3940/assign_stmt_4457_to_call_stmt_4465/call_stmt_4465_Update/$exit
      -- CP-element group 77: 	 branch_block_stmt_3940/assign_stmt_4457_to_call_stmt_4465/call_stmt_4465_Update/cca
      -- 
    cca_2163_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 77_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_4465_call_ack_1, ack => ccu_debug_daemon_CP_1447_elements(77)); -- 
    -- CP-element group 78:  fork  transition  place  input  output  bypass 
    -- CP-element group 78: predecessors 
    -- CP-element group 78: 	12 
    -- CP-element group 78: successors 
    -- CP-element group 78: 	80 
    -- CP-element group 78: 	81 
    -- CP-element group 78:  members (10) 
      -- CP-element group 78: 	 branch_block_stmt_3940/if_stmt_4471_if_link/$exit
      -- CP-element group 78: 	 branch_block_stmt_3940/if_stmt_4471_if_link/if_choice_transition
      -- CP-element group 78: 	 branch_block_stmt_3940/assign_stmt_4478_to_call_stmt_4525__entry__
      -- CP-element group 78: 	 branch_block_stmt_3940/assign_stmt_4478_to_call_stmt_4525/$entry
      -- CP-element group 78: 	 branch_block_stmt_3940/assign_stmt_4478_to_call_stmt_4525/call_stmt_4525_sample_start_
      -- CP-element group 78: 	 branch_block_stmt_3940/assign_stmt_4478_to_call_stmt_4525/call_stmt_4525_update_start_
      -- CP-element group 78: 	 branch_block_stmt_3940/assign_stmt_4478_to_call_stmt_4525/call_stmt_4525_Sample/$entry
      -- CP-element group 78: 	 branch_block_stmt_3940/assign_stmt_4478_to_call_stmt_4525/call_stmt_4525_Sample/crr
      -- CP-element group 78: 	 branch_block_stmt_3940/assign_stmt_4478_to_call_stmt_4525/call_stmt_4525_Update/$entry
      -- CP-element group 78: 	 branch_block_stmt_3940/assign_stmt_4478_to_call_stmt_4525/call_stmt_4525_Update/ccr
      -- 
    if_choice_transition_2195_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 78_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4471_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(78)); -- 
    crr_2212_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2212_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(78), ack => call_stmt_4525_call_req_0); -- 
    ccr_2217_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2217_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(78), ack => call_stmt_4525_call_req_1); -- 
    -- CP-element group 79:  transition  input  bypass 
    -- CP-element group 79: predecessors 
    -- CP-element group 79: 	12 
    -- CP-element group 79: successors 
    -- CP-element group 79: 	13 
    -- CP-element group 79:  members (2) 
      -- CP-element group 79: 	 branch_block_stmt_3940/if_stmt_4471_else_link/$exit
      -- CP-element group 79: 	 branch_block_stmt_3940/if_stmt_4471_else_link/else_choice_transition
      -- 
    else_choice_transition_2199_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 79_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4471_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(79)); -- 
    -- CP-element group 80:  transition  input  bypass 
    -- CP-element group 80: predecessors 
    -- CP-element group 80: 	78 
    -- CP-element group 80: successors 
    -- CP-element group 80:  members (3) 
      -- CP-element group 80: 	 branch_block_stmt_3940/assign_stmt_4478_to_call_stmt_4525/call_stmt_4525_sample_completed_
      -- CP-element group 80: 	 branch_block_stmt_3940/assign_stmt_4478_to_call_stmt_4525/call_stmt_4525_Sample/$exit
      -- CP-element group 80: 	 branch_block_stmt_3940/assign_stmt_4478_to_call_stmt_4525/call_stmt_4525_Sample/cra
      -- 
    cra_2213_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 80_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_4525_call_ack_0, ack => ccu_debug_daemon_CP_1447_elements(80)); -- 
    -- CP-element group 81:  transition  place  input  bypass 
    -- CP-element group 81: predecessors 
    -- CP-element group 81: 	78 
    -- CP-element group 81: successors 
    -- CP-element group 81: 	13 
    -- CP-element group 81:  members (5) 
      -- CP-element group 81: 	 branch_block_stmt_3940/assign_stmt_4478_to_call_stmt_4525__exit__
      -- CP-element group 81: 	 branch_block_stmt_3940/assign_stmt_4478_to_call_stmt_4525/$exit
      -- CP-element group 81: 	 branch_block_stmt_3940/assign_stmt_4478_to_call_stmt_4525/call_stmt_4525_update_completed_
      -- CP-element group 81: 	 branch_block_stmt_3940/assign_stmt_4478_to_call_stmt_4525/call_stmt_4525_Update/$exit
      -- CP-element group 81: 	 branch_block_stmt_3940/assign_stmt_4478_to_call_stmt_4525/call_stmt_4525_Update/cca
      -- 
    cca_2218_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 81_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_4525_call_ack_1, ack => ccu_debug_daemon_CP_1447_elements(81)); -- 
    -- CP-element group 82:  fork  transition  place  input  output  bypass 
    -- CP-element group 82: predecessors 
    -- CP-element group 82: 	13 
    -- CP-element group 82: successors 
    -- CP-element group 82: 	84 
    -- CP-element group 82: 	85 
    -- CP-element group 82:  members (10) 
      -- CP-element group 82: 	 branch_block_stmt_3940/if_stmt_4536_if_link/$exit
      -- CP-element group 82: 	 branch_block_stmt_3940/if_stmt_4536_if_link/if_choice_transition
      -- CP-element group 82: 	 branch_block_stmt_3940/assign_stmt_4543_to_call_stmt_4552__entry__
      -- CP-element group 82: 	 branch_block_stmt_3940/assign_stmt_4543_to_call_stmt_4552/$entry
      -- CP-element group 82: 	 branch_block_stmt_3940/assign_stmt_4543_to_call_stmt_4552/call_stmt_4552_sample_start_
      -- CP-element group 82: 	 branch_block_stmt_3940/assign_stmt_4543_to_call_stmt_4552/call_stmt_4552_update_start_
      -- CP-element group 82: 	 branch_block_stmt_3940/assign_stmt_4543_to_call_stmt_4552/call_stmt_4552_Sample/$entry
      -- CP-element group 82: 	 branch_block_stmt_3940/assign_stmt_4543_to_call_stmt_4552/call_stmt_4552_Sample/crr
      -- CP-element group 82: 	 branch_block_stmt_3940/assign_stmt_4543_to_call_stmt_4552/call_stmt_4552_Update/$entry
      -- CP-element group 82: 	 branch_block_stmt_3940/assign_stmt_4543_to_call_stmt_4552/call_stmt_4552_Update/ccr
      -- 
    if_choice_transition_2250_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 82_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4536_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(82)); -- 
    crr_2267_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2267_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(82), ack => call_stmt_4552_call_req_0); -- 
    ccr_2272_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2272_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(82), ack => call_stmt_4552_call_req_1); -- 
    -- CP-element group 83:  transition  input  bypass 
    -- CP-element group 83: predecessors 
    -- CP-element group 83: 	13 
    -- CP-element group 83: successors 
    -- CP-element group 83: 	14 
    -- CP-element group 83:  members (2) 
      -- CP-element group 83: 	 branch_block_stmt_3940/if_stmt_4536_else_link/$exit
      -- CP-element group 83: 	 branch_block_stmt_3940/if_stmt_4536_else_link/else_choice_transition
      -- 
    else_choice_transition_2254_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 83_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4536_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(83)); -- 
    -- CP-element group 84:  transition  input  bypass 
    -- CP-element group 84: predecessors 
    -- CP-element group 84: 	82 
    -- CP-element group 84: successors 
    -- CP-element group 84:  members (3) 
      -- CP-element group 84: 	 branch_block_stmt_3940/assign_stmt_4543_to_call_stmt_4552/call_stmt_4552_sample_completed_
      -- CP-element group 84: 	 branch_block_stmt_3940/assign_stmt_4543_to_call_stmt_4552/call_stmt_4552_Sample/$exit
      -- CP-element group 84: 	 branch_block_stmt_3940/assign_stmt_4543_to_call_stmt_4552/call_stmt_4552_Sample/cra
      -- 
    cra_2268_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 84_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_4552_call_ack_0, ack => ccu_debug_daemon_CP_1447_elements(84)); -- 
    -- CP-element group 85:  transition  place  input  bypass 
    -- CP-element group 85: predecessors 
    -- CP-element group 85: 	82 
    -- CP-element group 85: successors 
    -- CP-element group 85: 	14 
    -- CP-element group 85:  members (5) 
      -- CP-element group 85: 	 branch_block_stmt_3940/assign_stmt_4543_to_call_stmt_4552__exit__
      -- CP-element group 85: 	 branch_block_stmt_3940/assign_stmt_4543_to_call_stmt_4552/$exit
      -- CP-element group 85: 	 branch_block_stmt_3940/assign_stmt_4543_to_call_stmt_4552/call_stmt_4552_update_completed_
      -- CP-element group 85: 	 branch_block_stmt_3940/assign_stmt_4543_to_call_stmt_4552/call_stmt_4552_Update/$exit
      -- CP-element group 85: 	 branch_block_stmt_3940/assign_stmt_4543_to_call_stmt_4552/call_stmt_4552_Update/cca
      -- 
    cca_2273_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 85_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_4552_call_ack_1, ack => ccu_debug_daemon_CP_1447_elements(85)); -- 
    -- CP-element group 86:  fork  transition  place  input  output  bypass 
    -- CP-element group 86: predecessors 
    -- CP-element group 86: 	14 
    -- CP-element group 86: successors 
    -- CP-element group 86: 	88 
    -- CP-element group 86: 	89 
    -- CP-element group 86:  members (10) 
      -- CP-element group 86: 	 branch_block_stmt_3940/if_stmt_4558_if_link/$exit
      -- CP-element group 86: 	 branch_block_stmt_3940/if_stmt_4558_if_link/if_choice_transition
      -- CP-element group 86: 	 branch_block_stmt_3940/assign_stmt_4565_to_call_stmt_4570__entry__
      -- CP-element group 86: 	 branch_block_stmt_3940/assign_stmt_4565_to_call_stmt_4570/$entry
      -- CP-element group 86: 	 branch_block_stmt_3940/assign_stmt_4565_to_call_stmt_4570/call_stmt_4570_sample_start_
      -- CP-element group 86: 	 branch_block_stmt_3940/assign_stmt_4565_to_call_stmt_4570/call_stmt_4570_update_start_
      -- CP-element group 86: 	 branch_block_stmt_3940/assign_stmt_4565_to_call_stmt_4570/call_stmt_4570_Sample/$entry
      -- CP-element group 86: 	 branch_block_stmt_3940/assign_stmt_4565_to_call_stmt_4570/call_stmt_4570_Sample/crr
      -- CP-element group 86: 	 branch_block_stmt_3940/assign_stmt_4565_to_call_stmt_4570/call_stmt_4570_Update/$entry
      -- CP-element group 86: 	 branch_block_stmt_3940/assign_stmt_4565_to_call_stmt_4570/call_stmt_4570_Update/ccr
      -- 
    if_choice_transition_2305_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 86_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4558_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(86)); -- 
    crr_2322_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2322_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(86), ack => call_stmt_4570_call_req_0); -- 
    ccr_2327_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2327_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(86), ack => call_stmt_4570_call_req_1); -- 
    -- CP-element group 87:  transition  input  bypass 
    -- CP-element group 87: predecessors 
    -- CP-element group 87: 	14 
    -- CP-element group 87: successors 
    -- CP-element group 87: 	15 
    -- CP-element group 87:  members (2) 
      -- CP-element group 87: 	 branch_block_stmt_3940/if_stmt_4558_else_link/$exit
      -- CP-element group 87: 	 branch_block_stmt_3940/if_stmt_4558_else_link/else_choice_transition
      -- 
    else_choice_transition_2309_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 87_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4558_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(87)); -- 
    -- CP-element group 88:  transition  input  bypass 
    -- CP-element group 88: predecessors 
    -- CP-element group 88: 	86 
    -- CP-element group 88: successors 
    -- CP-element group 88:  members (3) 
      -- CP-element group 88: 	 branch_block_stmt_3940/assign_stmt_4565_to_call_stmt_4570/call_stmt_4570_sample_completed_
      -- CP-element group 88: 	 branch_block_stmt_3940/assign_stmt_4565_to_call_stmt_4570/call_stmt_4570_Sample/$exit
      -- CP-element group 88: 	 branch_block_stmt_3940/assign_stmt_4565_to_call_stmt_4570/call_stmt_4570_Sample/cra
      -- 
    cra_2323_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 88_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_4570_call_ack_0, ack => ccu_debug_daemon_CP_1447_elements(88)); -- 
    -- CP-element group 89:  transition  place  input  bypass 
    -- CP-element group 89: predecessors 
    -- CP-element group 89: 	86 
    -- CP-element group 89: successors 
    -- CP-element group 89: 	15 
    -- CP-element group 89:  members (5) 
      -- CP-element group 89: 	 branch_block_stmt_3940/assign_stmt_4565_to_call_stmt_4570__exit__
      -- CP-element group 89: 	 branch_block_stmt_3940/assign_stmt_4565_to_call_stmt_4570/$exit
      -- CP-element group 89: 	 branch_block_stmt_3940/assign_stmt_4565_to_call_stmt_4570/call_stmt_4570_update_completed_
      -- CP-element group 89: 	 branch_block_stmt_3940/assign_stmt_4565_to_call_stmt_4570/call_stmt_4570_Update/$exit
      -- CP-element group 89: 	 branch_block_stmt_3940/assign_stmt_4565_to_call_stmt_4570/call_stmt_4570_Update/cca
      -- 
    cca_2328_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 89_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_4570_call_ack_1, ack => ccu_debug_daemon_CP_1447_elements(89)); -- 
    -- CP-element group 90:  fork  transition  place  input  output  bypass 
    -- CP-element group 90: predecessors 
    -- CP-element group 90: 	15 
    -- CP-element group 90: successors 
    -- CP-element group 90: 	92 
    -- CP-element group 90: 	93 
    -- CP-element group 90:  members (10) 
      -- CP-element group 90: 	 branch_block_stmt_3940/if_stmt_4576_if_link/$exit
      -- CP-element group 90: 	 branch_block_stmt_3940/if_stmt_4576_if_link/if_choice_transition
      -- CP-element group 90: 	 branch_block_stmt_3940/assign_stmt_4583_to_call_stmt_4588__entry__
      -- CP-element group 90: 	 branch_block_stmt_3940/assign_stmt_4583_to_call_stmt_4588/$entry
      -- CP-element group 90: 	 branch_block_stmt_3940/assign_stmt_4583_to_call_stmt_4588/call_stmt_4588_sample_start_
      -- CP-element group 90: 	 branch_block_stmt_3940/assign_stmt_4583_to_call_stmt_4588/call_stmt_4588_update_start_
      -- CP-element group 90: 	 branch_block_stmt_3940/assign_stmt_4583_to_call_stmt_4588/call_stmt_4588_Sample/$entry
      -- CP-element group 90: 	 branch_block_stmt_3940/assign_stmt_4583_to_call_stmt_4588/call_stmt_4588_Sample/crr
      -- CP-element group 90: 	 branch_block_stmt_3940/assign_stmt_4583_to_call_stmt_4588/call_stmt_4588_Update/$entry
      -- CP-element group 90: 	 branch_block_stmt_3940/assign_stmt_4583_to_call_stmt_4588/call_stmt_4588_Update/ccr
      -- 
    if_choice_transition_2360_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 90_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4576_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(90)); -- 
    crr_2377_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_2377_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(90), ack => call_stmt_4588_call_req_0); -- 
    ccr_2382_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_2382_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(90), ack => call_stmt_4588_call_req_1); -- 
    -- CP-element group 91:  transition  input  bypass 
    -- CP-element group 91: predecessors 
    -- CP-element group 91: 	15 
    -- CP-element group 91: successors 
    -- CP-element group 91: 	16 
    -- CP-element group 91:  members (2) 
      -- CP-element group 91: 	 branch_block_stmt_3940/if_stmt_4576_else_link/$exit
      -- CP-element group 91: 	 branch_block_stmt_3940/if_stmt_4576_else_link/else_choice_transition
      -- 
    else_choice_transition_2364_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 91_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4576_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(91)); -- 
    -- CP-element group 92:  transition  input  bypass 
    -- CP-element group 92: predecessors 
    -- CP-element group 92: 	90 
    -- CP-element group 92: successors 
    -- CP-element group 92:  members (3) 
      -- CP-element group 92: 	 branch_block_stmt_3940/assign_stmt_4583_to_call_stmt_4588/call_stmt_4588_sample_completed_
      -- CP-element group 92: 	 branch_block_stmt_3940/assign_stmt_4583_to_call_stmt_4588/call_stmt_4588_Sample/$exit
      -- CP-element group 92: 	 branch_block_stmt_3940/assign_stmt_4583_to_call_stmt_4588/call_stmt_4588_Sample/cra
      -- 
    cra_2378_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 92_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_4588_call_ack_0, ack => ccu_debug_daemon_CP_1447_elements(92)); -- 
    -- CP-element group 93:  transition  place  input  bypass 
    -- CP-element group 93: predecessors 
    -- CP-element group 93: 	90 
    -- CP-element group 93: successors 
    -- CP-element group 93: 	16 
    -- CP-element group 93:  members (5) 
      -- CP-element group 93: 	 branch_block_stmt_3940/assign_stmt_4583_to_call_stmt_4588__exit__
      -- CP-element group 93: 	 branch_block_stmt_3940/assign_stmt_4583_to_call_stmt_4588/$exit
      -- CP-element group 93: 	 branch_block_stmt_3940/assign_stmt_4583_to_call_stmt_4588/call_stmt_4588_update_completed_
      -- CP-element group 93: 	 branch_block_stmt_3940/assign_stmt_4583_to_call_stmt_4588/call_stmt_4588_Update/$exit
      -- CP-element group 93: 	 branch_block_stmt_3940/assign_stmt_4583_to_call_stmt_4588/call_stmt_4588_Update/cca
      -- 
    cca_2383_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 93_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_4588_call_ack_1, ack => ccu_debug_daemon_CP_1447_elements(93)); -- 
    -- CP-element group 94:  transition  input  bypass 
    -- CP-element group 94: predecessors 
    -- CP-element group 94: 	16 
    -- CP-element group 94: successors 
    -- CP-element group 94:  members (3) 
      -- CP-element group 94: 	 branch_block_stmt_3940/call_stmt_4607_to_assign_stmt_4826/call_stmt_4619_sample_completed_
      -- CP-element group 94: 	 branch_block_stmt_3940/call_stmt_4607_to_assign_stmt_4826/call_stmt_4619_Sample/$exit
      -- CP-element group 94: 	 branch_block_stmt_3940/call_stmt_4607_to_assign_stmt_4826/call_stmt_4619_Sample/cra
      -- 
    cra_2395_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 94_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_4619_call_ack_0, ack => ccu_debug_daemon_CP_1447_elements(94)); -- 
    -- CP-element group 95:  branch  transition  place  input  output  bypass 
    -- CP-element group 95: predecessors 
    -- CP-element group 95: 	16 
    -- CP-element group 95: successors 
    -- CP-element group 95: 	96 
    -- CP-element group 95: 	97 
    -- CP-element group 95:  members (41) 
      -- CP-element group 95: 	 branch_block_stmt_3940/call_stmt_4607_to_assign_stmt_4826__exit__
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827__entry__
      -- CP-element group 95: 	 branch_block_stmt_3940/call_stmt_4607_to_assign_stmt_4826/$exit
      -- CP-element group 95: 	 branch_block_stmt_3940/call_stmt_4607_to_assign_stmt_4826/call_stmt_4619_update_completed_
      -- CP-element group 95: 	 branch_block_stmt_3940/call_stmt_4607_to_assign_stmt_4826/call_stmt_4619_Update/$exit
      -- CP-element group 95: 	 branch_block_stmt_3940/call_stmt_4607_to_assign_stmt_4826/call_stmt_4619_Update/cca
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_dead_link/$entry
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/$entry
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/$exit
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/$entry
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/$exit
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/AND_u1_u1_4832_inputs/$entry
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/AND_u1_u1_4832_inputs/$exit
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/AND_u1_u1_4832_inputs/EQ_u3_u1_4830/$entry
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/AND_u1_u1_4832_inputs/EQ_u3_u1_4830/$exit
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/AND_u1_u1_4832_inputs/EQ_u3_u1_4830/EQ_u3_u1_4830_inputs/$entry
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/AND_u1_u1_4832_inputs/EQ_u3_u1_4830/EQ_u3_u1_4830_inputs/$exit
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/AND_u1_u1_4832_inputs/EQ_u3_u1_4830/SplitProtocol/$entry
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/AND_u1_u1_4832_inputs/EQ_u3_u1_4830/SplitProtocol/$exit
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/AND_u1_u1_4832_inputs/EQ_u3_u1_4830/SplitProtocol/Sample/$entry
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/AND_u1_u1_4832_inputs/EQ_u3_u1_4830/SplitProtocol/Sample/$exit
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/AND_u1_u1_4832_inputs/EQ_u3_u1_4830/SplitProtocol/Sample/rr
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/AND_u1_u1_4832_inputs/EQ_u3_u1_4830/SplitProtocol/Sample/ra
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/AND_u1_u1_4832_inputs/EQ_u3_u1_4830/SplitProtocol/Update/$entry
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/AND_u1_u1_4832_inputs/EQ_u3_u1_4830/SplitProtocol/Update/$exit
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/AND_u1_u1_4832_inputs/EQ_u3_u1_4830/SplitProtocol/Update/cr
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/AND_u1_u1_4832_inputs/EQ_u3_u1_4830/SplitProtocol/Update/ca
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/SplitProtocol/$entry
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/SplitProtocol/$exit
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/SplitProtocol/Sample/$entry
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/SplitProtocol/Sample/$exit
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/SplitProtocol/Sample/rr
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/SplitProtocol/Sample/ra
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/SplitProtocol/Update/$entry
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/SplitProtocol/Update/$exit
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/SplitProtocol/Update/cr
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/AND_u1_u1_4832/SplitProtocol/Update/ca
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_eval_test/branch_req
      -- CP-element group 95: 	 branch_block_stmt_3940/AND_u1_u1_4832_place
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_if_link/$entry
      -- CP-element group 95: 	 branch_block_stmt_3940/if_stmt_4827_else_link/$entry
      -- 
    cca_2400_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 95_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_4619_call_ack_1, ack => ccu_debug_daemon_CP_1447_elements(95)); -- 
    branch_req_2446_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_2446_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(95), ack => if_stmt_4827_branch_req_0); -- 
    -- CP-element group 96:  branch  transition  place  input  output  bypass 
    -- CP-element group 96: predecessors 
    -- CP-element group 96: 	95 
    -- CP-element group 96: successors 
    -- CP-element group 96: 	99 
    -- CP-element group 96: 	100 
    -- CP-element group 96:  members (24) 
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4827_if_link/$exit
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4827_if_link/if_choice_transition
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839__entry__
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_dead_link/$entry
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/$entry
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/$exit
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/OR_u1_u1_4842/$entry
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/OR_u1_u1_4842/$exit
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/OR_u1_u1_4842/OR_u1_u1_4842_inputs/$entry
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/OR_u1_u1_4842/OR_u1_u1_4842_inputs/$exit
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/OR_u1_u1_4842/SplitProtocol/$entry
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/OR_u1_u1_4842/SplitProtocol/$exit
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/OR_u1_u1_4842/SplitProtocol/Sample/$entry
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/OR_u1_u1_4842/SplitProtocol/Sample/$exit
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/OR_u1_u1_4842/SplitProtocol/Sample/rr
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/OR_u1_u1_4842/SplitProtocol/Sample/ra
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/OR_u1_u1_4842/SplitProtocol/Update/$entry
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/OR_u1_u1_4842/SplitProtocol/Update/$exit
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/OR_u1_u1_4842/SplitProtocol/Update/cr
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/OR_u1_u1_4842/SplitProtocol/Update/ca
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_eval_test/branch_req
      -- CP-element group 96: 	 branch_block_stmt_3940/OR_u1_u1_4842_place
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_if_link/$entry
      -- CP-element group 96: 	 branch_block_stmt_3940/if_stmt_4839_else_link/$entry
      -- 
    if_choice_transition_2451_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 96_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4827_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(96)); -- 
    branch_req_2484_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_2484_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(96), ack => if_stmt_4839_branch_req_0); -- 
    -- CP-element group 97:  transition  input  bypass 
    -- CP-element group 97: predecessors 
    -- CP-element group 97: 	95 
    -- CP-element group 97: successors 
    -- CP-element group 97: 	17 
    -- CP-element group 97:  members (2) 
      -- CP-element group 97: 	 branch_block_stmt_3940/if_stmt_4827_else_link/$exit
      -- CP-element group 97: 	 branch_block_stmt_3940/if_stmt_4827_else_link/else_choice_transition
      -- 
    else_choice_transition_2455_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 97_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4827_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(97)); -- 
    -- CP-element group 98:  merge  place  bypass 
    -- CP-element group 98: predecessors 
    -- CP-element group 98: 	100 
    -- CP-element group 98: 	101 
    -- CP-element group 98: successors 
    -- CP-element group 98: 	17 
    -- CP-element group 98:  members (1) 
      -- CP-element group 98: 	 branch_block_stmt_3940/if_stmt_4839__exit__
      -- 
    ccu_debug_daemon_CP_1447_elements(98) <= OrReduce(ccu_debug_daemon_CP_1447_elements(100) & ccu_debug_daemon_CP_1447_elements(101));
    -- CP-element group 99:  transition  place  input  bypass 
    -- CP-element group 99: predecessors 
    -- CP-element group 99: 	96 
    -- CP-element group 99: successors 
    -- CP-element group 99: 	102 
    -- CP-element group 99:  members (3) 
      -- CP-element group 99: 	 branch_block_stmt_3940/if_stmt_4839_if_link/$exit
      -- CP-element group 99: 	 branch_block_stmt_3940/if_stmt_4839_if_link/if_choice_transition
      -- CP-element group 99: 	 branch_block_stmt_3940/do_while_stmt_4843__entry__
      -- 
    if_choice_transition_2489_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 99_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4839_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(99)); -- 
    -- CP-element group 100:  transition  input  bypass 
    -- CP-element group 100: predecessors 
    -- CP-element group 100: 	96 
    -- CP-element group 100: successors 
    -- CP-element group 100: 	98 
    -- CP-element group 100:  members (2) 
      -- CP-element group 100: 	 branch_block_stmt_3940/if_stmt_4839_else_link/$exit
      -- CP-element group 100: 	 branch_block_stmt_3940/if_stmt_4839_else_link/else_choice_transition
      -- 
    else_choice_transition_2493_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 100_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4839_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(100)); -- 
    -- CP-element group 101:  place  bypass 
    -- CP-element group 101: predecessors 
    -- CP-element group 101: 	137 
    -- CP-element group 101: successors 
    -- CP-element group 101: 	98 
    -- CP-element group 101:  members (1) 
      -- CP-element group 101: 	 branch_block_stmt_3940/do_while_stmt_4843__exit__
      -- 
    ccu_debug_daemon_CP_1447_elements(101) <= ccu_debug_daemon_CP_1447_elements(137);
    -- CP-element group 102:  transition  place  bypass  pipeline-parent 
    -- CP-element group 102: predecessors 
    -- CP-element group 102: 	99 
    -- CP-element group 102: successors 
    -- CP-element group 102: 	108 
    -- CP-element group 102:  members (2) 
      -- CP-element group 102: 	 branch_block_stmt_3940/do_while_stmt_4843/$entry
      -- CP-element group 102: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843__entry__
      -- 
    ccu_debug_daemon_CP_1447_elements(102) <= ccu_debug_daemon_CP_1447_elements(99);
    -- CP-element group 103:  merge  place  bypass  pipeline-parent 
    -- CP-element group 103: predecessors 
    -- CP-element group 103: successors 
    -- CP-element group 103: 	137 
    -- CP-element group 103:  members (1) 
      -- CP-element group 103: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843__exit__
      -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(103) is bound as output of CP function.
    -- CP-element group 104:  merge  place  bypass  pipeline-parent 
    -- CP-element group 104: predecessors 
    -- CP-element group 104: successors 
    -- CP-element group 104: 	107 
    -- CP-element group 104:  members (1) 
      -- CP-element group 104: 	 branch_block_stmt_3940/do_while_stmt_4843/loop_back
      -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(104) is bound as output of CP function.
    -- CP-element group 105:  branch  transition  place  bypass  pipeline-parent 
    -- CP-element group 105: predecessors 
    -- CP-element group 105: 	110 
    -- CP-element group 105: successors 
    -- CP-element group 105: 	135 
    -- CP-element group 105: 	136 
    -- CP-element group 105:  members (3) 
      -- CP-element group 105: 	 branch_block_stmt_3940/do_while_stmt_4843/loop_taken/$entry
      -- CP-element group 105: 	 branch_block_stmt_3940/do_while_stmt_4843/loop_exit/$entry
      -- CP-element group 105: 	 branch_block_stmt_3940/do_while_stmt_4843/condition_done
      -- 
    ccu_debug_daemon_CP_1447_elements(105) <= ccu_debug_daemon_CP_1447_elements(110);
    -- CP-element group 106:  branch  place  bypass  pipeline-parent 
    -- CP-element group 106: predecessors 
    -- CP-element group 106: 	134 
    -- CP-element group 106: successors 
    -- CP-element group 106:  members (1) 
      -- CP-element group 106: 	 branch_block_stmt_3940/do_while_stmt_4843/loop_body_done
      -- 
    ccu_debug_daemon_CP_1447_elements(106) <= ccu_debug_daemon_CP_1447_elements(134);
    -- CP-element group 107:  transition  bypass  pipeline-parent 
    -- CP-element group 107: predecessors 
    -- CP-element group 107: 	104 
    -- CP-element group 107: successors 
    -- CP-element group 107: 	117 
    -- CP-element group 107:  members (1) 
      -- CP-element group 107: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/back_edge_to_loop_body
      -- 
    ccu_debug_daemon_CP_1447_elements(107) <= ccu_debug_daemon_CP_1447_elements(104);
    -- CP-element group 108:  transition  bypass  pipeline-parent 
    -- CP-element group 108: predecessors 
    -- CP-element group 108: 	102 
    -- CP-element group 108: successors 
    -- CP-element group 108: 	119 
    -- CP-element group 108:  members (1) 
      -- CP-element group 108: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/first_time_through_loop_body
      -- 
    ccu_debug_daemon_CP_1447_elements(108) <= ccu_debug_daemon_CP_1447_elements(102);
    -- CP-element group 109:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 109: predecessors 
    -- CP-element group 109: successors 
    -- CP-element group 109: 	113 
    -- CP-element group 109: 	114 
    -- CP-element group 109: 	133 
    -- CP-element group 109:  members (2) 
      -- CP-element group 109: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/$entry
      -- CP-element group 109: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/loop_body_start
      -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(109) is bound as output of CP function.
    -- CP-element group 110:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 110: predecessors 
    -- CP-element group 110: 	112 
    -- CP-element group 110: 	116 
    -- CP-element group 110: 	133 
    -- CP-element group 110: successors 
    -- CP-element group 110: 	105 
    -- CP-element group 110:  members (1) 
      -- CP-element group 110: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/condition_evaluated
      -- 
    condition_evaluated_2510_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " condition_evaluated_2510_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(110), ack => do_while_stmt_4843_branch_req_0); -- 
    ccu_debug_daemon_cp_element_group_110: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 0);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 37) := "ccu_debug_daemon_cp_element_group_110"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(112) & ccu_debug_daemon_CP_1447_elements(116) & ccu_debug_daemon_CP_1447_elements(133);
      gj_ccu_debug_daemon_cp_element_group_110 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(110), clk => clk, reset => reset); --
    end block;
    -- CP-element group 111:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 111: predecessors 
    -- CP-element group 111: 	113 
    -- CP-element group 111: marked-predecessors 
    -- CP-element group 111: 	116 
    -- CP-element group 111: successors 
    -- CP-element group 111:  members (2) 
      -- CP-element group 111: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/aggregated_phi_sample_req
      -- CP-element group 111: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/phi_stmt_4845_sample_start__ps
      -- 
    ccu_debug_daemon_cp_element_group_111: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "ccu_debug_daemon_cp_element_group_111"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(113) & ccu_debug_daemon_CP_1447_elements(116);
      gj_ccu_debug_daemon_cp_element_group_111 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(111), clk => clk, reset => reset); --
    end block;
    -- CP-element group 112:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 112: predecessors 
    -- CP-element group 112: 	115 
    -- CP-element group 112: successors 
    -- CP-element group 112: 	110 
    -- CP-element group 112:  members (1) 
      -- CP-element group 112: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/aggregated_phi_sample_ack_d
      -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(112) is a control-delay.
    cp_element_112_delay: control_delay_element  generic map(name => " 112_delay", delay_value => 1)  port map(req => ccu_debug_daemon_CP_1447_elements(115), ack => ccu_debug_daemon_CP_1447_elements(112), clk => clk, reset =>reset);
    -- CP-element group 113:  join  transition  bypass  pipeline-parent 
    -- CP-element group 113: predecessors 
    -- CP-element group 113: 	109 
    -- CP-element group 113: marked-predecessors 
    -- CP-element group 113: 	115 
    -- CP-element group 113: successors 
    -- CP-element group 113: 	111 
    -- CP-element group 113:  members (1) 
      -- CP-element group 113: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/phi_stmt_4845_sample_start_
      -- 
    ccu_debug_daemon_cp_element_group_113: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 37) := "ccu_debug_daemon_cp_element_group_113"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(109) & ccu_debug_daemon_CP_1447_elements(115);
      gj_ccu_debug_daemon_cp_element_group_113 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(113), clk => clk, reset => reset); --
    end block;
    -- CP-element group 114:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 114: predecessors 
    -- CP-element group 114: 	109 
    -- CP-element group 114: marked-predecessors 
    -- CP-element group 114: 	116 
    -- CP-element group 114: 	131 
    -- CP-element group 114: successors 
    -- CP-element group 114:  members (3) 
      -- CP-element group 114: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/aggregated_phi_update_req
      -- CP-element group 114: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/phi_stmt_4845_update_start_
      -- CP-element group 114: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/phi_stmt_4845_update_start__ps
      -- 
    ccu_debug_daemon_cp_element_group_114: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 37) := "ccu_debug_daemon_cp_element_group_114"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(109) & ccu_debug_daemon_CP_1447_elements(116) & ccu_debug_daemon_CP_1447_elements(131);
      gj_ccu_debug_daemon_cp_element_group_114 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(114), clk => clk, reset => reset); --
    end block;
    -- CP-element group 115:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 115: predecessors 
    -- CP-element group 115: successors 
    -- CP-element group 115: 	112 
    -- CP-element group 115: 	134 
    -- CP-element group 115: marked-successors 
    -- CP-element group 115: 	113 
    -- CP-element group 115:  members (3) 
      -- CP-element group 115: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/aggregated_phi_sample_ack
      -- CP-element group 115: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/phi_stmt_4845_sample_completed_
      -- CP-element group 115: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/phi_stmt_4845_sample_completed__ps
      -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(115) is bound as output of CP function.
    -- CP-element group 116:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 116: predecessors 
    -- CP-element group 116: successors 
    -- CP-element group 116: 	110 
    -- CP-element group 116: 	130 
    -- CP-element group 116: marked-successors 
    -- CP-element group 116: 	111 
    -- CP-element group 116: 	114 
    -- CP-element group 116:  members (3) 
      -- CP-element group 116: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/aggregated_phi_update_ack
      -- CP-element group 116: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/phi_stmt_4845_update_completed_
      -- CP-element group 116: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/phi_stmt_4845_update_completed__ps
      -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(116) is bound as output of CP function.
    -- CP-element group 117:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 117: predecessors 
    -- CP-element group 117: 	107 
    -- CP-element group 117: successors 
    -- CP-element group 117:  members (1) 
      -- CP-element group 117: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/phi_stmt_4845_loopback_trigger
      -- 
    ccu_debug_daemon_CP_1447_elements(117) <= ccu_debug_daemon_CP_1447_elements(107);
    -- CP-element group 118:  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 118: predecessors 
    -- CP-element group 118: successors 
    -- CP-element group 118:  members (2) 
      -- CP-element group 118: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/phi_stmt_4845_loopback_sample_req
      -- CP-element group 118: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/phi_stmt_4845_loopback_sample_req_ps
      -- 
    phi_stmt_4845_loopback_sample_req_2526_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_4845_loopback_sample_req_2526_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(118), ack => phi_stmt_4845_req_1); -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(118) is bound as output of CP function.
    -- CP-element group 119:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 119: predecessors 
    -- CP-element group 119: 	108 
    -- CP-element group 119: successors 
    -- CP-element group 119:  members (1) 
      -- CP-element group 119: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/phi_stmt_4845_entry_trigger
      -- 
    ccu_debug_daemon_CP_1447_elements(119) <= ccu_debug_daemon_CP_1447_elements(108);
    -- CP-element group 120:  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 120: predecessors 
    -- CP-element group 120: successors 
    -- CP-element group 120:  members (2) 
      -- CP-element group 120: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/phi_stmt_4845_entry_sample_req
      -- CP-element group 120: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/phi_stmt_4845_entry_sample_req_ps
      -- 
    phi_stmt_4845_entry_sample_req_2529_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_4845_entry_sample_req_2529_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(120), ack => phi_stmt_4845_req_0); -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(120) is bound as output of CP function.
    -- CP-element group 121:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 121: predecessors 
    -- CP-element group 121: successors 
    -- CP-element group 121:  members (2) 
      -- CP-element group 121: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/phi_stmt_4845_phi_mux_ack
      -- CP-element group 121: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/phi_stmt_4845_phi_mux_ack_ps
      -- 
    phi_stmt_4845_phi_mux_ack_2532_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 121_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_4845_ack_0, ack => ccu_debug_daemon_CP_1447_elements(121)); -- 
    -- CP-element group 122:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 122: predecessors 
    -- CP-element group 122: successors 
    -- CP-element group 122:  members (4) 
      -- CP-element group 122: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_ZERO_3_4847_sample_completed__ps
      -- CP-element group 122: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_ZERO_3_4847_sample_start_
      -- CP-element group 122: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_ZERO_3_4847_sample_completed_
      -- CP-element group 122: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_ZERO_3_4847_sample_start__ps
      -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(122) is bound as output of CP function.
    -- CP-element group 123:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 123: predecessors 
    -- CP-element group 123: successors 
    -- CP-element group 123: 	125 
    -- CP-element group 123:  members (2) 
      -- CP-element group 123: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_ZERO_3_4847_update_start__ps
      -- CP-element group 123: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_ZERO_3_4847_update_start_
      -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(123) is bound as output of CP function.
    -- CP-element group 124:  join  transition  bypass  pipeline-parent 
    -- CP-element group 124: predecessors 
    -- CP-element group 124: 	125 
    -- CP-element group 124: successors 
    -- CP-element group 124:  members (1) 
      -- CP-element group 124: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_ZERO_3_4847_update_completed__ps
      -- 
    ccu_debug_daemon_CP_1447_elements(124) <= ccu_debug_daemon_CP_1447_elements(125);
    -- CP-element group 125:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 125: predecessors 
    -- CP-element group 125: 	123 
    -- CP-element group 125: successors 
    -- CP-element group 125: 	124 
    -- CP-element group 125:  members (1) 
      -- CP-element group 125: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_ZERO_3_4847_update_completed_
      -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(125) is a control-delay.
    cp_element_125_delay: control_delay_element  generic map(name => " 125_delay", delay_value => 1)  port map(req => ccu_debug_daemon_CP_1447_elements(123), ack => ccu_debug_daemon_CP_1447_elements(125), clk => clk, reset =>reset);
    -- CP-element group 126:  join  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 126: predecessors 
    -- CP-element group 126: successors 
    -- CP-element group 126: 	128 
    -- CP-element group 126:  members (4) 
      -- CP-element group 126: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_nI_4848_Sample/req
      -- CP-element group 126: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_nI_4848_Sample/$entry
      -- CP-element group 126: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_nI_4848_sample_start__ps
      -- CP-element group 126: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_nI_4848_sample_start_
      -- 
    req_2553_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2553_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(126), ack => nI_4854_4848_buf_req_0); -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(126) is bound as output of CP function.
    -- CP-element group 127:  join  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 127: predecessors 
    -- CP-element group 127: successors 
    -- CP-element group 127: 	129 
    -- CP-element group 127:  members (4) 
      -- CP-element group 127: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_nI_4848_update_start__ps
      -- CP-element group 127: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_nI_4848_Update/req
      -- CP-element group 127: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_nI_4848_Update/$entry
      -- CP-element group 127: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_nI_4848_update_start_
      -- 
    req_2558_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2558_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(127), ack => nI_4854_4848_buf_req_1); -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(127) is bound as output of CP function.
    -- CP-element group 128:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 128: predecessors 
    -- CP-element group 128: 	126 
    -- CP-element group 128: successors 
    -- CP-element group 128:  members (4) 
      -- CP-element group 128: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_nI_4848_sample_completed__ps
      -- CP-element group 128: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_nI_4848_Sample/ack
      -- CP-element group 128: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_nI_4848_Sample/$exit
      -- CP-element group 128: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_nI_4848_sample_completed_
      -- 
    ack_2554_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 128_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nI_4854_4848_buf_ack_0, ack => ccu_debug_daemon_CP_1447_elements(128)); -- 
    -- CP-element group 129:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 129: predecessors 
    -- CP-element group 129: 	127 
    -- CP-element group 129: successors 
    -- CP-element group 129:  members (4) 
      -- CP-element group 129: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_nI_4848_update_completed__ps
      -- CP-element group 129: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_nI_4848_Update/ack
      -- CP-element group 129: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_nI_4848_Update/$exit
      -- CP-element group 129: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/R_nI_4848_update_completed_
      -- 
    ack_2559_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 129_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nI_4854_4848_buf_ack_1, ack => ccu_debug_daemon_CP_1447_elements(129)); -- 
    -- CP-element group 130:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 130: predecessors 
    -- CP-element group 130: 	116 
    -- CP-element group 130: marked-predecessors 
    -- CP-element group 130: 	132 
    -- CP-element group 130: successors 
    -- CP-element group 130: 	131 
    -- CP-element group 130:  members (3) 
      -- CP-element group 130: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_sample_start_
      -- CP-element group 130: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_Sample/req
      -- CP-element group 130: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_Sample/$entry
      -- 
    req_2568_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2568_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(130), ack => WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_inst_req_0); -- 
    ccu_debug_daemon_cp_element_group_130: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "ccu_debug_daemon_cp_element_group_130"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(116) & ccu_debug_daemon_CP_1447_elements(132);
      gj_ccu_debug_daemon_cp_element_group_130 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(130), clk => clk, reset => reset); --
    end block;
    -- CP-element group 131:  fork  transition  input  output  bypass  pipeline-parent 
    -- CP-element group 131: predecessors 
    -- CP-element group 131: 	130 
    -- CP-element group 131: successors 
    -- CP-element group 131: 	132 
    -- CP-element group 131: marked-successors 
    -- CP-element group 131: 	114 
    -- CP-element group 131:  members (6) 
      -- CP-element group 131: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_update_start_
      -- CP-element group 131: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_Update/req
      -- CP-element group 131: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_Update/$entry
      -- CP-element group 131: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_Sample/ack
      -- CP-element group 131: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_sample_completed_
      -- CP-element group 131: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_Sample/$exit
      -- 
    ack_2569_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 131_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(131)); -- 
    req_2573_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2573_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(131), ack => WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_inst_req_1); -- 
    -- CP-element group 132:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 132: predecessors 
    -- CP-element group 132: 	131 
    -- CP-element group 132: successors 
    -- CP-element group 132: 	134 
    -- CP-element group 132: marked-successors 
    -- CP-element group 132: 	130 
    -- CP-element group 132:  members (3) 
      -- CP-element group 132: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_update_completed_
      -- CP-element group 132: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_Update/ack
      -- CP-element group 132: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_Update/$exit
      -- 
    ack_2574_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 132_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(132)); -- 
    -- CP-element group 133:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 133: predecessors 
    -- CP-element group 133: 	109 
    -- CP-element group 133: successors 
    -- CP-element group 133: 	110 
    -- CP-element group 133:  members (1) 
      -- CP-element group 133: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/loop_body_delay_to_condition_start
      -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(133) is a control-delay.
    cp_element_133_delay: control_delay_element  generic map(name => " 133_delay", delay_value => 1)  port map(req => ccu_debug_daemon_CP_1447_elements(109), ack => ccu_debug_daemon_CP_1447_elements(133), clk => clk, reset =>reset);
    -- CP-element group 134:  join  transition  bypass  pipeline-parent 
    -- CP-element group 134: predecessors 
    -- CP-element group 134: 	115 
    -- CP-element group 134: 	132 
    -- CP-element group 134: successors 
    -- CP-element group 134: 	106 
    -- CP-element group 134:  members (1) 
      -- CP-element group 134: 	 branch_block_stmt_3940/do_while_stmt_4843/do_while_stmt_4843_loop_body/$exit
      -- 
    ccu_debug_daemon_cp_element_group_134: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 7);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "ccu_debug_daemon_cp_element_group_134"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(115) & ccu_debug_daemon_CP_1447_elements(132);
      gj_ccu_debug_daemon_cp_element_group_134 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(134), clk => clk, reset => reset); --
    end block;
    -- CP-element group 135:  transition  input  bypass  pipeline-parent 
    -- CP-element group 135: predecessors 
    -- CP-element group 135: 	105 
    -- CP-element group 135: successors 
    -- CP-element group 135:  members (2) 
      -- CP-element group 135: 	 branch_block_stmt_3940/do_while_stmt_4843/loop_exit/ack
      -- CP-element group 135: 	 branch_block_stmt_3940/do_while_stmt_4843/loop_exit/$exit
      -- 
    ack_2579_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 135_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => do_while_stmt_4843_branch_ack_0, ack => ccu_debug_daemon_CP_1447_elements(135)); -- 
    -- CP-element group 136:  transition  input  bypass  pipeline-parent 
    -- CP-element group 136: predecessors 
    -- CP-element group 136: 	105 
    -- CP-element group 136: successors 
    -- CP-element group 136:  members (2) 
      -- CP-element group 136: 	 branch_block_stmt_3940/do_while_stmt_4843/loop_taken/ack
      -- CP-element group 136: 	 branch_block_stmt_3940/do_while_stmt_4843/loop_taken/$exit
      -- 
    ack_2583_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 136_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => do_while_stmt_4843_branch_ack_1, ack => ccu_debug_daemon_CP_1447_elements(136)); -- 
    -- CP-element group 137:  transition  bypass  pipeline-parent 
    -- CP-element group 137: predecessors 
    -- CP-element group 137: 	103 
    -- CP-element group 137: successors 
    -- CP-element group 137: 	101 
    -- CP-element group 137:  members (1) 
      -- CP-element group 137: 	 branch_block_stmt_3940/do_while_stmt_4843/$exit
      -- 
    ccu_debug_daemon_CP_1447_elements(137) <= ccu_debug_daemon_CP_1447_elements(103);
    -- CP-element group 138:  transition  input  output  bypass 
    -- CP-element group 138: predecessors 
    -- CP-element group 138: 	17 
    -- CP-element group 138: successors 
    -- CP-element group 138: 	139 
    -- CP-element group 138:  members (6) 
      -- CP-element group 138: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4904_Update/$entry
      -- CP-element group 138: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4904_Sample/ack
      -- CP-element group 138: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4904_Sample/$exit
      -- CP-element group 138: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4904_Update/req
      -- CP-element group 138: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4904_update_start_
      -- CP-element group 138: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4904_sample_completed_
      -- 
    ack_2596_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 138_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_debug_interface_4904_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(138)); -- 
    req_2600_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2600_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(138), ack => WPIPE_ccu_to_debug_interface_4904_inst_req_1); -- 
    -- CP-element group 139:  transition  input  output  bypass 
    -- CP-element group 139: predecessors 
    -- CP-element group 139: 	138 
    -- CP-element group 139: successors 
    -- CP-element group 139: 	140 
    -- CP-element group 139:  members (6) 
      -- CP-element group 139: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4911_sample_start_
      -- CP-element group 139: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4904_Update/$exit
      -- CP-element group 139: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4904_Update/ack
      -- CP-element group 139: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4911_Sample/$entry
      -- CP-element group 139: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4904_update_completed_
      -- CP-element group 139: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4911_Sample/req
      -- 
    ack_2601_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 139_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_debug_interface_4904_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(139)); -- 
    req_2609_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2609_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(139), ack => WPIPE_ccu_to_debug_interface_4911_inst_req_0); -- 
    -- CP-element group 140:  transition  input  output  bypass 
    -- CP-element group 140: predecessors 
    -- CP-element group 140: 	139 
    -- CP-element group 140: successors 
    -- CP-element group 140: 	141 
    -- CP-element group 140:  members (6) 
      -- CP-element group 140: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4911_sample_completed_
      -- CP-element group 140: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4911_update_start_
      -- CP-element group 140: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4911_Update/req
      -- CP-element group 140: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4911_Sample/$exit
      -- CP-element group 140: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4911_Update/$entry
      -- CP-element group 140: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4911_Sample/ack
      -- 
    ack_2610_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 140_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_debug_interface_4911_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(140)); -- 
    req_2614_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2614_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(140), ack => WPIPE_ccu_to_debug_interface_4911_inst_req_1); -- 
    -- CP-element group 141:  fork  transition  place  input  output  bypass 
    -- CP-element group 141: predecessors 
    -- CP-element group 141: 	140 
    -- CP-element group 141: successors 
    -- CP-element group 141: 	152 
    -- CP-element group 141: 	154 
    -- CP-element group 141: 	155 
    -- CP-element group 141: 	157 
    -- CP-element group 141: 	158 
    -- CP-element group 141: 	160 
    -- CP-element group 141: 	161 
    -- CP-element group 141: 	163 
    -- CP-element group 141: 	165 
    -- CP-element group 141: 	166 
    -- CP-element group 141: 	168 
    -- CP-element group 141: 	169 
    -- CP-element group 141: 	171 
    -- CP-element group 141: 	172 
    -- CP-element group 141:  members (59) 
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3946/phi_stmt_3946_sources/RPIPE_debug_interface_to_ccu_3950/Sample/req
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3946/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913__exit__
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4911_update_completed_
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3971/phi_stmt_3971_sources/Interlock/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3971/phi_stmt_3971_sources/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3946/phi_stmt_3946_sources/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3946/phi_stmt_3946_sources/RPIPE_debug_interface_to_ccu_3950/Sample/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3971/phi_stmt_3971_sources/Interlock/Sample/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3971/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3946/phi_stmt_3946_sources/RPIPE_debug_interface_to_ccu_3950/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4911_Update/$exit
      -- CP-element group 141: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/$exit
      -- CP-element group 141: 	 branch_block_stmt_3940/assign_stmt_4906_to_assign_stmt_4913/WPIPE_ccu_to_debug_interface_4911_Update/ack
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3971/phi_stmt_3971_sources/Interlock/Sample/req
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3971/phi_stmt_3971_sources/Interlock/Update/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3971/phi_stmt_3971_sources/Interlock/Update/req
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3959/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3959/phi_stmt_3959_sources/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3959/phi_stmt_3959_sources/Interlock/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3959/phi_stmt_3959_sources/Interlock/Sample/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3959/phi_stmt_3959_sources/Interlock/Sample/req
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3959/phi_stmt_3959_sources/Interlock/Update/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3959/phi_stmt_3959_sources/Interlock/Update/req
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3951/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3951/phi_stmt_3951_sources/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3951/phi_stmt_3951_sources/Interlock/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3951/phi_stmt_3951_sources/Interlock/Sample/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3951/phi_stmt_3951_sources/Interlock/Sample/req
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3951/phi_stmt_3951_sources/Interlock/Update/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3951/phi_stmt_3951_sources/Interlock/Update/req
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3942/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3942/phi_stmt_3942_sources/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3942/phi_stmt_3942_sources/RPIPE_ccu_daemon_to_ccu_debug_daemon_3945/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3942/phi_stmt_3942_sources/RPIPE_ccu_daemon_to_ccu_debug_daemon_3945/Sample/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3942/phi_stmt_3942_sources/RPIPE_ccu_daemon_to_ccu_debug_daemon_3945/Sample/req
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3963/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3963/phi_stmt_3963_sources/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3963/phi_stmt_3963_sources/Interlock/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3963/phi_stmt_3963_sources/Interlock/Sample/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3963/phi_stmt_3963_sources/Interlock/Sample/req
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3963/phi_stmt_3963_sources/Interlock/Update/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3963/phi_stmt_3963_sources/Interlock/Update/req
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3967/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3967/phi_stmt_3967_sources/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3967/phi_stmt_3967_sources/Interlock/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3967/phi_stmt_3967_sources/Interlock/Sample/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3967/phi_stmt_3967_sources/Interlock/Sample/req
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3967/phi_stmt_3967_sources/Interlock/Update/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3967/phi_stmt_3967_sources/Interlock/Update/req
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3955/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3955/phi_stmt_3955_sources/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3955/phi_stmt_3955_sources/Interlock/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3955/phi_stmt_3955_sources/Interlock/Sample/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3955/phi_stmt_3955_sources/Interlock/Sample/req
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3955/phi_stmt_3955_sources/Interlock/Update/$entry
      -- CP-element group 141: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3955/phi_stmt_3955_sources/Interlock/Update/req
      -- 
    ack_2615_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 141_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_debug_interface_4911_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(141)); -- 
    req_2702_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2702_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(141), ack => RPIPE_debug_interface_to_ccu_3950_inst_req_0); -- 
    req_2722_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2722_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(141), ack => get_from_dbg_4223_3974_buf_req_0); -- 
    req_2727_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2727_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(141), ack => get_from_dbg_4223_3974_buf_req_1); -- 
    req_2742_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2742_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(141), ack => next_second_word_4247_3962_buf_req_0); -- 
    req_2747_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2747_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(141), ack => next_second_word_4247_3962_buf_req_1); -- 
    req_2762_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2762_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(141), ack => nCCD_STATE_4184_3954_buf_req_0); -- 
    req_2767_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2767_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(141), ack => nCCD_STATE_4184_3954_buf_req_1); -- 
    req_2782_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2782_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(141), ack => RPIPE_ccu_daemon_to_ccu_debug_daemon_3945_inst_req_0); -- 
    req_2802_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2802_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(141), ack => next_third_word_4257_3966_buf_req_0); -- 
    req_2807_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2807_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(141), ack => next_third_word_4257_3966_buf_req_1); -- 
    req_2822_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2822_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(141), ack => next_fourth_word_4267_3970_buf_req_0); -- 
    req_2827_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2827_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(141), ack => next_fourth_word_4267_3970_buf_req_1); -- 
    req_2842_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2842_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(141), ack => next_first_word_4237_3958_buf_req_0); -- 
    req_2847_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2847_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(141), ack => next_first_word_4237_3958_buf_req_1); -- 
    -- CP-element group 142:  fork  transition  bypass 
    -- CP-element group 142: predecessors 
    -- CP-element group 142: 	0 
    -- CP-element group 142: successors 
    -- CP-element group 142: 	143 
    -- CP-element group 142: 	144 
    -- CP-element group 142: 	145 
    -- CP-element group 142: 	146 
    -- CP-element group 142: 	147 
    -- CP-element group 142: 	148 
    -- CP-element group 142: 	149 
    -- CP-element group 142: 	150 
    -- CP-element group 142:  members (17) 
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3959/$entry
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3959/phi_stmt_3959_sources/$entry
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3955/$entry
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3955/phi_stmt_3955_sources/$entry
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3951/$entry
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3951/phi_stmt_3951_sources/$entry
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3942/phi_stmt_3942_sources/$entry
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3963/$entry
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3971/phi_stmt_3971_sources/$entry
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3971/$entry
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3942/$entry
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3967/phi_stmt_3967_sources/$entry
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3946/phi_stmt_3946_sources/$entry
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3967/$entry
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3946/$entry
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/$entry
      -- CP-element group 142: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3963/phi_stmt_3963_sources/$entry
      -- 
    ccu_debug_daemon_CP_1447_elements(142) <= ccu_debug_daemon_CP_1447_elements(0);
    -- CP-element group 143:  transition  output  delay-element  bypass 
    -- CP-element group 143: predecessors 
    -- CP-element group 143: 	142 
    -- CP-element group 143: successors 
    -- CP-element group 143: 	151 
    -- CP-element group 143:  members (4) 
      -- CP-element group 143: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3946/phi_stmt_3946_req
      -- CP-element group 143: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3946/phi_stmt_3946_sources/konst_3948_konst_delay_trans
      -- CP-element group 143: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3946/phi_stmt_3946_sources/$exit
      -- CP-element group 143: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3946/$exit
      -- 
    phi_stmt_3946_req_2630_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_3946_req_2630_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(143), ack => phi_stmt_3946_req_0); -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(143) is a control-delay.
    cp_element_143_delay: control_delay_element  generic map(name => " 143_delay", delay_value => 1)  port map(req => ccu_debug_daemon_CP_1447_elements(142), ack => ccu_debug_daemon_CP_1447_elements(143), clk => clk, reset =>reset);
    -- CP-element group 144:  transition  output  delay-element  bypass 
    -- CP-element group 144: predecessors 
    -- CP-element group 144: 	142 
    -- CP-element group 144: successors 
    -- CP-element group 144: 	151 
    -- CP-element group 144:  members (4) 
      -- CP-element group 144: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3971/phi_stmt_3971_sources/$exit
      -- CP-element group 144: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3971/phi_stmt_3971_sources/konst_3973_konst_delay_trans
      -- CP-element group 144: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3971/phi_stmt_3971_req
      -- CP-element group 144: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3971/$exit
      -- 
    phi_stmt_3971_req_2638_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_3971_req_2638_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(144), ack => phi_stmt_3971_req_0); -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(144) is a control-delay.
    cp_element_144_delay: control_delay_element  generic map(name => " 144_delay", delay_value => 1)  port map(req => ccu_debug_daemon_CP_1447_elements(142), ack => ccu_debug_daemon_CP_1447_elements(144), clk => clk, reset =>reset);
    -- CP-element group 145:  transition  output  delay-element  bypass 
    -- CP-element group 145: predecessors 
    -- CP-element group 145: 	142 
    -- CP-element group 145: successors 
    -- CP-element group 145: 	151 
    -- CP-element group 145:  members (4) 
      -- CP-element group 145: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3959/$exit
      -- CP-element group 145: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3959/phi_stmt_3959_sources/$exit
      -- CP-element group 145: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3959/phi_stmt_3959_sources/konst_3961_konst_delay_trans
      -- CP-element group 145: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3959/phi_stmt_3959_req
      -- 
    phi_stmt_3959_req_2646_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_3959_req_2646_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(145), ack => phi_stmt_3959_req_0); -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(145) is a control-delay.
    cp_element_145_delay: control_delay_element  generic map(name => " 145_delay", delay_value => 1)  port map(req => ccu_debug_daemon_CP_1447_elements(142), ack => ccu_debug_daemon_CP_1447_elements(145), clk => clk, reset =>reset);
    -- CP-element group 146:  transition  output  delay-element  bypass 
    -- CP-element group 146: predecessors 
    -- CP-element group 146: 	142 
    -- CP-element group 146: successors 
    -- CP-element group 146: 	151 
    -- CP-element group 146:  members (4) 
      -- CP-element group 146: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3951/$exit
      -- CP-element group 146: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3951/phi_stmt_3951_sources/$exit
      -- CP-element group 146: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3951/phi_stmt_3951_sources/R_CCD_IDLE_3953_konst_delay_trans
      -- CP-element group 146: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3951/phi_stmt_3951_req
      -- 
    phi_stmt_3951_req_2654_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_3951_req_2654_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(146), ack => phi_stmt_3951_req_0); -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(146) is a control-delay.
    cp_element_146_delay: control_delay_element  generic map(name => " 146_delay", delay_value => 1)  port map(req => ccu_debug_daemon_CP_1447_elements(142), ack => ccu_debug_daemon_CP_1447_elements(146), clk => clk, reset =>reset);
    -- CP-element group 147:  transition  output  delay-element  bypass 
    -- CP-element group 147: predecessors 
    -- CP-element group 147: 	142 
    -- CP-element group 147: successors 
    -- CP-element group 147: 	151 
    -- CP-element group 147:  members (4) 
      -- CP-element group 147: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3942/$exit
      -- CP-element group 147: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3942/phi_stmt_3942_sources/konst_3944_konst_delay_trans
      -- CP-element group 147: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3942/phi_stmt_3942_req
      -- CP-element group 147: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3942/phi_stmt_3942_sources/$exit
      -- 
    phi_stmt_3942_req_2662_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_3942_req_2662_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(147), ack => phi_stmt_3942_req_0); -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(147) is a control-delay.
    cp_element_147_delay: control_delay_element  generic map(name => " 147_delay", delay_value => 1)  port map(req => ccu_debug_daemon_CP_1447_elements(142), ack => ccu_debug_daemon_CP_1447_elements(147), clk => clk, reset =>reset);
    -- CP-element group 148:  transition  output  delay-element  bypass 
    -- CP-element group 148: predecessors 
    -- CP-element group 148: 	142 
    -- CP-element group 148: successors 
    -- CP-element group 148: 	151 
    -- CP-element group 148:  members (4) 
      -- CP-element group 148: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3963/phi_stmt_3963_req
      -- CP-element group 148: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3963/phi_stmt_3963_sources/konst_3965_konst_delay_trans
      -- CP-element group 148: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3963/phi_stmt_3963_sources/$exit
      -- CP-element group 148: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3963/$exit
      -- 
    phi_stmt_3963_req_2670_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_3963_req_2670_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(148), ack => phi_stmt_3963_req_0); -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(148) is a control-delay.
    cp_element_148_delay: control_delay_element  generic map(name => " 148_delay", delay_value => 1)  port map(req => ccu_debug_daemon_CP_1447_elements(142), ack => ccu_debug_daemon_CP_1447_elements(148), clk => clk, reset =>reset);
    -- CP-element group 149:  transition  output  delay-element  bypass 
    -- CP-element group 149: predecessors 
    -- CP-element group 149: 	142 
    -- CP-element group 149: successors 
    -- CP-element group 149: 	151 
    -- CP-element group 149:  members (4) 
      -- CP-element group 149: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3967/phi_stmt_3967_req
      -- CP-element group 149: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3967/phi_stmt_3967_sources/konst_3969_konst_delay_trans
      -- CP-element group 149: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3967/phi_stmt_3967_sources/$exit
      -- CP-element group 149: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3967/$exit
      -- 
    phi_stmt_3967_req_2678_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_3967_req_2678_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(149), ack => phi_stmt_3967_req_0); -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(149) is a control-delay.
    cp_element_149_delay: control_delay_element  generic map(name => " 149_delay", delay_value => 1)  port map(req => ccu_debug_daemon_CP_1447_elements(142), ack => ccu_debug_daemon_CP_1447_elements(149), clk => clk, reset =>reset);
    -- CP-element group 150:  transition  output  delay-element  bypass 
    -- CP-element group 150: predecessors 
    -- CP-element group 150: 	142 
    -- CP-element group 150: successors 
    -- CP-element group 150: 	151 
    -- CP-element group 150:  members (4) 
      -- CP-element group 150: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3955/phi_stmt_3955_req
      -- CP-element group 150: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3955/$exit
      -- CP-element group 150: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3955/phi_stmt_3955_sources/$exit
      -- CP-element group 150: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/phi_stmt_3955/phi_stmt_3955_sources/konst_3957_konst_delay_trans
      -- 
    phi_stmt_3955_req_2686_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_3955_req_2686_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(150), ack => phi_stmt_3955_req_0); -- 
    -- Element group ccu_debug_daemon_CP_1447_elements(150) is a control-delay.
    cp_element_150_delay: control_delay_element  generic map(name => " 150_delay", delay_value => 1)  port map(req => ccu_debug_daemon_CP_1447_elements(142), ack => ccu_debug_daemon_CP_1447_elements(150), clk => clk, reset =>reset);
    -- CP-element group 151:  join  transition  bypass 
    -- CP-element group 151: predecessors 
    -- CP-element group 151: 	143 
    -- CP-element group 151: 	144 
    -- CP-element group 151: 	145 
    -- CP-element group 151: 	146 
    -- CP-element group 151: 	147 
    -- CP-element group 151: 	148 
    -- CP-element group 151: 	149 
    -- CP-element group 151: 	150 
    -- CP-element group 151: successors 
    -- CP-element group 151: 	175 
    -- CP-element group 151:  members (1) 
      -- CP-element group 151: 	 branch_block_stmt_3940/merge_stmt_3941__entry___PhiReq/$exit
      -- 
    ccu_debug_daemon_cp_element_group_151: block -- 
      constant place_capacities: IntegerArray(0 to 7) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1);
      constant place_markings: IntegerArray(0 to 7)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0);
      constant place_delays: IntegerArray(0 to 7) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0);
      constant joinName: string(1 to 37) := "ccu_debug_daemon_cp_element_group_151"; 
      signal preds: BooleanArray(1 to 8); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(143) & ccu_debug_daemon_CP_1447_elements(144) & ccu_debug_daemon_CP_1447_elements(145) & ccu_debug_daemon_CP_1447_elements(146) & ccu_debug_daemon_CP_1447_elements(147) & ccu_debug_daemon_CP_1447_elements(148) & ccu_debug_daemon_CP_1447_elements(149) & ccu_debug_daemon_CP_1447_elements(150);
      gj_ccu_debug_daemon_cp_element_group_151 : generic_join generic map(name => joinName, number_of_predecessors => 8, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(151), clk => clk, reset => reset); --
    end block;
    -- CP-element group 152:  transition  input  output  bypass 
    -- CP-element group 152: predecessors 
    -- CP-element group 152: 	141 
    -- CP-element group 152: successors 
    -- CP-element group 152: 	153 
    -- CP-element group 152:  members (4) 
      -- CP-element group 152: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3946/phi_stmt_3946_sources/RPIPE_debug_interface_to_ccu_3950/Update/req
      -- CP-element group 152: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3946/phi_stmt_3946_sources/RPIPE_debug_interface_to_ccu_3950/Sample/ack
      -- CP-element group 152: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3946/phi_stmt_3946_sources/RPIPE_debug_interface_to_ccu_3950/Sample/$exit
      -- CP-element group 152: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3946/phi_stmt_3946_sources/RPIPE_debug_interface_to_ccu_3950/Update/$entry
      -- 
    ack_2703_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 152_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_debug_interface_to_ccu_3950_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(152)); -- 
    req_2707_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2707_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(152), ack => RPIPE_debug_interface_to_ccu_3950_inst_req_1); -- 
    -- CP-element group 153:  transition  input  output  bypass 
    -- CP-element group 153: predecessors 
    -- CP-element group 153: 	152 
    -- CP-element group 153: successors 
    -- CP-element group 153: 	174 
    -- CP-element group 153:  members (6) 
      -- CP-element group 153: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3946/$exit
      -- CP-element group 153: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3946/phi_stmt_3946_sources/RPIPE_debug_interface_to_ccu_3950/Update/$exit
      -- CP-element group 153: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3946/phi_stmt_3946_sources/$exit
      -- CP-element group 153: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3946/phi_stmt_3946_req
      -- CP-element group 153: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3946/phi_stmt_3946_sources/RPIPE_debug_interface_to_ccu_3950/Update/ack
      -- CP-element group 153: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3946/phi_stmt_3946_sources/RPIPE_debug_interface_to_ccu_3950/$exit
      -- 
    ack_2708_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 153_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_debug_interface_to_ccu_3950_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(153)); -- 
    phi_stmt_3946_req_2709_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_3946_req_2709_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(153), ack => phi_stmt_3946_req_1); -- 
    -- CP-element group 154:  transition  input  bypass 
    -- CP-element group 154: predecessors 
    -- CP-element group 154: 	141 
    -- CP-element group 154: successors 
    -- CP-element group 154: 	156 
    -- CP-element group 154:  members (2) 
      -- CP-element group 154: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3971/phi_stmt_3971_sources/Interlock/Sample/$exit
      -- CP-element group 154: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3971/phi_stmt_3971_sources/Interlock/Sample/ack
      -- 
    ack_2723_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 154_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => get_from_dbg_4223_3974_buf_ack_0, ack => ccu_debug_daemon_CP_1447_elements(154)); -- 
    -- CP-element group 155:  transition  input  bypass 
    -- CP-element group 155: predecessors 
    -- CP-element group 155: 	141 
    -- CP-element group 155: successors 
    -- CP-element group 155: 	156 
    -- CP-element group 155:  members (2) 
      -- CP-element group 155: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3971/phi_stmt_3971_sources/Interlock/Update/$exit
      -- CP-element group 155: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3971/phi_stmt_3971_sources/Interlock/Update/ack
      -- 
    ack_2728_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 155_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => get_from_dbg_4223_3974_buf_ack_1, ack => ccu_debug_daemon_CP_1447_elements(155)); -- 
    -- CP-element group 156:  join  transition  output  bypass 
    -- CP-element group 156: predecessors 
    -- CP-element group 156: 	154 
    -- CP-element group 156: 	155 
    -- CP-element group 156: successors 
    -- CP-element group 156: 	174 
    -- CP-element group 156:  members (4) 
      -- CP-element group 156: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3971/$exit
      -- CP-element group 156: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3971/phi_stmt_3971_sources/$exit
      -- CP-element group 156: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3971/phi_stmt_3971_sources/Interlock/$exit
      -- CP-element group 156: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3971/phi_stmt_3971_req
      -- 
    phi_stmt_3971_req_2729_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_3971_req_2729_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(156), ack => phi_stmt_3971_req_1); -- 
    ccu_debug_daemon_cp_element_group_156: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "ccu_debug_daemon_cp_element_group_156"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(154) & ccu_debug_daemon_CP_1447_elements(155);
      gj_ccu_debug_daemon_cp_element_group_156 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(156), clk => clk, reset => reset); --
    end block;
    -- CP-element group 157:  transition  input  bypass 
    -- CP-element group 157: predecessors 
    -- CP-element group 157: 	141 
    -- CP-element group 157: successors 
    -- CP-element group 157: 	159 
    -- CP-element group 157:  members (2) 
      -- CP-element group 157: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3959/phi_stmt_3959_sources/Interlock/Sample/$exit
      -- CP-element group 157: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3959/phi_stmt_3959_sources/Interlock/Sample/ack
      -- 
    ack_2743_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 157_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => next_second_word_4247_3962_buf_ack_0, ack => ccu_debug_daemon_CP_1447_elements(157)); -- 
    -- CP-element group 158:  transition  input  bypass 
    -- CP-element group 158: predecessors 
    -- CP-element group 158: 	141 
    -- CP-element group 158: successors 
    -- CP-element group 158: 	159 
    -- CP-element group 158:  members (2) 
      -- CP-element group 158: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3959/phi_stmt_3959_sources/Interlock/Update/$exit
      -- CP-element group 158: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3959/phi_stmt_3959_sources/Interlock/Update/ack
      -- 
    ack_2748_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 158_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => next_second_word_4247_3962_buf_ack_1, ack => ccu_debug_daemon_CP_1447_elements(158)); -- 
    -- CP-element group 159:  join  transition  output  bypass 
    -- CP-element group 159: predecessors 
    -- CP-element group 159: 	157 
    -- CP-element group 159: 	158 
    -- CP-element group 159: successors 
    -- CP-element group 159: 	174 
    -- CP-element group 159:  members (4) 
      -- CP-element group 159: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3959/$exit
      -- CP-element group 159: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3959/phi_stmt_3959_sources/$exit
      -- CP-element group 159: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3959/phi_stmt_3959_sources/Interlock/$exit
      -- CP-element group 159: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3959/phi_stmt_3959_req
      -- 
    phi_stmt_3959_req_2749_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_3959_req_2749_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(159), ack => phi_stmt_3959_req_1); -- 
    ccu_debug_daemon_cp_element_group_159: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "ccu_debug_daemon_cp_element_group_159"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(157) & ccu_debug_daemon_CP_1447_elements(158);
      gj_ccu_debug_daemon_cp_element_group_159 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(159), clk => clk, reset => reset); --
    end block;
    -- CP-element group 160:  transition  input  bypass 
    -- CP-element group 160: predecessors 
    -- CP-element group 160: 	141 
    -- CP-element group 160: successors 
    -- CP-element group 160: 	162 
    -- CP-element group 160:  members (2) 
      -- CP-element group 160: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3951/phi_stmt_3951_sources/Interlock/Sample/$exit
      -- CP-element group 160: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3951/phi_stmt_3951_sources/Interlock/Sample/ack
      -- 
    ack_2763_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 160_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nCCD_STATE_4184_3954_buf_ack_0, ack => ccu_debug_daemon_CP_1447_elements(160)); -- 
    -- CP-element group 161:  transition  input  bypass 
    -- CP-element group 161: predecessors 
    -- CP-element group 161: 	141 
    -- CP-element group 161: successors 
    -- CP-element group 161: 	162 
    -- CP-element group 161:  members (2) 
      -- CP-element group 161: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3951/phi_stmt_3951_sources/Interlock/Update/$exit
      -- CP-element group 161: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3951/phi_stmt_3951_sources/Interlock/Update/ack
      -- 
    ack_2768_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 161_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nCCD_STATE_4184_3954_buf_ack_1, ack => ccu_debug_daemon_CP_1447_elements(161)); -- 
    -- CP-element group 162:  join  transition  output  bypass 
    -- CP-element group 162: predecessors 
    -- CP-element group 162: 	160 
    -- CP-element group 162: 	161 
    -- CP-element group 162: successors 
    -- CP-element group 162: 	174 
    -- CP-element group 162:  members (4) 
      -- CP-element group 162: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3951/$exit
      -- CP-element group 162: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3951/phi_stmt_3951_sources/$exit
      -- CP-element group 162: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3951/phi_stmt_3951_sources/Interlock/$exit
      -- CP-element group 162: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3951/phi_stmt_3951_req
      -- 
    phi_stmt_3951_req_2769_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_3951_req_2769_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(162), ack => phi_stmt_3951_req_1); -- 
    ccu_debug_daemon_cp_element_group_162: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "ccu_debug_daemon_cp_element_group_162"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(160) & ccu_debug_daemon_CP_1447_elements(161);
      gj_ccu_debug_daemon_cp_element_group_162 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(162), clk => clk, reset => reset); --
    end block;
    -- CP-element group 163:  transition  input  output  bypass 
    -- CP-element group 163: predecessors 
    -- CP-element group 163: 	141 
    -- CP-element group 163: successors 
    -- CP-element group 163: 	164 
    -- CP-element group 163:  members (4) 
      -- CP-element group 163: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3942/phi_stmt_3942_sources/RPIPE_ccu_daemon_to_ccu_debug_daemon_3945/Sample/$exit
      -- CP-element group 163: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3942/phi_stmt_3942_sources/RPIPE_ccu_daemon_to_ccu_debug_daemon_3945/Sample/ack
      -- CP-element group 163: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3942/phi_stmt_3942_sources/RPIPE_ccu_daemon_to_ccu_debug_daemon_3945/Update/$entry
      -- CP-element group 163: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3942/phi_stmt_3942_sources/RPIPE_ccu_daemon_to_ccu_debug_daemon_3945/Update/req
      -- 
    ack_2783_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 163_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_ccu_daemon_to_ccu_debug_daemon_3945_inst_ack_0, ack => ccu_debug_daemon_CP_1447_elements(163)); -- 
    req_2787_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_2787_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(163), ack => RPIPE_ccu_daemon_to_ccu_debug_daemon_3945_inst_req_1); -- 
    -- CP-element group 164:  transition  input  output  bypass 
    -- CP-element group 164: predecessors 
    -- CP-element group 164: 	163 
    -- CP-element group 164: successors 
    -- CP-element group 164: 	174 
    -- CP-element group 164:  members (6) 
      -- CP-element group 164: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3942/$exit
      -- CP-element group 164: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3942/phi_stmt_3942_sources/$exit
      -- CP-element group 164: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3942/phi_stmt_3942_sources/RPIPE_ccu_daemon_to_ccu_debug_daemon_3945/$exit
      -- CP-element group 164: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3942/phi_stmt_3942_sources/RPIPE_ccu_daemon_to_ccu_debug_daemon_3945/Update/$exit
      -- CP-element group 164: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3942/phi_stmt_3942_sources/RPIPE_ccu_daemon_to_ccu_debug_daemon_3945/Update/ack
      -- CP-element group 164: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3942/phi_stmt_3942_req
      -- 
    ack_2788_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 164_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_ccu_daemon_to_ccu_debug_daemon_3945_inst_ack_1, ack => ccu_debug_daemon_CP_1447_elements(164)); -- 
    phi_stmt_3942_req_2789_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_3942_req_2789_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(164), ack => phi_stmt_3942_req_1); -- 
    -- CP-element group 165:  transition  input  bypass 
    -- CP-element group 165: predecessors 
    -- CP-element group 165: 	141 
    -- CP-element group 165: successors 
    -- CP-element group 165: 	167 
    -- CP-element group 165:  members (2) 
      -- CP-element group 165: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3963/phi_stmt_3963_sources/Interlock/Sample/$exit
      -- CP-element group 165: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3963/phi_stmt_3963_sources/Interlock/Sample/ack
      -- 
    ack_2803_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 165_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => next_third_word_4257_3966_buf_ack_0, ack => ccu_debug_daemon_CP_1447_elements(165)); -- 
    -- CP-element group 166:  transition  input  bypass 
    -- CP-element group 166: predecessors 
    -- CP-element group 166: 	141 
    -- CP-element group 166: successors 
    -- CP-element group 166: 	167 
    -- CP-element group 166:  members (2) 
      -- CP-element group 166: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3963/phi_stmt_3963_sources/Interlock/Update/$exit
      -- CP-element group 166: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3963/phi_stmt_3963_sources/Interlock/Update/ack
      -- 
    ack_2808_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 166_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => next_third_word_4257_3966_buf_ack_1, ack => ccu_debug_daemon_CP_1447_elements(166)); -- 
    -- CP-element group 167:  join  transition  output  bypass 
    -- CP-element group 167: predecessors 
    -- CP-element group 167: 	165 
    -- CP-element group 167: 	166 
    -- CP-element group 167: successors 
    -- CP-element group 167: 	174 
    -- CP-element group 167:  members (4) 
      -- CP-element group 167: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3963/$exit
      -- CP-element group 167: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3963/phi_stmt_3963_sources/$exit
      -- CP-element group 167: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3963/phi_stmt_3963_sources/Interlock/$exit
      -- CP-element group 167: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3963/phi_stmt_3963_req
      -- 
    phi_stmt_3963_req_2809_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_3963_req_2809_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(167), ack => phi_stmt_3963_req_1); -- 
    ccu_debug_daemon_cp_element_group_167: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "ccu_debug_daemon_cp_element_group_167"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(165) & ccu_debug_daemon_CP_1447_elements(166);
      gj_ccu_debug_daemon_cp_element_group_167 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(167), clk => clk, reset => reset); --
    end block;
    -- CP-element group 168:  transition  input  bypass 
    -- CP-element group 168: predecessors 
    -- CP-element group 168: 	141 
    -- CP-element group 168: successors 
    -- CP-element group 168: 	170 
    -- CP-element group 168:  members (2) 
      -- CP-element group 168: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3967/phi_stmt_3967_sources/Interlock/Sample/$exit
      -- CP-element group 168: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3967/phi_stmt_3967_sources/Interlock/Sample/ack
      -- 
    ack_2823_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 168_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => next_fourth_word_4267_3970_buf_ack_0, ack => ccu_debug_daemon_CP_1447_elements(168)); -- 
    -- CP-element group 169:  transition  input  bypass 
    -- CP-element group 169: predecessors 
    -- CP-element group 169: 	141 
    -- CP-element group 169: successors 
    -- CP-element group 169: 	170 
    -- CP-element group 169:  members (2) 
      -- CP-element group 169: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3967/phi_stmt_3967_sources/Interlock/Update/$exit
      -- CP-element group 169: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3967/phi_stmt_3967_sources/Interlock/Update/ack
      -- 
    ack_2828_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 169_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => next_fourth_word_4267_3970_buf_ack_1, ack => ccu_debug_daemon_CP_1447_elements(169)); -- 
    -- CP-element group 170:  join  transition  output  bypass 
    -- CP-element group 170: predecessors 
    -- CP-element group 170: 	168 
    -- CP-element group 170: 	169 
    -- CP-element group 170: successors 
    -- CP-element group 170: 	174 
    -- CP-element group 170:  members (4) 
      -- CP-element group 170: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3967/$exit
      -- CP-element group 170: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3967/phi_stmt_3967_sources/$exit
      -- CP-element group 170: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3967/phi_stmt_3967_sources/Interlock/$exit
      -- CP-element group 170: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3967/phi_stmt_3967_req
      -- 
    phi_stmt_3967_req_2829_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_3967_req_2829_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(170), ack => phi_stmt_3967_req_1); -- 
    ccu_debug_daemon_cp_element_group_170: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "ccu_debug_daemon_cp_element_group_170"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(168) & ccu_debug_daemon_CP_1447_elements(169);
      gj_ccu_debug_daemon_cp_element_group_170 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(170), clk => clk, reset => reset); --
    end block;
    -- CP-element group 171:  transition  input  bypass 
    -- CP-element group 171: predecessors 
    -- CP-element group 171: 	141 
    -- CP-element group 171: successors 
    -- CP-element group 171: 	173 
    -- CP-element group 171:  members (2) 
      -- CP-element group 171: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3955/phi_stmt_3955_sources/Interlock/Sample/$exit
      -- CP-element group 171: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3955/phi_stmt_3955_sources/Interlock/Sample/ack
      -- 
    ack_2843_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 171_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => next_first_word_4237_3958_buf_ack_0, ack => ccu_debug_daemon_CP_1447_elements(171)); -- 
    -- CP-element group 172:  transition  input  bypass 
    -- CP-element group 172: predecessors 
    -- CP-element group 172: 	141 
    -- CP-element group 172: successors 
    -- CP-element group 172: 	173 
    -- CP-element group 172:  members (2) 
      -- CP-element group 172: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3955/phi_stmt_3955_sources/Interlock/Update/$exit
      -- CP-element group 172: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3955/phi_stmt_3955_sources/Interlock/Update/ack
      -- 
    ack_2848_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 172_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => next_first_word_4237_3958_buf_ack_1, ack => ccu_debug_daemon_CP_1447_elements(172)); -- 
    -- CP-element group 173:  join  transition  output  bypass 
    -- CP-element group 173: predecessors 
    -- CP-element group 173: 	171 
    -- CP-element group 173: 	172 
    -- CP-element group 173: successors 
    -- CP-element group 173: 	174 
    -- CP-element group 173:  members (4) 
      -- CP-element group 173: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3955/$exit
      -- CP-element group 173: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3955/phi_stmt_3955_sources/$exit
      -- CP-element group 173: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3955/phi_stmt_3955_sources/Interlock/$exit
      -- CP-element group 173: 	 branch_block_stmt_3940/loopback_PhiReq/phi_stmt_3955/phi_stmt_3955_req
      -- 
    phi_stmt_3955_req_2849_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_3955_req_2849_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_daemon_CP_1447_elements(173), ack => phi_stmt_3955_req_1); -- 
    ccu_debug_daemon_cp_element_group_173: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 37) := "ccu_debug_daemon_cp_element_group_173"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(171) & ccu_debug_daemon_CP_1447_elements(172);
      gj_ccu_debug_daemon_cp_element_group_173 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(173), clk => clk, reset => reset); --
    end block;
    -- CP-element group 174:  join  transition  bypass 
    -- CP-element group 174: predecessors 
    -- CP-element group 174: 	153 
    -- CP-element group 174: 	156 
    -- CP-element group 174: 	159 
    -- CP-element group 174: 	162 
    -- CP-element group 174: 	164 
    -- CP-element group 174: 	167 
    -- CP-element group 174: 	170 
    -- CP-element group 174: 	173 
    -- CP-element group 174: successors 
    -- CP-element group 174: 	175 
    -- CP-element group 174:  members (1) 
      -- CP-element group 174: 	 branch_block_stmt_3940/loopback_PhiReq/$exit
      -- 
    ccu_debug_daemon_cp_element_group_174: block -- 
      constant place_capacities: IntegerArray(0 to 7) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1);
      constant place_markings: IntegerArray(0 to 7)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0);
      constant place_delays: IntegerArray(0 to 7) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0);
      constant joinName: string(1 to 37) := "ccu_debug_daemon_cp_element_group_174"; 
      signal preds: BooleanArray(1 to 8); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(153) & ccu_debug_daemon_CP_1447_elements(156) & ccu_debug_daemon_CP_1447_elements(159) & ccu_debug_daemon_CP_1447_elements(162) & ccu_debug_daemon_CP_1447_elements(164) & ccu_debug_daemon_CP_1447_elements(167) & ccu_debug_daemon_CP_1447_elements(170) & ccu_debug_daemon_CP_1447_elements(173);
      gj_ccu_debug_daemon_cp_element_group_174 : generic_join generic map(name => joinName, number_of_predecessors => 8, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(174), clk => clk, reset => reset); --
    end block;
    -- CP-element group 175:  merge  fork  transition  place  bypass 
    -- CP-element group 175: predecessors 
    -- CP-element group 175: 	151 
    -- CP-element group 175: 	174 
    -- CP-element group 175: successors 
    -- CP-element group 175: 	176 
    -- CP-element group 175: 	177 
    -- CP-element group 175: 	178 
    -- CP-element group 175: 	179 
    -- CP-element group 175: 	180 
    -- CP-element group 175: 	181 
    -- CP-element group 175: 	182 
    -- CP-element group 175: 	183 
    -- CP-element group 175:  members (2) 
      -- CP-element group 175: 	 branch_block_stmt_3940/merge_stmt_3941_PhiReqMerge
      -- CP-element group 175: 	 branch_block_stmt_3940/merge_stmt_3941_PhiAck/$entry
      -- 
    ccu_debug_daemon_CP_1447_elements(175) <= OrReduce(ccu_debug_daemon_CP_1447_elements(151) & ccu_debug_daemon_CP_1447_elements(174));
    -- CP-element group 176:  transition  input  bypass 
    -- CP-element group 176: predecessors 
    -- CP-element group 176: 	175 
    -- CP-element group 176: successors 
    -- CP-element group 176: 	184 
    -- CP-element group 176:  members (1) 
      -- CP-element group 176: 	 branch_block_stmt_3940/merge_stmt_3941_PhiAck/phi_stmt_3942_ack
      -- 
    phi_stmt_3942_ack_2854_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 176_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_3942_ack_0, ack => ccu_debug_daemon_CP_1447_elements(176)); -- 
    -- CP-element group 177:  transition  input  bypass 
    -- CP-element group 177: predecessors 
    -- CP-element group 177: 	175 
    -- CP-element group 177: successors 
    -- CP-element group 177: 	184 
    -- CP-element group 177:  members (1) 
      -- CP-element group 177: 	 branch_block_stmt_3940/merge_stmt_3941_PhiAck/phi_stmt_3946_ack
      -- 
    phi_stmt_3946_ack_2855_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 177_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_3946_ack_0, ack => ccu_debug_daemon_CP_1447_elements(177)); -- 
    -- CP-element group 178:  transition  input  bypass 
    -- CP-element group 178: predecessors 
    -- CP-element group 178: 	175 
    -- CP-element group 178: successors 
    -- CP-element group 178: 	184 
    -- CP-element group 178:  members (1) 
      -- CP-element group 178: 	 branch_block_stmt_3940/merge_stmt_3941_PhiAck/phi_stmt_3951_ack
      -- 
    phi_stmt_3951_ack_2856_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 178_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_3951_ack_0, ack => ccu_debug_daemon_CP_1447_elements(178)); -- 
    -- CP-element group 179:  transition  input  bypass 
    -- CP-element group 179: predecessors 
    -- CP-element group 179: 	175 
    -- CP-element group 179: successors 
    -- CP-element group 179: 	184 
    -- CP-element group 179:  members (1) 
      -- CP-element group 179: 	 branch_block_stmt_3940/merge_stmt_3941_PhiAck/phi_stmt_3955_ack
      -- 
    phi_stmt_3955_ack_2857_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 179_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_3955_ack_0, ack => ccu_debug_daemon_CP_1447_elements(179)); -- 
    -- CP-element group 180:  transition  input  bypass 
    -- CP-element group 180: predecessors 
    -- CP-element group 180: 	175 
    -- CP-element group 180: successors 
    -- CP-element group 180: 	184 
    -- CP-element group 180:  members (1) 
      -- CP-element group 180: 	 branch_block_stmt_3940/merge_stmt_3941_PhiAck/phi_stmt_3959_ack
      -- 
    phi_stmt_3959_ack_2858_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 180_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_3959_ack_0, ack => ccu_debug_daemon_CP_1447_elements(180)); -- 
    -- CP-element group 181:  transition  input  bypass 
    -- CP-element group 181: predecessors 
    -- CP-element group 181: 	175 
    -- CP-element group 181: successors 
    -- CP-element group 181: 	184 
    -- CP-element group 181:  members (1) 
      -- CP-element group 181: 	 branch_block_stmt_3940/merge_stmt_3941_PhiAck/phi_stmt_3963_ack
      -- 
    phi_stmt_3963_ack_2859_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 181_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_3963_ack_0, ack => ccu_debug_daemon_CP_1447_elements(181)); -- 
    -- CP-element group 182:  transition  input  bypass 
    -- CP-element group 182: predecessors 
    -- CP-element group 182: 	175 
    -- CP-element group 182: successors 
    -- CP-element group 182: 	184 
    -- CP-element group 182:  members (1) 
      -- CP-element group 182: 	 branch_block_stmt_3940/merge_stmt_3941_PhiAck/phi_stmt_3967_ack
      -- 
    phi_stmt_3967_ack_2860_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 182_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_3967_ack_0, ack => ccu_debug_daemon_CP_1447_elements(182)); -- 
    -- CP-element group 183:  transition  input  bypass 
    -- CP-element group 183: predecessors 
    -- CP-element group 183: 	175 
    -- CP-element group 183: successors 
    -- CP-element group 183: 	184 
    -- CP-element group 183:  members (1) 
      -- CP-element group 183: 	 branch_block_stmt_3940/merge_stmt_3941_PhiAck/phi_stmt_3971_ack
      -- 
    phi_stmt_3971_ack_2861_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 183_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_3971_ack_0, ack => ccu_debug_daemon_CP_1447_elements(183)); -- 
    -- CP-element group 184:  join  transition  bypass 
    -- CP-element group 184: predecessors 
    -- CP-element group 184: 	176 
    -- CP-element group 184: 	177 
    -- CP-element group 184: 	178 
    -- CP-element group 184: 	179 
    -- CP-element group 184: 	180 
    -- CP-element group 184: 	181 
    -- CP-element group 184: 	182 
    -- CP-element group 184: 	183 
    -- CP-element group 184: successors 
    -- CP-element group 184: 	2 
    -- CP-element group 184:  members (1) 
      -- CP-element group 184: 	 branch_block_stmt_3940/merge_stmt_3941_PhiAck/$exit
      -- 
    ccu_debug_daemon_cp_element_group_184: block -- 
      constant place_capacities: IntegerArray(0 to 7) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1,7 => 1);
      constant place_markings: IntegerArray(0 to 7)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0);
      constant place_delays: IntegerArray(0 to 7) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0,7 => 0);
      constant joinName: string(1 to 37) := "ccu_debug_daemon_cp_element_group_184"; 
      signal preds: BooleanArray(1 to 8); -- 
    begin -- 
      preds <= ccu_debug_daemon_CP_1447_elements(176) & ccu_debug_daemon_CP_1447_elements(177) & ccu_debug_daemon_CP_1447_elements(178) & ccu_debug_daemon_CP_1447_elements(179) & ccu_debug_daemon_CP_1447_elements(180) & ccu_debug_daemon_CP_1447_elements(181) & ccu_debug_daemon_CP_1447_elements(182) & ccu_debug_daemon_CP_1447_elements(183);
      gj_ccu_debug_daemon_cp_element_group_184 : generic_join generic map(name => joinName, number_of_predecessors => 8, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(184), clk => clk, reset => reset); --
    end block;
    ccu_debug_daemon_do_while_stmt_4843_terminator_2584: loop_terminator -- 
      generic map (name => " ccu_debug_daemon_do_while_stmt_4843_terminator_2584", max_iterations_in_flight =>7) 
      port map(loop_body_exit => ccu_debug_daemon_CP_1447_elements(106),loop_continue => ccu_debug_daemon_CP_1447_elements(136),loop_terminate => ccu_debug_daemon_CP_1447_elements(135),loop_back => ccu_debug_daemon_CP_1447_elements(104),loop_exit => ccu_debug_daemon_CP_1447_elements(103),clk => clk, reset => reset); -- 
    phi_stmt_4845_phi_seq_2560_block : block -- 
      signal triggers, src_sample_reqs, src_sample_acks, src_update_reqs, src_update_acks : BooleanArray(0 to 1);
      signal phi_mux_reqs : BooleanArray(0 to 1); -- 
    begin -- 
      triggers(0)  <= ccu_debug_daemon_CP_1447_elements(119);
      ccu_debug_daemon_CP_1447_elements(122)<= src_sample_reqs(0);
      src_sample_acks(0)  <= ccu_debug_daemon_CP_1447_elements(122);
      ccu_debug_daemon_CP_1447_elements(123)<= src_update_reqs(0);
      src_update_acks(0)  <= ccu_debug_daemon_CP_1447_elements(124);
      ccu_debug_daemon_CP_1447_elements(120) <= phi_mux_reqs(0);
      triggers(1)  <= ccu_debug_daemon_CP_1447_elements(117);
      ccu_debug_daemon_CP_1447_elements(126)<= src_sample_reqs(1);
      src_sample_acks(1)  <= ccu_debug_daemon_CP_1447_elements(128);
      ccu_debug_daemon_CP_1447_elements(127)<= src_update_reqs(1);
      src_update_acks(1)  <= ccu_debug_daemon_CP_1447_elements(129);
      ccu_debug_daemon_CP_1447_elements(118) <= phi_mux_reqs(1);
      phi_stmt_4845_phi_seq_2560 : phi_sequencer_v2-- 
        generic map (place_capacity => 7, ntriggers => 2, name => "phi_stmt_4845_phi_seq_2560") 
        port map ( -- 
          triggers => triggers, src_sample_starts => src_sample_reqs, 
          src_sample_completes => src_sample_acks, src_update_starts => src_update_reqs, 
          src_update_completes => src_update_acks,
          phi_mux_select_reqs => phi_mux_reqs, 
          phi_sample_req => ccu_debug_daemon_CP_1447_elements(111), 
          phi_sample_ack => ccu_debug_daemon_CP_1447_elements(115), 
          phi_update_req => ccu_debug_daemon_CP_1447_elements(114), 
          phi_update_ack => ccu_debug_daemon_CP_1447_elements(116), 
          phi_mux_ack => ccu_debug_daemon_CP_1447_elements(121), 
          clk => clk, reset => reset -- 
        );
        -- 
    end block;
    entry_tmerge_2511_block : block -- 
      signal preds : BooleanArray(0 to 1);
      begin -- 
        preds(0)  <= ccu_debug_daemon_CP_1447_elements(107);
        preds(1)  <= ccu_debug_daemon_CP_1447_elements(108);
        entry_tmerge_2511 : transition_merge -- 
          generic map(name => " entry_tmerge_2511")
          port map (preds => preds, symbol_out => ccu_debug_daemon_CP_1447_elements(109));
          -- 
    end block;
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal AND_u1_u1_4126_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4196_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4203_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4211_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4217_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4233_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4243_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4253_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4263_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4286_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4295_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4306_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4317_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4328_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4336_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4344_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4352_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4390_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4453_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4474_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4539_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4561_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4579_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_4832_wire : std_logic_vector(0 downto 0);
    signal CCD_STATE_3951 : std_logic_vector(2 downto 0);
    signal CONCAT_u16_u24_4359_wire_constant : std_logic_vector(23 downto 0);
    signal CONCAT_u1_u33_4774_wire : std_logic_vector(32 downto 0);
    signal CONCAT_u1_u33_4780_wire : std_logic_vector(32 downto 0);
    signal CONCAT_u1_u33_4787_wire : std_logic_vector(32 downto 0);
    signal CONCAT_u1_u33_4794_wire_constant : std_logic_vector(32 downto 0);
    signal CONCAT_u1_u33_4800_wire : std_logic_vector(32 downto 0);
    signal CONCAT_u4_u8_4362_wire : std_logic_vector(7 downto 0);
    signal CONCAT_u9_u33_4636_wire_constant : std_logic_vector(32 downto 0);
    signal CONCAT_u9_u33_4648_wire_constant : std_logic_vector(32 downto 0);
    signal CONCAT_u9_u33_4673_wire_constant : std_logic_vector(32 downto 0);
    signal CONCAT_u9_u33_4696_wire_constant : std_logic_vector(32 downto 0);
    signal CONCAT_u9_u33_4706_wire_constant : std_logic_vector(32 downto 0);
    signal CONCAT_u9_u33_4717_wire_constant : std_logic_vector(32 downto 0);
    signal EQ_u3_u1_4074_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4106_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4115_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4138_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4158_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4171_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4178_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4193_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4199_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4207_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4215_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4220_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4231_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4241_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4251_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4261_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4726_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4809_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4830_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4863_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4869_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4876_wire : std_logic_vector(0 downto 0);
    signal EQ_u3_u1_4882_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_4118_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_4141_wire : std_logic_vector(0 downto 0);
    signal I_4845 : std_logic_vector(2 downto 0);
    signal MUX_4110_wire : std_logic_vector(2 downto 0);
    signal MUX_4112_wire : std_logic_vector(2 downto 0);
    signal MUX_4129_wire : std_logic_vector(2 downto 0);
    signal MUX_4131_wire : std_logic_vector(2 downto 0);
    signal MUX_4132_wire : std_logic_vector(2 downto 0);
    signal MUX_4134_wire : std_logic_vector(2 downto 0);
    signal MUX_4149_wire : std_logic_vector(2 downto 0);
    signal MUX_4151_wire : std_logic_vector(2 downto 0);
    signal MUX_4152_wire : std_logic_vector(2 downto 0);
    signal MUX_4154_wire : std_logic_vector(2 downto 0);
    signal MUX_4165_wire : std_logic_vector(2 downto 0);
    signal MUX_4166_wire : std_logic_vector(2 downto 0);
    signal MUX_4168_wire : std_logic_vector(2 downto 0);
    signal MUX_4174_wire : std_logic_vector(2 downto 0);
    signal MUX_4181_wire : std_logic_vector(2 downto 0);
    signal MUX_4370_wire : std_logic_vector(31 downto 0);
    signal MUX_4374_wire : std_logic_vector(31 downto 0);
    signal MUX_4379_wire : std_logic_vector(31 downto 0);
    signal MUX_4383_wire : std_logic_vector(31 downto 0);
    signal MUX_4432_wire : std_logic_vector(2 downto 0);
    signal MUX_4433_wire : std_logic_vector(2 downto 0);
    signal MUX_4434_wire : std_logic_vector(2 downto 0);
    signal MUX_4435_wire : std_logic_vector(2 downto 0);
    signal MUX_4436_wire : std_logic_vector(2 downto 0);
    signal MUX_4437_wire : std_logic_vector(2 downto 0);
    signal MUX_4516_wire : std_logic_vector(2 downto 0);
    signal MUX_4517_wire : std_logic_vector(2 downto 0);
    signal MUX_4518_wire : std_logic_vector(2 downto 0);
    signal MUX_4519_wire : std_logic_vector(2 downto 0);
    signal MUX_4520_wire : std_logic_vector(2 downto 0);
    signal MUX_4521_wire : std_logic_vector(2 downto 0);
    signal MUX_4638_wire : std_logic_vector(32 downto 0);
    signal MUX_4650_wire : std_logic_vector(32 downto 0);
    signal MUX_4675_wire : std_logic_vector(32 downto 0);
    signal MUX_4698_wire : std_logic_vector(32 downto 0);
    signal MUX_4708_wire : std_logic_vector(32 downto 0);
    signal MUX_4719_wire : std_logic_vector(32 downto 0);
    signal MUX_4776_wire : std_logic_vector(32 downto 0);
    signal MUX_4782_wire : std_logic_vector(32 downto 0);
    signal MUX_4789_wire : std_logic_vector(32 downto 0);
    signal MUX_4796_wire : std_logic_vector(32 downto 0);
    signal MUX_4802_wire : std_logic_vector(32 downto 0);
    signal MUX_4866_wire : std_logic_vector(31 downto 0);
    signal MUX_4872_wire : std_logic_vector(31 downto 0);
    signal MUX_4879_wire : std_logic_vector(31 downto 0);
    signal MUX_4885_wire : std_logic_vector(31 downto 0);
    signal NOT_u1_u1_4125_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_4160_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_4195_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4060_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4204_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4212_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4221_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4277_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4280_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4629_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4641_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4654_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4657_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4658_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4661_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4664_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4665_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4666_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4679_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4682_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4683_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4686_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4688_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4689_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4729_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4732_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4733_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4736_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4739_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4740_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4743_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4746_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4747_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4748_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4749_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4752_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4755_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4756_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4759_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4761_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4762_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4764_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4766_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4767_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4812_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4815_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4816_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4819_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4822_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4823_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4824_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_4842_wire : std_logic_vector(0 downto 0);
    signal OR_u32_u32_4375_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_4384_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_4873_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_4886_wire : std_logic_vector(31 downto 0);
    signal OR_u33_u33_4651_wire : std_logic_vector(32 downto 0);
    signal OR_u33_u33_4676_wire : std_logic_vector(32 downto 0);
    signal OR_u33_u33_4709_wire : std_logic_vector(32 downto 0);
    signal OR_u33_u33_4720_wire : std_logic_vector(32 downto 0);
    signal OR_u33_u33_4783_wire : std_logic_vector(32 downto 0);
    signal OR_u33_u33_4790_wire : std_logic_vector(32 downto 0);
    signal OR_u33_u33_4803_wire : std_logic_vector(32 downto 0);
    signal OR_u3_u3_4135_wire : std_logic_vector(2 downto 0);
    signal OR_u3_u3_4155_wire : std_logic_vector(2 downto 0);
    signal OR_u3_u3_4175_wire : std_logic_vector(2 downto 0);
    signal OR_u3_u3_4182_wire : std_logic_vector(2 downto 0);
    signal RPIPE_CCU_TO_DBG_MODE_SIG_4354_wire : std_logic_vector(3 downto 0);
    signal RPIPE_ccu_daemon_to_ccu_debug_daemon_3945_wire : std_logic_vector(32 downto 0);
    signal RPIPE_debug_interface_to_ccu_3950_wire : std_logic_vector(32 downto 0);
    signal RPIPE_init_npc_4338_wire : std_logic_vector(31 downto 0);
    signal RPIPE_init_pc_4330_wire : std_logic_vector(31 downto 0);
    signal RPIPE_init_psr_4346_wire : std_logic_vector(31 downto 0);
    signal R_ACCESS_ASR_4430_wire_constant : std_logic_vector(2 downto 0);
    signal R_ACCESS_ASR_4514_wire_constant : std_logic_vector(2 downto 0);
    signal R_ACCESS_PSR_4422_wire_constant : std_logic_vector(2 downto 0);
    signal R_ACCESS_PSR_4506_wire_constant : std_logic_vector(2 downto 0);
    signal R_ACCESS_REG_4420_wire_constant : std_logic_vector(2 downto 0);
    signal R_ACCESS_REG_4431_wire_constant : std_logic_vector(2 downto 0);
    signal R_ACCESS_REG_4504_wire_constant : std_logic_vector(2 downto 0);
    signal R_ACCESS_REG_4515_wire_constant : std_logic_vector(2 downto 0);
    signal R_ACCESS_TBR_4426_wire_constant : std_logic_vector(2 downto 0);
    signal R_ACCESS_TBR_4510_wire_constant : std_logic_vector(2 downto 0);
    signal R_ACCESS_WIM_4424_wire_constant : std_logic_vector(2 downto 0);
    signal R_ACCESS_WIM_4508_wire_constant : std_logic_vector(2 downto 0);
    signal R_ACCESS_Y_4428_wire_constant : std_logic_vector(2 downto 0);
    signal R_ACCESS_Y_4512_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_COMMAND_4119_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_COMMAND_4128_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_COMMAND_4142_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_COMMAND_4148_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_COMMAND_4161_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_COMMAND_4172_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_COMMAND_4177_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_COMMAND_4187_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_COMMAND_4219_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_COMMAND_4725_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_COMMAND_4808_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_COMMAND_4829_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_FIRST_4073_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_FIRST_4108_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_FIRST_4114_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_FIRST_4130_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_FIRST_4198_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_FIRST_4240_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_FOURTH_4163_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_FOURTH_4170_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_SECOND_4127_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_SECOND_4137_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_SECOND_4150_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_SECOND_4206_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_SECOND_4250_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_THIRD_4147_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_THIRD_4157_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_THIRD_4164_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_THIRD_4214_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_GOT_THIRD_4260_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_IDLE_3953_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_IDLE_4022_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_IDLE_4105_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_IDLE_4109_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_IDLE_4179_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_IDLE_4192_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCD_IDLE_4230_wire_constant : std_logic_vector(2 downto 0);
    signal R_ONE_1_4772_wire_constant : std_logic_vector(0 downto 0);
    signal R_ONE_1_4778_wire_constant : std_logic_vector(0 downto 0);
    signal R_ONE_1_4785_wire_constant : std_logic_vector(0 downto 0);
    signal R_ONE_1_4798_wire_constant : std_logic_vector(0 downto 0);
    signal R_ZERO_3_4847_wire_constant : std_logic_vector(2 downto 0);
    signal R_ZERO_4_4360_wire_constant : std_logic_vector(3 downto 0);
    signal UGT_u8_u1_4123_wire : std_logic_vector(0 downto 0);
    signal UGT_u8_u1_4146_wire : std_logic_vector(0 downto 0);
    signal UGT_u8_u1_4202_wire : std_logic_vector(0 downto 0);
    signal UGT_u8_u1_4210_wire : std_logic_vector(0 downto 0);
    signal adjusted_len_4069 : std_logic_vector(7 downto 0);
    signal arg_0_4607 : std_logic_vector(2 downto 0);
    signal arg_1_4607 : std_logic_vector(1 downto 0);
    signal arg_2_4607 : std_logic_vector(1 downto 0);
    signal arg_3_4607 : std_logic_vector(31 downto 0);
    signal asi_read_mem_4565 : std_logic_vector(7 downto 0);
    signal asi_write_mem_4583 : std_logic_vector(7 downto 0);
    signal call_ccu_to_teu_debug_4607 : std_logic_vector(0 downto 0);
    signal ccu_cmd_3983 : std_logic_vector(31 downto 0);
    signal ccu_cmd_valid_3979 : std_logic_vector(0 downto 0);
    signal cmd_data_4019 : std_logic_vector(15 downto 0);
    signal cmd_len_error_4056 : std_logic_vector(0 downto 0);
    signal cnI_4859 : std_logic_vector(0 downto 0);
    signal command_can_be_parsed_4024 : std_logic_vector(0 downto 0);
    signal command_from_ccu_daemon_3942 : std_logic_vector(32 downto 0);
    signal connect_cmd_4056 : std_logic_vector(0 downto 0);
    signal connect_or_resume_or_detach_4063 : std_logic_vector(0 downto 0);
    signal detach_cmd_4056 : std_logic_vector(0 downto 0);
    signal err_ccu_to_teu_debug_4619 : std_logic_vector(0 downto 0);
    signal err_fp_write_4552 : std_logic_vector(0 downto 0);
    signal err_read_mem_4570 : std_logic_vector(0 downto 0);
    signal err_write_mem_4588 : std_logic_vector(0 downto 0);
    signal exec_command_4189 : std_logic_vector(0 downto 0);
    signal first_word_3955 : std_logic_vector(31 downto 0);
    signal first_word_to_debug_interface_4722 : std_logic_vector(32 downto 0);
    signal fourth_word_3967 : std_logic_vector(31 downto 0);
    signal fp_reg_id_4461 : std_logic_vector(4 downto 0);
    signal fp_reg_val_4465 : std_logic_vector(31 downto 0);
    signal fpwfsr_4543 : std_logic_vector(0 downto 0);
    signal fpwreg_id_4547 : std_logic_vector(4 downto 0);
    signal fsr_4457 : std_logic_vector(0 downto 0);
    signal get_from_dbg_4223 : std_logic_vector(0 downto 0);
    signal get_from_dbg_4223_3974_buffered : std_logic_vector(0 downto 0);
    signal get_from_dbg_d_3971 : std_logic_vector(0 downto 0);
    signal ignore_wir_4525 : std_logic_vector(0 downto 0);
    signal illegal_cmd_4056 : std_logic_vector(0 downto 0);
    signal is_added_sept_2019_read_cmd_4282 : std_logic_vector(0 downto 0);
    signal kill_cmd_4056 : std_logic_vector(0 downto 0);
    signal konst_3944_wire_constant : std_logic_vector(32 downto 0);
    signal konst_3948_wire_constant : std_logic_vector(32 downto 0);
    signal konst_3957_wire_constant : std_logic_vector(31 downto 0);
    signal konst_3961_wire_constant : std_logic_vector(31 downto 0);
    signal konst_3965_wire_constant : std_logic_vector(31 downto 0);
    signal konst_3969_wire_constant : std_logic_vector(31 downto 0);
    signal konst_3973_wire_constant : std_logic_vector(0 downto 0);
    signal konst_3994_wire_constant : std_logic_vector(32 downto 0);
    signal konst_4066_wire_constant : std_logic_vector(7 downto 0);
    signal konst_4111_wire_constant : std_logic_vector(2 downto 0);
    signal konst_4117_wire_constant : std_logic_vector(7 downto 0);
    signal konst_4122_wire_constant : std_logic_vector(7 downto 0);
    signal konst_4133_wire_constant : std_logic_vector(2 downto 0);
    signal konst_4140_wire_constant : std_logic_vector(7 downto 0);
    signal konst_4145_wire_constant : std_logic_vector(7 downto 0);
    signal konst_4153_wire_constant : std_logic_vector(2 downto 0);
    signal konst_4167_wire_constant : std_logic_vector(2 downto 0);
    signal konst_4173_wire_constant : std_logic_vector(2 downto 0);
    signal konst_4180_wire_constant : std_logic_vector(2 downto 0);
    signal konst_4201_wire_constant : std_logic_vector(7 downto 0);
    signal konst_4209_wire_constant : std_logic_vector(7 downto 0);
    signal konst_4369_wire_constant : std_logic_vector(31 downto 0);
    signal konst_4373_wire_constant : std_logic_vector(31 downto 0);
    signal konst_4378_wire_constant : std_logic_vector(31 downto 0);
    signal konst_4382_wire_constant : std_logic_vector(31 downto 0);
    signal konst_4637_wire_constant : std_logic_vector(32 downto 0);
    signal konst_4649_wire_constant : std_logic_vector(32 downto 0);
    signal konst_4674_wire_constant : std_logic_vector(32 downto 0);
    signal konst_4697_wire_constant : std_logic_vector(32 downto 0);
    signal konst_4707_wire_constant : std_logic_vector(32 downto 0);
    signal konst_4718_wire_constant : std_logic_vector(32 downto 0);
    signal konst_4775_wire_constant : std_logic_vector(32 downto 0);
    signal konst_4781_wire_constant : std_logic_vector(32 downto 0);
    signal konst_4788_wire_constant : std_logic_vector(32 downto 0);
    signal konst_4795_wire_constant : std_logic_vector(32 downto 0);
    signal konst_4801_wire_constant : std_logic_vector(32 downto 0);
    signal konst_4852_wire_constant : std_logic_vector(2 downto 0);
    signal konst_4857_wire_constant : std_logic_vector(2 downto 0);
    signal konst_4862_wire_constant : std_logic_vector(2 downto 0);
    signal konst_4865_wire_constant : std_logic_vector(31 downto 0);
    signal konst_4868_wire_constant : std_logic_vector(2 downto 0);
    signal konst_4871_wire_constant : std_logic_vector(31 downto 0);
    signal konst_4875_wire_constant : std_logic_vector(2 downto 0);
    signal konst_4878_wire_constant : std_logic_vector(31 downto 0);
    signal konst_4881_wire_constant : std_logic_vector(2 downto 0);
    signal konst_4884_wire_constant : std_logic_vector(31 downto 0);
    signal len_4011 : std_logic_vector(7 downto 0);
    signal mem_read_data_4570 : std_logic_vector(31 downto 0);
    signal mode_sig_4355 : std_logic_vector(3 downto 0);
    signal nCCD_STATE_4184 : std_logic_vector(2 downto 0);
    signal nCCD_STATE_4184_3954_buffered : std_logic_vector(2 downto 0);
    signal nI_4854 : std_logic_vector(2 downto 0);
    signal nI_4854_4848_buffered : std_logic_vector(2 downto 0);
    signal next_first_word_4237 : std_logic_vector(31 downto 0);
    signal next_first_word_4237_3958_buffered : std_logic_vector(31 downto 0);
    signal next_fourth_word_4267 : std_logic_vector(31 downto 0);
    signal next_fourth_word_4267_3970_buffered : std_logic_vector(31 downto 0);
    signal next_second_word_4247 : std_logic_vector(31 downto 0);
    signal next_second_word_4247_3962_buffered : std_logic_vector(31 downto 0);
    signal next_third_word_4257 : std_logic_vector(31 downto 0);
    signal next_third_word_4257_3966_buffered : std_logic_vector(31 downto 0);
    signal op_code_4015 : std_logic_vector(7 downto 0);
    signal rasr_4414 : std_logic_vector(0 downto 0);
    signal rdata_for_added_sept_2019_read_4386 : std_logic_vector(31 downto 0);
    signal read_csr_cmd_4056 : std_logic_vector(0 downto 0);
    signal read_fp_reg_cmd_4056 : std_logic_vector(0 downto 0);
    signal read_init_npc_cmd_4056 : std_logic_vector(0 downto 0);
    signal read_init_pc_cmd_4056 : std_logic_vector(0 downto 0);
    signal read_init_psr_cmd_4056 : std_logic_vector(0 downto 0);
    signal read_iu_reg_cmd_4056 : std_logic_vector(0 downto 0);
    signal read_mem_cmd_4056 : std_logic_vector(0 downto 0);
    signal read_mode_cmd_4056 : std_logic_vector(0 downto 0);
    signal remove_break_cmd_4056 : std_logic_vector(0 downto 0);
    signal remove_watch_cmd_4056 : std_logic_vector(0 downto 0);
    signal report_command_ready_4076 : std_logic_vector(0 downto 0);
    signal resume_cmd_4056 : std_logic_vector(0 downto 0);
    signal rinit_npc_4339 : std_logic_vector(31 downto 0);
    signal rinit_pc_4331 : std_logic_vector(31 downto 0);
    signal rinit_psr_4347 : std_logic_vector(31 downto 0);
    signal rmode_4364 : std_logic_vector(31 downto 0);
    signal rpsr_4398 : std_logic_vector(0 downto 0);
    signal rreg_4394 : std_logic_vector(0 downto 0);
    signal rreg_id_4418 : std_logic_vector(4 downto 0);
    signal rreg_val_4440 : std_logic_vector(31 downto 0);
    signal rtbr_4406 : std_logic_vector(0 downto 0);
    signal run_ccu_to_teu_debug_4612 : std_logic_vector(0 downto 0);
    signal rwim_4402 : std_logic_vector(0 downto 0);
    signal ry_4410 : std_logic_vector(0 downto 0);
    signal second_word_3959 : std_logic_vector(31 downto 0);
    signal second_word_to_debug_interface_4805 : std_logic_vector(32 downto 0);
    signal send_first_4769 : std_logic_vector(0 downto 0);
    signal send_second_4826 : std_logic_vector(0 downto 0);
    signal set_break_cmd_4056 : std_logic_vector(0 downto 0);
    signal set_watch_cmd_4056 : std_logic_vector(0 downto 0);
    signal single_word_cmd_4056 : std_logic_vector(0 downto 0);
    signal slice_4289_wire : std_logic_vector(4 downto 0);
    signal third_word_3963 : std_logic_vector(31 downto 0);
    signal three_word_cmd_4056 : std_logic_vector(0 downto 0);
    signal to_ccu_4888 : std_logic_vector(31 downto 0);
    signal two_word_cmd_4056 : std_logic_vector(0 downto 0);
    signal wasr_4498 : std_logic_vector(0 downto 0);
    signal word_from_dbg_4004 : std_logic_vector(31 downto 0);
    signal word_from_dbg_v_3946 : std_logic_vector(32 downto 0);
    signal word_from_dbg_v_qualified_3996 : std_logic_vector(32 downto 0);
    signal word_from_dbg_valid_4000 : std_logic_vector(0 downto 0);
    signal wpsr_4482 : std_logic_vector(0 downto 0);
    signal wreg_4478 : std_logic_vector(0 downto 0);
    signal wreg_id_4502 : std_logic_vector(4 downto 0);
    signal write_fp_reg_cmd_4056 : std_logic_vector(0 downto 0);
    signal write_init_npc_cmd_4056 : std_logic_vector(0 downto 0);
    signal write_init_pc_cmd_4056 : std_logic_vector(0 downto 0);
    signal write_init_psr_cmd_4056 : std_logic_vector(0 downto 0);
    signal write_iu_reg_cmd_4056 : std_logic_vector(0 downto 0);
    signal write_mem_cmd_4056 : std_logic_vector(0 downto 0);
    signal write_reset_cmd_4056 : std_logic_vector(0 downto 0);
    signal wtbr_4490 : std_logic_vector(0 downto 0);
    signal wwim_4486 : std_logic_vector(0 downto 0);
    signal wy_4494 : std_logic_vector(0 downto 0);
    -- 
  begin -- 
    CONCAT_u16_u24_4359_wire_constant <= "000000000000000000000000";
    CONCAT_u1_u33_4794_wire_constant <= "100000000000000000000000000000000";
    CONCAT_u9_u33_4636_wire_constant <= "100000001000001110000000000000000";
    CONCAT_u9_u33_4648_wire_constant <= "100000001000010000000000000000000";
    CONCAT_u9_u33_4673_wire_constant <= "100000000000010010000000000000000";
    CONCAT_u9_u33_4696_wire_constant <= "100000001000010000000000000000000";
    CONCAT_u9_u33_4706_wire_constant <= "100000001000010000000000000000000";
    CONCAT_u9_u33_4717_wire_constant <= "100000001000010000000000000000000";
    R_ACCESS_ASR_4430_wire_constant <= "101";
    R_ACCESS_ASR_4514_wire_constant <= "101";
    R_ACCESS_PSR_4422_wire_constant <= "001";
    R_ACCESS_PSR_4506_wire_constant <= "001";
    R_ACCESS_REG_4420_wire_constant <= "110";
    R_ACCESS_REG_4431_wire_constant <= "110";
    R_ACCESS_REG_4504_wire_constant <= "110";
    R_ACCESS_REG_4515_wire_constant <= "110";
    R_ACCESS_TBR_4426_wire_constant <= "010";
    R_ACCESS_TBR_4510_wire_constant <= "010";
    R_ACCESS_WIM_4424_wire_constant <= "011";
    R_ACCESS_WIM_4508_wire_constant <= "011";
    R_ACCESS_Y_4428_wire_constant <= "100";
    R_ACCESS_Y_4512_wire_constant <= "100";
    R_CCD_GOT_COMMAND_4119_wire_constant <= "101";
    R_CCD_GOT_COMMAND_4128_wire_constant <= "101";
    R_CCD_GOT_COMMAND_4142_wire_constant <= "101";
    R_CCD_GOT_COMMAND_4148_wire_constant <= "101";
    R_CCD_GOT_COMMAND_4161_wire_constant <= "101";
    R_CCD_GOT_COMMAND_4172_wire_constant <= "101";
    R_CCD_GOT_COMMAND_4177_wire_constant <= "101";
    R_CCD_GOT_COMMAND_4187_wire_constant <= "101";
    R_CCD_GOT_COMMAND_4219_wire_constant <= "101";
    R_CCD_GOT_COMMAND_4725_wire_constant <= "101";
    R_CCD_GOT_COMMAND_4808_wire_constant <= "101";
    R_CCD_GOT_COMMAND_4829_wire_constant <= "101";
    R_CCD_GOT_FIRST_4073_wire_constant <= "001";
    R_CCD_GOT_FIRST_4108_wire_constant <= "001";
    R_CCD_GOT_FIRST_4114_wire_constant <= "001";
    R_CCD_GOT_FIRST_4130_wire_constant <= "001";
    R_CCD_GOT_FIRST_4198_wire_constant <= "001";
    R_CCD_GOT_FIRST_4240_wire_constant <= "001";
    R_CCD_GOT_FOURTH_4163_wire_constant <= "100";
    R_CCD_GOT_FOURTH_4170_wire_constant <= "100";
    R_CCD_GOT_SECOND_4127_wire_constant <= "010";
    R_CCD_GOT_SECOND_4137_wire_constant <= "010";
    R_CCD_GOT_SECOND_4150_wire_constant <= "010";
    R_CCD_GOT_SECOND_4206_wire_constant <= "010";
    R_CCD_GOT_SECOND_4250_wire_constant <= "010";
    R_CCD_GOT_THIRD_4147_wire_constant <= "011";
    R_CCD_GOT_THIRD_4157_wire_constant <= "011";
    R_CCD_GOT_THIRD_4164_wire_constant <= "011";
    R_CCD_GOT_THIRD_4214_wire_constant <= "011";
    R_CCD_GOT_THIRD_4260_wire_constant <= "011";
    R_CCD_IDLE_3953_wire_constant <= "000";
    R_CCD_IDLE_4022_wire_constant <= "000";
    R_CCD_IDLE_4105_wire_constant <= "000";
    R_CCD_IDLE_4109_wire_constant <= "000";
    R_CCD_IDLE_4179_wire_constant <= "000";
    R_CCD_IDLE_4192_wire_constant <= "000";
    R_CCD_IDLE_4230_wire_constant <= "000";
    R_ONE_1_4772_wire_constant <= "1";
    R_ONE_1_4778_wire_constant <= "1";
    R_ONE_1_4785_wire_constant <= "1";
    R_ONE_1_4798_wire_constant <= "1";
    R_ZERO_3_4847_wire_constant <= "000";
    R_ZERO_4_4360_wire_constant <= "0000";
    konst_3944_wire_constant <= "000000000000000000000000000000000";
    konst_3948_wire_constant <= "000000000000000000000000000000000";
    konst_3957_wire_constant <= "00000000000000000000000000000000";
    konst_3961_wire_constant <= "00000000000000000000000000000000";
    konst_3965_wire_constant <= "00000000000000000000000000000000";
    konst_3969_wire_constant <= "00000000000000000000000000000000";
    konst_3973_wire_constant <= "0";
    konst_3994_wire_constant <= "000000000000000000000000000000000";
    konst_4066_wire_constant <= "00000100";
    konst_4111_wire_constant <= "000";
    konst_4117_wire_constant <= "00000001";
    konst_4122_wire_constant <= "00000001";
    konst_4133_wire_constant <= "000";
    konst_4140_wire_constant <= "00000010";
    konst_4145_wire_constant <= "00000010";
    konst_4153_wire_constant <= "000";
    konst_4167_wire_constant <= "000";
    konst_4173_wire_constant <= "000";
    konst_4180_wire_constant <= "000";
    konst_4201_wire_constant <= "00000001";
    konst_4209_wire_constant <= "00000010";
    konst_4369_wire_constant <= "00000000000000000000000000000000";
    konst_4373_wire_constant <= "00000000000000000000000000000000";
    konst_4378_wire_constant <= "00000000000000000000000000000000";
    konst_4382_wire_constant <= "00000000000000000000000000000000";
    konst_4637_wire_constant <= "000000000000000000000000000000000";
    konst_4649_wire_constant <= "000000000000000000000000000000000";
    konst_4674_wire_constant <= "000000000000000000000000000000000";
    konst_4697_wire_constant <= "000000000000000000000000000000000";
    konst_4707_wire_constant <= "000000000000000000000000000000000";
    konst_4718_wire_constant <= "000000000000000000000000000000000";
    konst_4775_wire_constant <= "000000000000000000000000000000000";
    konst_4781_wire_constant <= "000000000000000000000000000000000";
    konst_4788_wire_constant <= "000000000000000000000000000000000";
    konst_4795_wire_constant <= "000000000000000000000000000000000";
    konst_4801_wire_constant <= "000000000000000000000000000000000";
    konst_4852_wire_constant <= "001";
    konst_4857_wire_constant <= "011";
    konst_4862_wire_constant <= "000";
    konst_4865_wire_constant <= "00000000000000000000000000000000";
    konst_4868_wire_constant <= "001";
    konst_4871_wire_constant <= "00000000000000000000000000000000";
    konst_4875_wire_constant <= "010";
    konst_4878_wire_constant <= "00000000000000000000000000000000";
    konst_4881_wire_constant <= "011";
    konst_4884_wire_constant <= "00000000000000000000000000000000";
    phi_stmt_3942: Block -- phi operator 
      signal idata: std_logic_vector(65 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= konst_3944_wire_constant & RPIPE_ccu_daemon_to_ccu_debug_daemon_3945_wire;
      req <= phi_stmt_3942_req_0 & phi_stmt_3942_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_3942",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 33) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_3942_ack_0,
          idata => idata,
          odata => command_from_ccu_daemon_3942,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_3942
    phi_stmt_3946: Block -- phi operator 
      signal idata: std_logic_vector(65 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= konst_3948_wire_constant & RPIPE_debug_interface_to_ccu_3950_wire;
      req <= phi_stmt_3946_req_0 & phi_stmt_3946_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_3946",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 33) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_3946_ack_0,
          idata => idata,
          odata => word_from_dbg_v_3946,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_3946
    phi_stmt_3951: Block -- phi operator 
      signal idata: std_logic_vector(5 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= R_CCD_IDLE_3953_wire_constant & nCCD_STATE_4184_3954_buffered;
      req <= phi_stmt_3951_req_0 & phi_stmt_3951_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_3951",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 3) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_3951_ack_0,
          idata => idata,
          odata => CCD_STATE_3951,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_3951
    phi_stmt_3955: Block -- phi operator 
      signal idata: std_logic_vector(63 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= konst_3957_wire_constant & next_first_word_4237_3958_buffered;
      req <= phi_stmt_3955_req_0 & phi_stmt_3955_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_3955",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 32) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_3955_ack_0,
          idata => idata,
          odata => first_word_3955,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_3955
    phi_stmt_3959: Block -- phi operator 
      signal idata: std_logic_vector(63 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= konst_3961_wire_constant & next_second_word_4247_3962_buffered;
      req <= phi_stmt_3959_req_0 & phi_stmt_3959_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_3959",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 32) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_3959_ack_0,
          idata => idata,
          odata => second_word_3959,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_3959
    phi_stmt_3963: Block -- phi operator 
      signal idata: std_logic_vector(63 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= konst_3965_wire_constant & next_third_word_4257_3966_buffered;
      req <= phi_stmt_3963_req_0 & phi_stmt_3963_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_3963",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 32) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_3963_ack_0,
          idata => idata,
          odata => third_word_3963,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_3963
    phi_stmt_3967: Block -- phi operator 
      signal idata: std_logic_vector(63 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= konst_3969_wire_constant & next_fourth_word_4267_3970_buffered;
      req <= phi_stmt_3967_req_0 & phi_stmt_3967_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_3967",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 32) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_3967_ack_0,
          idata => idata,
          odata => fourth_word_3967,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_3967
    phi_stmt_3971: Block -- phi operator 
      signal idata: std_logic_vector(1 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= konst_3973_wire_constant & get_from_dbg_4223_3974_buffered;
      req <= phi_stmt_3971_req_0 & phi_stmt_3971_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_3971",
          num_reqs => 2,
          bypass_flag => false,
          data_width => 1) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_3971_ack_0,
          idata => idata,
          odata => get_from_dbg_d_3971,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_3971
    phi_stmt_4845: Block -- phi operator 
      signal idata: std_logic_vector(5 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= R_ZERO_3_4847_wire_constant & nI_4854_4848_buffered;
      req <= phi_stmt_4845_req_0 & phi_stmt_4845_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_4845",
          num_reqs => 2,
          bypass_flag => true,
          data_width => 3) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_4845_ack_0,
          idata => idata,
          odata => I_4845,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_4845
    -- flow-through select operator MUX_3995_inst
    word_from_dbg_v_qualified_3996 <= word_from_dbg_v_3946 when (get_from_dbg_d_3971(0) /=  '0') else konst_3994_wire_constant;
    -- flow-through select operator MUX_4068_inst
    adjusted_len_4069 <= konst_4066_wire_constant when (connect_or_resume_or_detach_4063(0) /=  '0') else len_4011;
    -- flow-through select operator MUX_4110_inst
    MUX_4110_wire <= R_CCD_GOT_FIRST_4108_wire_constant when (word_from_dbg_valid_4000(0) /=  '0') else R_CCD_IDLE_4109_wire_constant;
    -- flow-through select operator MUX_4112_inst
    MUX_4112_wire <= MUX_4110_wire when (EQ_u3_u1_4106_wire(0) /=  '0') else konst_4111_wire_constant;
    -- flow-through select operator MUX_4129_inst
    MUX_4129_wire <= R_CCD_GOT_SECOND_4127_wire_constant when (AND_u1_u1_4126_wire(0) /=  '0') else R_CCD_GOT_COMMAND_4128_wire_constant;
    -- flow-through select operator MUX_4131_inst
    MUX_4131_wire <= MUX_4129_wire when (word_from_dbg_valid_4000(0) /=  '0') else R_CCD_GOT_FIRST_4130_wire_constant;
    -- flow-through select operator MUX_4132_inst
    MUX_4132_wire <= R_CCD_GOT_COMMAND_4119_wire_constant when (EQ_u8_u1_4118_wire(0) /=  '0') else MUX_4131_wire;
    -- flow-through select operator MUX_4134_inst
    MUX_4134_wire <= MUX_4132_wire when (EQ_u3_u1_4115_wire(0) /=  '0') else konst_4133_wire_constant;
    -- flow-through select operator MUX_4149_inst
    MUX_4149_wire <= R_CCD_GOT_THIRD_4147_wire_constant when (UGT_u8_u1_4146_wire(0) /=  '0') else R_CCD_GOT_COMMAND_4148_wire_constant;
    -- flow-through select operator MUX_4151_inst
    MUX_4151_wire <= MUX_4149_wire when (word_from_dbg_valid_4000(0) /=  '0') else R_CCD_GOT_SECOND_4150_wire_constant;
    -- flow-through select operator MUX_4152_inst
    MUX_4152_wire <= R_CCD_GOT_COMMAND_4142_wire_constant when (EQ_u8_u1_4141_wire(0) /=  '0') else MUX_4151_wire;
    -- flow-through select operator MUX_4154_inst
    MUX_4154_wire <= MUX_4152_wire when (EQ_u3_u1_4138_wire(0) /=  '0') else konst_4153_wire_constant;
    -- flow-through select operator MUX_4165_inst
    MUX_4165_wire <= R_CCD_GOT_FOURTH_4163_wire_constant when (word_from_dbg_valid_4000(0) /=  '0') else R_CCD_GOT_THIRD_4164_wire_constant;
    -- flow-through select operator MUX_4166_inst
    MUX_4166_wire <= R_CCD_GOT_COMMAND_4161_wire_constant when (NOT_u1_u1_4160_wire(0) /=  '0') else MUX_4165_wire;
    -- flow-through select operator MUX_4168_inst
    MUX_4168_wire <= MUX_4166_wire when (EQ_u3_u1_4158_wire(0) /=  '0') else konst_4167_wire_constant;
    -- flow-through select operator MUX_4174_inst
    MUX_4174_wire <= R_CCD_GOT_COMMAND_4172_wire_constant when (EQ_u3_u1_4171_wire(0) /=  '0') else konst_4173_wire_constant;
    -- flow-through select operator MUX_4181_inst
    MUX_4181_wire <= R_CCD_IDLE_4179_wire_constant when (EQ_u3_u1_4178_wire(0) /=  '0') else konst_4180_wire_constant;
    -- flow-through select operator MUX_4236_inst
    next_first_word_4237 <= word_from_dbg_4004 when (AND_u1_u1_4233_wire(0) /=  '0') else first_word_3955;
    -- flow-through select operator MUX_4246_inst
    next_second_word_4247 <= word_from_dbg_4004 when (AND_u1_u1_4243_wire(0) /=  '0') else second_word_3959;
    -- flow-through select operator MUX_4256_inst
    next_third_word_4257 <= word_from_dbg_4004 when (AND_u1_u1_4253_wire(0) /=  '0') else third_word_3963;
    -- flow-through select operator MUX_4266_inst
    next_fourth_word_4267 <= word_from_dbg_4004 when (AND_u1_u1_4263_wire(0) /=  '0') else fourth_word_3967;
    -- flow-through select operator MUX_4370_inst
    MUX_4370_wire <= rinit_pc_4331 when (read_init_pc_cmd_4056(0) /=  '0') else konst_4369_wire_constant;
    -- flow-through select operator MUX_4374_inst
    MUX_4374_wire <= rinit_npc_4339 when (read_init_npc_cmd_4056(0) /=  '0') else konst_4373_wire_constant;
    -- flow-through select operator MUX_4379_inst
    MUX_4379_wire <= rinit_psr_4347 when (read_init_psr_cmd_4056(0) /=  '0') else konst_4378_wire_constant;
    -- flow-through select operator MUX_4383_inst
    MUX_4383_wire <= rmode_4364 when (read_mode_cmd_4056(0) /=  '0') else konst_4382_wire_constant;
    -- flow-through select operator MUX_4432_inst
    MUX_4432_wire <= R_ACCESS_ASR_4430_wire_constant when (rasr_4414(0) /=  '0') else R_ACCESS_REG_4431_wire_constant;
    -- flow-through select operator MUX_4433_inst
    MUX_4433_wire <= R_ACCESS_Y_4428_wire_constant when (ry_4410(0) /=  '0') else MUX_4432_wire;
    -- flow-through select operator MUX_4434_inst
    MUX_4434_wire <= R_ACCESS_TBR_4426_wire_constant when (rtbr_4406(0) /=  '0') else MUX_4433_wire;
    -- flow-through select operator MUX_4435_inst
    MUX_4435_wire <= R_ACCESS_WIM_4424_wire_constant when (rwim_4402(0) /=  '0') else MUX_4434_wire;
    -- flow-through select operator MUX_4436_inst
    MUX_4436_wire <= R_ACCESS_PSR_4422_wire_constant when (rpsr_4398(0) /=  '0') else MUX_4435_wire;
    -- flow-through select operator MUX_4437_inst
    MUX_4437_wire <= R_ACCESS_REG_4420_wire_constant when (rreg_4394(0) /=  '0') else MUX_4436_wire;
    -- flow-through select operator MUX_4516_inst
    MUX_4516_wire <= R_ACCESS_ASR_4514_wire_constant when (wasr_4498(0) /=  '0') else R_ACCESS_REG_4515_wire_constant;
    -- flow-through select operator MUX_4517_inst
    MUX_4517_wire <= R_ACCESS_Y_4512_wire_constant when (wy_4494(0) /=  '0') else MUX_4516_wire;
    -- flow-through select operator MUX_4518_inst
    MUX_4518_wire <= R_ACCESS_TBR_4510_wire_constant when (wtbr_4490(0) /=  '0') else MUX_4517_wire;
    -- flow-through select operator MUX_4519_inst
    MUX_4519_wire <= R_ACCESS_WIM_4508_wire_constant when (wwim_4486(0) /=  '0') else MUX_4518_wire;
    -- flow-through select operator MUX_4520_inst
    MUX_4520_wire <= R_ACCESS_PSR_4506_wire_constant when (wpsr_4482(0) /=  '0') else MUX_4519_wire;
    -- flow-through select operator MUX_4521_inst
    MUX_4521_wire <= R_ACCESS_REG_4504_wire_constant when (wreg_4478(0) /=  '0') else MUX_4520_wire;
    -- flow-through select operator MUX_4638_inst
    MUX_4638_wire <= CONCAT_u9_u33_4636_wire_constant when (OR_u1_u1_4629_wire(0) /=  '0') else konst_4637_wire_constant;
    -- flow-through select operator MUX_4650_inst
    MUX_4650_wire <= CONCAT_u9_u33_4648_wire_constant when (OR_u1_u1_4641_wire(0) /=  '0') else konst_4649_wire_constant;
    -- flow-through select operator MUX_4675_inst
    MUX_4675_wire <= CONCAT_u9_u33_4673_wire_constant when (OR_u1_u1_4666_wire(0) /=  '0') else konst_4674_wire_constant;
    -- flow-through select operator MUX_4698_inst
    MUX_4698_wire <= CONCAT_u9_u33_4696_wire_constant when (OR_u1_u1_4689_wire(0) /=  '0') else konst_4697_wire_constant;
    -- flow-through select operator MUX_4708_inst
    MUX_4708_wire <= CONCAT_u9_u33_4706_wire_constant when (set_break_cmd_4056(0) /=  '0') else konst_4707_wire_constant;
    -- flow-through select operator MUX_4719_inst
    MUX_4719_wire <= CONCAT_u9_u33_4717_wire_constant when (call_ccu_to_teu_debug_4607(0) /=  '0') else konst_4718_wire_constant;
    -- flow-through select operator MUX_4776_inst
    MUX_4776_wire <= CONCAT_u1_u33_4774_wire when (is_added_sept_2019_read_cmd_4282(0) /=  '0') else konst_4775_wire_constant;
    -- flow-through select operator MUX_4782_inst
    MUX_4782_wire <= CONCAT_u1_u33_4780_wire when (read_iu_reg_cmd_4056(0) /=  '0') else konst_4781_wire_constant;
    -- flow-through select operator MUX_4789_inst
    MUX_4789_wire <= CONCAT_u1_u33_4787_wire when (read_fp_reg_cmd_4056(0) /=  '0') else konst_4788_wire_constant;
    -- flow-through select operator MUX_4796_inst
    MUX_4796_wire <= CONCAT_u1_u33_4794_wire_constant when (read_csr_cmd_4056(0) /=  '0') else konst_4795_wire_constant;
    -- flow-through select operator MUX_4802_inst
    MUX_4802_wire <= CONCAT_u1_u33_4800_wire when (read_mem_cmd_4056(0) /=  '0') else konst_4801_wire_constant;
    -- flow-through select operator MUX_4866_inst
    MUX_4866_wire <= first_word_3955 when (EQ_u3_u1_4863_wire(0) /=  '0') else konst_4865_wire_constant;
    -- flow-through select operator MUX_4872_inst
    MUX_4872_wire <= second_word_3959 when (EQ_u3_u1_4869_wire(0) /=  '0') else konst_4871_wire_constant;
    -- flow-through select operator MUX_4879_inst
    MUX_4879_wire <= third_word_3963 when (EQ_u3_u1_4876_wire(0) /=  '0') else konst_4878_wire_constant;
    -- flow-through select operator MUX_4885_inst
    MUX_4885_wire <= fourth_word_3967 when (EQ_u3_u1_4882_wire(0) /=  '0') else konst_4884_wire_constant;
    -- flow-through slice operator slice_3978_inst
    ccu_cmd_valid_3979 <= command_from_ccu_daemon_3942(32 downto 32);
    -- flow-through slice operator slice_3982_inst
    ccu_cmd_3983 <= command_from_ccu_daemon_3942(31 downto 0);
    -- flow-through slice operator slice_3999_inst
    word_from_dbg_valid_4000 <= word_from_dbg_v_qualified_3996(32 downto 32);
    -- flow-through slice operator slice_4003_inst
    word_from_dbg_4004 <= word_from_dbg_v_qualified_3996(31 downto 0);
    -- flow-through slice operator slice_4010_inst
    len_4011 <= first_word_3955(31 downto 24);
    -- flow-through slice operator slice_4014_inst
    op_code_4015 <= first_word_3955(23 downto 16);
    -- flow-through slice operator slice_4018_inst
    cmd_data_4019 <= first_word_3955(15 downto 0);
    slice_4289_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= slice_4289_inst_req_0;
      slice_4289_inst_ack_0<= sample_ack(0);
      update_req(0) <= slice_4289_inst_req_1;
      slice_4289_inst_ack_1<= update_ack(0);
      slice_4289_inst: SliceSplitProtocol generic map(name => "slice_4289_inst", in_data_width => 16, high_index => 4, low_index => 0, buffering => 1, flow_through => false,  full_rate => false) -- 
        port map( din => cmd_data_4019, dout => slice_4289_wire, sample_req => sample_req(0) , sample_ack => sample_ack(0) , update_req => update_req(0) , update_ack => update_ack(0) , clk => clk, reset => reset); -- 
      -- 
    end block;
    -- flow-through slice operator slice_4393_inst
    rreg_4394 <= cmd_data_4019(10 downto 10);
    -- flow-through slice operator slice_4397_inst
    rpsr_4398 <= cmd_data_4019(9 downto 9);
    -- flow-through slice operator slice_4401_inst
    rwim_4402 <= cmd_data_4019(8 downto 8);
    -- flow-through slice operator slice_4405_inst
    rtbr_4406 <= cmd_data_4019(7 downto 7);
    -- flow-through slice operator slice_4409_inst
    ry_4410 <= cmd_data_4019(6 downto 6);
    -- flow-through slice operator slice_4413_inst
    rasr_4414 <= cmd_data_4019(5 downto 5);
    -- flow-through slice operator slice_4417_inst
    rreg_id_4418 <= cmd_data_4019(4 downto 0);
    -- flow-through slice operator slice_4456_inst
    fsr_4457 <= cmd_data_4019(5 downto 5);
    -- flow-through slice operator slice_4460_inst
    fp_reg_id_4461 <= cmd_data_4019(4 downto 0);
    -- flow-through slice operator slice_4477_inst
    wreg_4478 <= cmd_data_4019(10 downto 10);
    -- flow-through slice operator slice_4481_inst
    wpsr_4482 <= cmd_data_4019(9 downto 9);
    -- flow-through slice operator slice_4485_inst
    wwim_4486 <= cmd_data_4019(8 downto 8);
    -- flow-through slice operator slice_4489_inst
    wtbr_4490 <= cmd_data_4019(7 downto 7);
    -- flow-through slice operator slice_4493_inst
    wy_4494 <= cmd_data_4019(6 downto 6);
    -- flow-through slice operator slice_4497_inst
    wasr_4498 <= cmd_data_4019(5 downto 5);
    -- flow-through slice operator slice_4501_inst
    wreg_id_4502 <= cmd_data_4019(4 downto 0);
    -- flow-through slice operator slice_4542_inst
    fpwfsr_4543 <= cmd_data_4019(5 downto 5);
    -- flow-through slice operator slice_4546_inst
    fpwreg_id_4547 <= cmd_data_4019(4 downto 0);
    -- flow-through slice operator slice_4564_inst
    asi_read_mem_4565 <= cmd_data_4019(7 downto 0);
    -- flow-through slice operator slice_4582_inst
    asi_write_mem_4583 <= cmd_data_4019(7 downto 0);
    W_mode_sig_4353_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_mode_sig_4353_inst_req_0;
      W_mode_sig_4353_inst_ack_0<= wack(0);
      rreq(0) <= W_mode_sig_4353_inst_req_1;
      W_mode_sig_4353_inst_ack_1<= rack(0);
      W_mode_sig_4353_inst : InterlockBuffer generic map ( -- 
        name => "W_mode_sig_4353_inst",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 4,
        out_data_width => 4,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => RPIPE_CCU_TO_DBG_MODE_SIG_4354_wire,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => mode_sig_4355,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_rinit_npc_4337_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_rinit_npc_4337_inst_req_0;
      W_rinit_npc_4337_inst_ack_0<= wack(0);
      rreq(0) <= W_rinit_npc_4337_inst_req_1;
      W_rinit_npc_4337_inst_ack_1<= rack(0);
      W_rinit_npc_4337_inst : InterlockBuffer generic map ( -- 
        name => "W_rinit_npc_4337_inst",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => RPIPE_init_npc_4338_wire,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => rinit_npc_4339,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_rinit_pc_4329_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_rinit_pc_4329_inst_req_0;
      W_rinit_pc_4329_inst_ack_0<= wack(0);
      rreq(0) <= W_rinit_pc_4329_inst_req_1;
      W_rinit_pc_4329_inst_ack_1<= rack(0);
      W_rinit_pc_4329_inst : InterlockBuffer generic map ( -- 
        name => "W_rinit_pc_4329_inst",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => RPIPE_init_pc_4330_wire,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => rinit_pc_4331,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_rinit_psr_4345_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_rinit_psr_4345_inst_req_0;
      W_rinit_psr_4345_inst_ack_0<= wack(0);
      rreq(0) <= W_rinit_psr_4345_inst_req_1;
      W_rinit_psr_4345_inst_ack_1<= rack(0);
      W_rinit_psr_4345_inst : InterlockBuffer generic map ( -- 
        name => "W_rinit_psr_4345_inst",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => RPIPE_init_psr_4346_wire,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => rinit_psr_4347,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    get_from_dbg_4223_3974_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= get_from_dbg_4223_3974_buf_req_0;
      get_from_dbg_4223_3974_buf_ack_0<= wack(0);
      rreq(0) <= get_from_dbg_4223_3974_buf_req_1;
      get_from_dbg_4223_3974_buf_ack_1<= rack(0);
      get_from_dbg_4223_3974_buf : InterlockBuffer generic map ( -- 
        name => "get_from_dbg_4223_3974_buf",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 1,
        out_data_width => 1,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => get_from_dbg_4223,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => get_from_dbg_4223_3974_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    nCCD_STATE_4184_3954_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= nCCD_STATE_4184_3954_buf_req_0;
      nCCD_STATE_4184_3954_buf_ack_0<= wack(0);
      rreq(0) <= nCCD_STATE_4184_3954_buf_req_1;
      nCCD_STATE_4184_3954_buf_ack_1<= rack(0);
      nCCD_STATE_4184_3954_buf : InterlockBuffer generic map ( -- 
        name => "nCCD_STATE_4184_3954_buf",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 3,
        out_data_width => 3,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => nCCD_STATE_4184,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => nCCD_STATE_4184_3954_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    nI_4854_4848_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= nI_4854_4848_buf_req_0;
      nI_4854_4848_buf_ack_0<= wack(0);
      rreq(0) <= nI_4854_4848_buf_req_1;
      nI_4854_4848_buf_ack_1<= rack(0);
      nI_4854_4848_buf : InterlockBuffer generic map ( -- 
        name => "nI_4854_4848_buf",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 3,
        out_data_width => 3,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => nI_4854,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => nI_4854_4848_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    next_first_word_4237_3958_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= next_first_word_4237_3958_buf_req_0;
      next_first_word_4237_3958_buf_ack_0<= wack(0);
      rreq(0) <= next_first_word_4237_3958_buf_req_1;
      next_first_word_4237_3958_buf_ack_1<= rack(0);
      next_first_word_4237_3958_buf : InterlockBuffer generic map ( -- 
        name => "next_first_word_4237_3958_buf",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => next_first_word_4237,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => next_first_word_4237_3958_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    next_fourth_word_4267_3970_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= next_fourth_word_4267_3970_buf_req_0;
      next_fourth_word_4267_3970_buf_ack_0<= wack(0);
      rreq(0) <= next_fourth_word_4267_3970_buf_req_1;
      next_fourth_word_4267_3970_buf_ack_1<= rack(0);
      next_fourth_word_4267_3970_buf : InterlockBuffer generic map ( -- 
        name => "next_fourth_word_4267_3970_buf",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => next_fourth_word_4267,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => next_fourth_word_4267_3970_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    next_second_word_4247_3962_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= next_second_word_4247_3962_buf_req_0;
      next_second_word_4247_3962_buf_ack_0<= wack(0);
      rreq(0) <= next_second_word_4247_3962_buf_req_1;
      next_second_word_4247_3962_buf_ack_1<= rack(0);
      next_second_word_4247_3962_buf : InterlockBuffer generic map ( -- 
        name => "next_second_word_4247_3962_buf",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => next_second_word_4247,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => next_second_word_4247_3962_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    next_third_word_4257_3966_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= next_third_word_4257_3966_buf_req_0;
      next_third_word_4257_3966_buf_ack_0<= wack(0);
      rreq(0) <= next_third_word_4257_3966_buf_req_1;
      next_third_word_4257_3966_buf_ack_1<= rack(0);
      next_third_word_4257_3966_buf : InterlockBuffer generic map ( -- 
        name => "next_third_word_4257_3966_buf",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => next_third_word_4257,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => next_third_word_4257_3966_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    do_while_stmt_4843_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= cnI_4859;
      branch_instance: BranchBase -- 
        generic map( name => "do_while_stmt_4843_branch", condition_width => 1,  bypass_flag => true)
        port map( -- 
          condition => condition_sig,
          req => do_while_stmt_4843_branch_req_0,
          ack0 => do_while_stmt_4843_branch_ack_0,
          ack1 => do_while_stmt_4843_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_4283_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= AND_u1_u1_4286_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4283_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4283_branch_req_0,
          ack0 => if_stmt_4283_branch_ack_0,
          ack1 => if_stmt_4283_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_4292_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= AND_u1_u1_4295_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4292_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4292_branch_req_0,
          ack0 => if_stmt_4292_branch_ack_0,
          ack1 => if_stmt_4292_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_4303_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= AND_u1_u1_4306_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4303_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4303_branch_req_0,
          ack0 => if_stmt_4303_branch_ack_0,
          ack1 => if_stmt_4303_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_4314_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= AND_u1_u1_4317_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4314_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4314_branch_req_0,
          ack0 => if_stmt_4314_branch_ack_0,
          ack1 => if_stmt_4314_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_4325_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= AND_u1_u1_4328_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4325_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4325_branch_req_0,
          ack0 => if_stmt_4325_branch_ack_0,
          ack1 => if_stmt_4325_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_4333_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= AND_u1_u1_4336_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4333_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4333_branch_req_0,
          ack0 => if_stmt_4333_branch_ack_0,
          ack1 => if_stmt_4333_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_4341_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= AND_u1_u1_4344_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4341_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4341_branch_req_0,
          ack0 => if_stmt_4341_branch_ack_0,
          ack1 => if_stmt_4341_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_4349_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= AND_u1_u1_4352_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4349_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4349_branch_req_0,
          ack0 => if_stmt_4349_branch_ack_0,
          ack1 => if_stmt_4349_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_4387_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= AND_u1_u1_4390_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4387_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4387_branch_req_0,
          ack0 => if_stmt_4387_branch_ack_0,
          ack1 => if_stmt_4387_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_4450_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= AND_u1_u1_4453_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4450_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4450_branch_req_0,
          ack0 => if_stmt_4450_branch_ack_0,
          ack1 => if_stmt_4450_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_4471_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= AND_u1_u1_4474_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4471_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4471_branch_req_0,
          ack0 => if_stmt_4471_branch_ack_0,
          ack1 => if_stmt_4471_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_4536_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= AND_u1_u1_4539_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4536_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4536_branch_req_0,
          ack0 => if_stmt_4536_branch_ack_0,
          ack1 => if_stmt_4536_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_4558_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= AND_u1_u1_4561_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4558_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4558_branch_req_0,
          ack0 => if_stmt_4558_branch_ack_0,
          ack1 => if_stmt_4558_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_4576_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= AND_u1_u1_4579_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4576_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4576_branch_req_0,
          ack0 => if_stmt_4576_branch_ack_0,
          ack1 => if_stmt_4576_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_4827_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= AND_u1_u1_4832_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4827_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4827_branch_req_0,
          ack0 => if_stmt_4827_branch_ack_0,
          ack1 => if_stmt_4827_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_4839_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= OR_u1_u1_4842_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4839_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4839_branch_req_0,
          ack0 => if_stmt_4839_branch_ack_0,
          ack1 => if_stmt_4839_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    -- flow through binary operator ADD_u3_u3_4853_inst
    nI_4854 <= std_logic_vector(unsigned(I_4845) + unsigned(konst_4852_wire_constant));
    -- flow through binary operator AND_u1_u1_4075_inst
    report_command_ready_4076 <= (command_can_be_parsed_4024 and EQ_u3_u1_4074_wire);
    -- flow through binary operator AND_u1_u1_4126_inst
    AND_u1_u1_4126_wire <= (UGT_u8_u1_4123_wire and NOT_u1_u1_4125_wire);
    -- flow through binary operator AND_u1_u1_4196_inst
    AND_u1_u1_4196_wire <= (EQ_u3_u1_4193_wire and NOT_u1_u1_4195_wire);
    -- flow through binary operator AND_u1_u1_4203_inst
    AND_u1_u1_4203_wire <= (EQ_u3_u1_4199_wire and UGT_u8_u1_4202_wire);
    -- flow through binary operator AND_u1_u1_4211_inst
    AND_u1_u1_4211_wire <= (EQ_u3_u1_4207_wire and UGT_u8_u1_4210_wire);
    -- flow through binary operator AND_u1_u1_4217_inst
    AND_u1_u1_4217_wire <= (EQ_u3_u1_4215_wire and connect_or_resume_or_detach_4063);
    -- flow through binary operator AND_u1_u1_4233_inst
    AND_u1_u1_4233_wire <= (EQ_u3_u1_4231_wire and word_from_dbg_valid_4000);
    -- flow through binary operator AND_u1_u1_4243_inst
    AND_u1_u1_4243_wire <= (EQ_u3_u1_4241_wire and word_from_dbg_valid_4000);
    -- flow through binary operator AND_u1_u1_4253_inst
    AND_u1_u1_4253_wire <= (EQ_u3_u1_4251_wire and word_from_dbg_valid_4000);
    -- flow through binary operator AND_u1_u1_4263_inst
    AND_u1_u1_4263_wire <= (EQ_u3_u1_4261_wire and word_from_dbg_valid_4000);
    -- flow through binary operator AND_u1_u1_4286_inst
    AND_u1_u1_4286_wire <= (exec_command_4189 and write_reset_cmd_4056);
    -- flow through binary operator AND_u1_u1_4295_inst
    AND_u1_u1_4295_wire <= (exec_command_4189 and write_init_pc_cmd_4056);
    -- flow through binary operator AND_u1_u1_4306_inst
    AND_u1_u1_4306_wire <= (exec_command_4189 and write_init_npc_cmd_4056);
    -- flow through binary operator AND_u1_u1_4317_inst
    AND_u1_u1_4317_wire <= (exec_command_4189 and write_init_psr_cmd_4056);
    -- flow through binary operator AND_u1_u1_4328_inst
    AND_u1_u1_4328_wire <= (exec_command_4189 and read_init_pc_cmd_4056);
    -- flow through binary operator AND_u1_u1_4336_inst
    AND_u1_u1_4336_wire <= (exec_command_4189 and read_init_npc_cmd_4056);
    -- flow through binary operator AND_u1_u1_4344_inst
    AND_u1_u1_4344_wire <= (exec_command_4189 and read_init_psr_cmd_4056);
    -- flow through binary operator AND_u1_u1_4352_inst
    AND_u1_u1_4352_wire <= (exec_command_4189 and read_mode_cmd_4056);
    -- flow through binary operator AND_u1_u1_4390_inst
    AND_u1_u1_4390_wire <= (exec_command_4189 and read_iu_reg_cmd_4056);
    -- flow through binary operator AND_u1_u1_4453_inst
    AND_u1_u1_4453_wire <= (exec_command_4189 and read_fp_reg_cmd_4056);
    -- flow through binary operator AND_u1_u1_4474_inst
    AND_u1_u1_4474_wire <= (exec_command_4189 and write_iu_reg_cmd_4056);
    -- flow through binary operator AND_u1_u1_4539_inst
    AND_u1_u1_4539_wire <= (exec_command_4189 and write_fp_reg_cmd_4056);
    -- flow through binary operator AND_u1_u1_4561_inst
    AND_u1_u1_4561_wire <= (exec_command_4189 and read_mem_cmd_4056);
    -- flow through binary operator AND_u1_u1_4579_inst
    AND_u1_u1_4579_wire <= (exec_command_4189 and write_mem_cmd_4056);
    -- flow through binary operator AND_u1_u1_4611_inst
    run_ccu_to_teu_debug_4612 <= (call_ccu_to_teu_debug_4607 and exec_command_4189);
    -- flow through binary operator AND_u1_u1_4768_inst
    send_first_4769 <= (EQ_u3_u1_4726_wire and OR_u1_u1_4767_wire);
    -- flow through binary operator AND_u1_u1_4825_inst
    send_second_4826 <= (EQ_u3_u1_4809_wire and OR_u1_u1_4824_wire);
    -- flow through binary operator AND_u1_u1_4832_inst
    AND_u1_u1_4832_wire <= (EQ_u3_u1_4830_wire and connect_or_resume_or_detach_4063);
    -- flow through binary operator CONCAT_u1_u33_4774_inst
    process(R_ONE_1_4772_wire_constant, rdata_for_added_sept_2019_read_4386) -- 
      variable tmp_var : std_logic_vector(32 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ONE_1_4772_wire_constant, rdata_for_added_sept_2019_read_4386, tmp_var);
      CONCAT_u1_u33_4774_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u1_u33_4780_inst
    process(R_ONE_1_4778_wire_constant, rreg_val_4440) -- 
      variable tmp_var : std_logic_vector(32 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ONE_1_4778_wire_constant, rreg_val_4440, tmp_var);
      CONCAT_u1_u33_4780_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u1_u33_4787_inst
    process(R_ONE_1_4785_wire_constant, fp_reg_val_4465) -- 
      variable tmp_var : std_logic_vector(32 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ONE_1_4785_wire_constant, fp_reg_val_4465, tmp_var);
      CONCAT_u1_u33_4787_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u1_u33_4800_inst
    process(R_ONE_1_4798_wire_constant, mem_read_data_4570) -- 
      variable tmp_var : std_logic_vector(32 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ONE_1_4798_wire_constant, mem_read_data_4570, tmp_var);
      CONCAT_u1_u33_4800_wire <= tmp_var; --
    end process;
    -- shared split operator group (33) : CONCAT_u24_u32_4363_inst 
    ApConcat_group_33: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= CONCAT_u16_u24_4359_wire_constant & CONCAT_u4_u8_4362_wire;
      rmode_4364 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u24_u32_4363_inst_req_0;
      CONCAT_u24_u32_4363_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u24_u32_4363_inst_req_1;
      CONCAT_u24_u32_4363_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_33_gI: SplitGuardInterface generic map(name => "ApConcat_group_33_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_33",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 24,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 8, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 33
    -- flow through binary operator CONCAT_u4_u8_4362_inst
    process(R_ZERO_4_4360_wire_constant, mode_sig_4355) -- 
      variable tmp_var : std_logic_vector(7 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ZERO_4_4360_wire_constant, mode_sig_4355, tmp_var);
      CONCAT_u4_u8_4362_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4074_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_FIRST_4073_wire_constant, tmp_var);
      EQ_u3_u1_4074_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4106_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_IDLE_4105_wire_constant, tmp_var);
      EQ_u3_u1_4106_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4115_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_FIRST_4114_wire_constant, tmp_var);
      EQ_u3_u1_4115_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4138_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_SECOND_4137_wire_constant, tmp_var);
      EQ_u3_u1_4138_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4158_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_THIRD_4157_wire_constant, tmp_var);
      EQ_u3_u1_4158_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4171_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_FOURTH_4170_wire_constant, tmp_var);
      EQ_u3_u1_4171_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4178_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_COMMAND_4177_wire_constant, tmp_var);
      EQ_u3_u1_4178_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4188_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_COMMAND_4187_wire_constant, tmp_var);
      exec_command_4189 <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4193_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_IDLE_4192_wire_constant, tmp_var);
      EQ_u3_u1_4193_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4199_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_FIRST_4198_wire_constant, tmp_var);
      EQ_u3_u1_4199_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4207_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_SECOND_4206_wire_constant, tmp_var);
      EQ_u3_u1_4207_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4215_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_THIRD_4214_wire_constant, tmp_var);
      EQ_u3_u1_4215_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4220_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_COMMAND_4219_wire_constant, tmp_var);
      EQ_u3_u1_4220_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4231_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_IDLE_4230_wire_constant, tmp_var);
      EQ_u3_u1_4231_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4241_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_FIRST_4240_wire_constant, tmp_var);
      EQ_u3_u1_4241_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4251_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_SECOND_4250_wire_constant, tmp_var);
      EQ_u3_u1_4251_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4261_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_THIRD_4260_wire_constant, tmp_var);
      EQ_u3_u1_4261_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4726_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_COMMAND_4725_wire_constant, tmp_var);
      EQ_u3_u1_4726_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4809_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_COMMAND_4808_wire_constant, tmp_var);
      EQ_u3_u1_4809_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4830_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(CCD_STATE_3951, R_CCD_GOT_COMMAND_4829_wire_constant, tmp_var);
      EQ_u3_u1_4830_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4863_inst
    process(I_4845) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(I_4845, konst_4862_wire_constant, tmp_var);
      EQ_u3_u1_4863_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4869_inst
    process(I_4845) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(I_4845, konst_4868_wire_constant, tmp_var);
      EQ_u3_u1_4869_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4876_inst
    process(I_4845) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(I_4845, konst_4875_wire_constant, tmp_var);
      EQ_u3_u1_4876_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_4882_inst
    process(I_4845) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(I_4845, konst_4881_wire_constant, tmp_var);
      EQ_u3_u1_4882_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_4118_inst
    process(adjusted_len_4069) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(adjusted_len_4069, konst_4117_wire_constant, tmp_var);
      EQ_u8_u1_4118_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_4141_inst
    process(adjusted_len_4069) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(adjusted_len_4069, konst_4140_wire_constant, tmp_var);
      EQ_u8_u1_4141_wire <= tmp_var; --
    end process;
    -- unary operator NOT_u1_u1_4125_inst
    process(cmd_len_error_4056) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", cmd_len_error_4056, tmp_var);
      NOT_u1_u1_4125_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_4160_inst
    process(connect_or_resume_or_detach_4063) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", connect_or_resume_or_detach_4063, tmp_var);
      NOT_u1_u1_4160_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_4195_inst
    process(word_from_dbg_valid_4000) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", word_from_dbg_valid_4000, tmp_var);
      NOT_u1_u1_4195_wire <= tmp_var; -- 
    end process;
    -- flow through binary operator OR_u1_u1_4060_inst
    OR_u1_u1_4060_wire <= (connect_cmd_4056 or resume_cmd_4056);
    -- flow through binary operator OR_u1_u1_4062_inst
    connect_or_resume_or_detach_4063 <= (OR_u1_u1_4060_wire or detach_cmd_4056);
    -- flow through binary operator OR_u1_u1_4204_inst
    OR_u1_u1_4204_wire <= (AND_u1_u1_4196_wire or AND_u1_u1_4203_wire);
    -- flow through binary operator OR_u1_u1_4212_inst
    OR_u1_u1_4212_wire <= (OR_u1_u1_4204_wire or AND_u1_u1_4211_wire);
    -- flow through binary operator OR_u1_u1_4221_inst
    OR_u1_u1_4221_wire <= (AND_u1_u1_4217_wire or EQ_u3_u1_4220_wire);
    -- flow through binary operator OR_u1_u1_4222_inst
    get_from_dbg_4223 <= (OR_u1_u1_4212_wire or OR_u1_u1_4221_wire);
    -- flow through binary operator OR_u1_u1_4277_inst
    OR_u1_u1_4277_wire <= (read_mode_cmd_4056 or read_init_pc_cmd_4056);
    -- flow through binary operator OR_u1_u1_4280_inst
    OR_u1_u1_4280_wire <= (read_init_npc_cmd_4056 or read_init_psr_cmd_4056);
    -- shared split operator group (72) : OR_u1_u1_4281_inst 
    ApIntOr_group_72: Block -- 
      signal data_in: std_logic_vector(1 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= OR_u1_u1_4277_wire & OR_u1_u1_4280_wire;
      is_added_sept_2019_read_cmd_4282 <= data_out(0 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= OR_u1_u1_4281_inst_req_0;
      OR_u1_u1_4281_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= OR_u1_u1_4281_inst_req_1;
      OR_u1_u1_4281_inst_ack_1 <= ackR_unguarded(0);
      ApIntOr_group_72_gI: SplitGuardInterface generic map(name => "ApIntOr_group_72_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntOr",
          name => "ApIntOr_group_72",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 1, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 72
    -- flow through binary operator OR_u1_u1_4629_inst
    OR_u1_u1_4629_wire <= (illegal_cmd_4056 or cmd_len_error_4056);
    -- flow through binary operator OR_u1_u1_4641_inst
    OR_u1_u1_4641_wire <= (connect_cmd_4056 or detach_cmd_4056);
    -- flow through binary operator OR_u1_u1_4654_inst
    OR_u1_u1_4654_wire <= (read_iu_reg_cmd_4056 or read_fp_reg_cmd_4056);
    -- flow through binary operator OR_u1_u1_4657_inst
    OR_u1_u1_4657_wire <= (read_csr_cmd_4056 or read_mem_cmd_4056);
    -- flow through binary operator OR_u1_u1_4658_inst
    OR_u1_u1_4658_wire <= (OR_u1_u1_4654_wire or OR_u1_u1_4657_wire);
    -- flow through binary operator OR_u1_u1_4661_inst
    OR_u1_u1_4661_wire <= (read_init_pc_cmd_4056 or read_init_psr_cmd_4056);
    -- flow through binary operator OR_u1_u1_4664_inst
    OR_u1_u1_4664_wire <= (read_init_npc_cmd_4056 or read_mode_cmd_4056);
    -- flow through binary operator OR_u1_u1_4665_inst
    OR_u1_u1_4665_wire <= (OR_u1_u1_4661_wire or OR_u1_u1_4664_wire);
    -- flow through binary operator OR_u1_u1_4666_inst
    OR_u1_u1_4666_wire <= (OR_u1_u1_4658_wire or OR_u1_u1_4665_wire);
    -- flow through binary operator OR_u1_u1_4679_inst
    OR_u1_u1_4679_wire <= (write_iu_reg_cmd_4056 or write_fp_reg_cmd_4056);
    -- flow through binary operator OR_u1_u1_4682_inst
    OR_u1_u1_4682_wire <= (write_mem_cmd_4056 or write_init_pc_cmd_4056);
    -- flow through binary operator OR_u1_u1_4683_inst
    OR_u1_u1_4683_wire <= (OR_u1_u1_4679_wire or OR_u1_u1_4682_wire);
    -- flow through binary operator OR_u1_u1_4686_inst
    OR_u1_u1_4686_wire <= (write_init_psr_cmd_4056 or write_init_npc_cmd_4056);
    -- flow through binary operator OR_u1_u1_4688_inst
    OR_u1_u1_4688_wire <= (OR_u1_u1_4686_wire or write_reset_cmd_4056);
    -- flow through binary operator OR_u1_u1_4689_inst
    OR_u1_u1_4689_wire <= (OR_u1_u1_4683_wire or OR_u1_u1_4688_wire);
    -- flow through binary operator OR_u1_u1_4729_inst
    OR_u1_u1_4729_wire <= (illegal_cmd_4056 or cmd_len_error_4056);
    -- flow through binary operator OR_u1_u1_4732_inst
    OR_u1_u1_4732_wire <= (connect_cmd_4056 or detach_cmd_4056);
    -- flow through binary operator OR_u1_u1_4733_inst
    OR_u1_u1_4733_wire <= (OR_u1_u1_4729_wire or OR_u1_u1_4732_wire);
    -- flow through binary operator OR_u1_u1_4736_inst
    OR_u1_u1_4736_wire <= (read_iu_reg_cmd_4056 or read_fp_reg_cmd_4056);
    -- flow through binary operator OR_u1_u1_4739_inst
    OR_u1_u1_4739_wire <= (read_csr_cmd_4056 or read_mem_cmd_4056);
    -- flow through binary operator OR_u1_u1_4740_inst
    OR_u1_u1_4740_wire <= (OR_u1_u1_4736_wire or OR_u1_u1_4739_wire);
    -- flow through binary operator OR_u1_u1_4743_inst
    OR_u1_u1_4743_wire <= (read_init_pc_cmd_4056 or read_init_npc_cmd_4056);
    -- flow through binary operator OR_u1_u1_4746_inst
    OR_u1_u1_4746_wire <= (read_init_psr_cmd_4056 or read_mode_cmd_4056);
    -- flow through binary operator OR_u1_u1_4747_inst
    OR_u1_u1_4747_wire <= (OR_u1_u1_4743_wire or OR_u1_u1_4746_wire);
    -- flow through binary operator OR_u1_u1_4748_inst
    OR_u1_u1_4748_wire <= (OR_u1_u1_4740_wire or OR_u1_u1_4747_wire);
    -- flow through binary operator OR_u1_u1_4749_inst
    OR_u1_u1_4749_wire <= (OR_u1_u1_4733_wire or OR_u1_u1_4748_wire);
    -- flow through binary operator OR_u1_u1_4752_inst
    OR_u1_u1_4752_wire <= (write_iu_reg_cmd_4056 or write_fp_reg_cmd_4056);
    -- flow through binary operator OR_u1_u1_4755_inst
    OR_u1_u1_4755_wire <= (write_mem_cmd_4056 or write_init_pc_cmd_4056);
    -- flow through binary operator OR_u1_u1_4756_inst
    OR_u1_u1_4756_wire <= (OR_u1_u1_4752_wire or OR_u1_u1_4755_wire);
    -- flow through binary operator OR_u1_u1_4759_inst
    OR_u1_u1_4759_wire <= (write_init_npc_cmd_4056 or write_init_psr_cmd_4056);
    -- flow through binary operator OR_u1_u1_4761_inst
    OR_u1_u1_4761_wire <= (OR_u1_u1_4759_wire or write_reset_cmd_4056);
    -- flow through binary operator OR_u1_u1_4762_inst
    OR_u1_u1_4762_wire <= (OR_u1_u1_4756_wire or OR_u1_u1_4761_wire);
    -- flow through binary operator OR_u1_u1_4764_inst
    OR_u1_u1_4764_wire <= (OR_u1_u1_4762_wire or set_break_cmd_4056);
    -- flow through binary operator OR_u1_u1_4766_inst
    OR_u1_u1_4766_wire <= (OR_u1_u1_4764_wire or call_ccu_to_teu_debug_4607);
    -- flow through binary operator OR_u1_u1_4767_inst
    OR_u1_u1_4767_wire <= (OR_u1_u1_4749_wire or OR_u1_u1_4766_wire);
    -- flow through binary operator OR_u1_u1_4812_inst
    OR_u1_u1_4812_wire <= (read_iu_reg_cmd_4056 or read_fp_reg_cmd_4056);
    -- flow through binary operator OR_u1_u1_4815_inst
    OR_u1_u1_4815_wire <= (read_csr_cmd_4056 or read_mem_cmd_4056);
    -- flow through binary operator OR_u1_u1_4816_inst
    OR_u1_u1_4816_wire <= (OR_u1_u1_4812_wire or OR_u1_u1_4815_wire);
    -- flow through binary operator OR_u1_u1_4819_inst
    OR_u1_u1_4819_wire <= (read_init_pc_cmd_4056 or read_init_npc_cmd_4056);
    -- flow through binary operator OR_u1_u1_4822_inst
    OR_u1_u1_4822_wire <= (read_init_psr_cmd_4056 or read_mode_cmd_4056);
    -- flow through binary operator OR_u1_u1_4823_inst
    OR_u1_u1_4823_wire <= (OR_u1_u1_4819_wire or OR_u1_u1_4822_wire);
    -- flow through binary operator OR_u1_u1_4824_inst
    OR_u1_u1_4824_wire <= (OR_u1_u1_4816_wire or OR_u1_u1_4823_wire);
    -- flow through binary operator OR_u1_u1_4842_inst
    OR_u1_u1_4842_wire <= (resume_cmd_4056 or detach_cmd_4056);
    -- flow through binary operator OR_u32_u32_4375_inst
    OR_u32_u32_4375_wire <= (MUX_4370_wire or MUX_4374_wire);
    -- flow through binary operator OR_u32_u32_4384_inst
    OR_u32_u32_4384_wire <= (MUX_4379_wire or MUX_4383_wire);
    -- shared split operator group (118) : OR_u32_u32_4385_inst 
    ApIntOr_group_118: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= OR_u32_u32_4375_wire & OR_u32_u32_4384_wire;
      rdata_for_added_sept_2019_read_4386 <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= OR_u32_u32_4385_inst_req_0;
      OR_u32_u32_4385_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= OR_u32_u32_4385_inst_req_1;
      OR_u32_u32_4385_inst_ack_1 <= ackR_unguarded(0);
      ApIntOr_group_118_gI: SplitGuardInterface generic map(name => "ApIntOr_group_118_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntOr",
          name => "ApIntOr_group_118",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 118
    -- flow through binary operator OR_u32_u32_4873_inst
    OR_u32_u32_4873_wire <= (MUX_4866_wire or MUX_4872_wire);
    -- flow through binary operator OR_u32_u32_4886_inst
    OR_u32_u32_4886_wire <= (MUX_4879_wire or MUX_4885_wire);
    -- flow through binary operator OR_u32_u32_4887_inst
    to_ccu_4888 <= (OR_u32_u32_4873_wire or OR_u32_u32_4886_wire);
    -- flow through binary operator OR_u33_u33_4651_inst
    OR_u33_u33_4651_wire <= (MUX_4638_wire or MUX_4650_wire);
    -- flow through binary operator OR_u33_u33_4676_inst
    OR_u33_u33_4676_wire <= (OR_u33_u33_4651_wire or MUX_4675_wire);
    -- flow through binary operator OR_u33_u33_4709_inst
    OR_u33_u33_4709_wire <= (MUX_4698_wire or MUX_4708_wire);
    -- flow through binary operator OR_u33_u33_4720_inst
    OR_u33_u33_4720_wire <= (OR_u33_u33_4709_wire or MUX_4719_wire);
    -- flow through binary operator OR_u33_u33_4721_inst
    first_word_to_debug_interface_4722 <= (OR_u33_u33_4676_wire or OR_u33_u33_4720_wire);
    -- flow through binary operator OR_u33_u33_4783_inst
    OR_u33_u33_4783_wire <= (MUX_4776_wire or MUX_4782_wire);
    -- flow through binary operator OR_u33_u33_4790_inst
    OR_u33_u33_4790_wire <= (OR_u33_u33_4783_wire or MUX_4789_wire);
    -- flow through binary operator OR_u33_u33_4803_inst
    OR_u33_u33_4803_wire <= (MUX_4796_wire or MUX_4802_wire);
    -- flow through binary operator OR_u33_u33_4804_inst
    second_word_to_debug_interface_4805 <= (OR_u33_u33_4790_wire or OR_u33_u33_4803_wire);
    -- flow through binary operator OR_u3_u3_4135_inst
    OR_u3_u3_4135_wire <= (MUX_4112_wire or MUX_4134_wire);
    -- flow through binary operator OR_u3_u3_4155_inst
    OR_u3_u3_4155_wire <= (OR_u3_u3_4135_wire or MUX_4154_wire);
    -- flow through binary operator OR_u3_u3_4175_inst
    OR_u3_u3_4175_wire <= (MUX_4168_wire or MUX_4174_wire);
    -- flow through binary operator OR_u3_u3_4182_inst
    OR_u3_u3_4182_wire <= (OR_u3_u3_4175_wire or MUX_4181_wire);
    -- flow through binary operator OR_u3_u3_4183_inst
    nCCD_STATE_4184 <= (OR_u3_u3_4155_wire or OR_u3_u3_4182_wire);
    -- flow through binary operator UGT_u3_u1_4023_inst
    process(CCD_STATE_3951) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUgt_proc(CCD_STATE_3951, R_CCD_IDLE_4022_wire_constant, tmp_var);
      command_can_be_parsed_4024 <= tmp_var; --
    end process;
    -- flow through binary operator UGT_u8_u1_4123_inst
    process(adjusted_len_4069) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUgt_proc(adjusted_len_4069, konst_4122_wire_constant, tmp_var);
      UGT_u8_u1_4123_wire <= tmp_var; --
    end process;
    -- flow through binary operator UGT_u8_u1_4146_inst
    process(adjusted_len_4069) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUgt_proc(adjusted_len_4069, konst_4145_wire_constant, tmp_var);
      UGT_u8_u1_4146_wire <= tmp_var; --
    end process;
    -- flow through binary operator UGT_u8_u1_4202_inst
    process(adjusted_len_4069) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUgt_proc(adjusted_len_4069, konst_4201_wire_constant, tmp_var);
      UGT_u8_u1_4202_wire <= tmp_var; --
    end process;
    -- flow through binary operator UGT_u8_u1_4210_inst
    process(adjusted_len_4069) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUgt_proc(adjusted_len_4069, konst_4209_wire_constant, tmp_var);
      UGT_u8_u1_4210_wire <= tmp_var; --
    end process;
    -- flow through binary operator ULT_u3_u1_4858_inst
    process(I_4845) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUlt_proc(I_4845, konst_4857_wire_constant, tmp_var);
      cnI_4859 <= tmp_var; --
    end process;
    -- read from input-signal CCU_TO_DBG_MODE_SIG
    RPIPE_CCU_TO_DBG_MODE_SIG_4354_wire <= CCU_TO_DBG_MODE_SIG;
    -- shared inport operator group (1) : RPIPE_ccu_daemon_to_ccu_debug_daemon_3945_inst 
    InportGroup_1: Block -- 
      signal data_out: std_logic_vector(32 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 0 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= RPIPE_ccu_daemon_to_ccu_debug_daemon_3945_inst_req_0;
      RPIPE_ccu_daemon_to_ccu_debug_daemon_3945_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= RPIPE_ccu_daemon_to_ccu_debug_daemon_3945_inst_req_1;
      RPIPE_ccu_daemon_to_ccu_debug_daemon_3945_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      RPIPE_ccu_daemon_to_ccu_debug_daemon_3945_wire <= data_out(32 downto 0);
      ccu_daemon_to_ccu_debug_daemon_read_1_gI: SplitGuardInterface generic map(name => "ccu_daemon_to_ccu_debug_daemon_read_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      ccu_daemon_to_ccu_debug_daemon_read_1: InputPortRevised -- 
        generic map ( name => "ccu_daemon_to_ccu_debug_daemon_read_1", data_width => 33,  num_reqs => 1,  output_buffering => outBUFs,   nonblocking_read_flag => true,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => ccu_daemon_to_ccu_debug_daemon_pipe_read_req(0),
          oack => ccu_daemon_to_ccu_debug_daemon_pipe_read_ack(0),
          odata => ccu_daemon_to_ccu_debug_daemon_pipe_read_data(32 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 1
    -- shared inport operator group (2) : RPIPE_debug_interface_to_ccu_3950_inst 
    InportGroup_2: Block -- 
      signal data_out: std_logic_vector(32 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 0 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => true);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= RPIPE_debug_interface_to_ccu_3950_inst_req_0;
      RPIPE_debug_interface_to_ccu_3950_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= RPIPE_debug_interface_to_ccu_3950_inst_req_1;
      RPIPE_debug_interface_to_ccu_3950_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <= get_from_dbg_4223(0);
      RPIPE_debug_interface_to_ccu_3950_wire <= data_out(32 downto 0);
      debug_interface_to_ccu_read_2_gI: SplitGuardInterface generic map(name => "debug_interface_to_ccu_read_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      debug_interface_to_ccu_read_2: InputPortRevised -- 
        generic map ( name => "debug_interface_to_ccu_read_2", data_width => 33,  num_reqs => 1,  output_buffering => outBUFs,   nonblocking_read_flag => true,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => debug_interface_to_ccu_pipe_read_req(0),
          oack => debug_interface_to_ccu_pipe_read_ack(0),
          odata => debug_interface_to_ccu_pipe_read_data(32 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 2
    -- read from input-signal init_npc
    RPIPE_init_npc_4338_wire <= init_npc;
    -- read from input-signal init_pc
    RPIPE_init_pc_4330_wire <= init_pc;
    -- read from input-signal init_psr
    RPIPE_init_psr_4346_wire <= init_psr;
    -- shared outport operator group (0) : WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_inst 
    OutportGroup_0: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_inst_req_0;
      WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_inst_req_1;
      WPIPE_DBG_TO_CCU_INIT_NPC_SIG_4310_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= second_word_3959;
      DBG_TO_CCU_INIT_NPC_SIG_write_0_gI: SplitGuardInterface generic map(name => "DBG_TO_CCU_INIT_NPC_SIG_write_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      DBG_TO_CCU_INIT_NPC_SIG_write_0: OutputPortRevised -- 
        generic map ( name => "DBG_TO_CCU_INIT_NPC_SIG", data_width => 32, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => DBG_TO_CCU_INIT_NPC_SIG_pipe_write_req(0),
          oack => DBG_TO_CCU_INIT_NPC_SIG_pipe_write_ack(0),
          odata => DBG_TO_CCU_INIT_NPC_SIG_pipe_write_data(31 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 0
    -- shared outport operator group (1) : WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_inst 
    OutportGroup_1: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_inst_req_0;
      WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_inst_req_1;
      WPIPE_DBG_TO_CCU_INIT_PC_SIG_4299_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= second_word_3959;
      DBG_TO_CCU_INIT_PC_SIG_write_1_gI: SplitGuardInterface generic map(name => "DBG_TO_CCU_INIT_PC_SIG_write_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      DBG_TO_CCU_INIT_PC_SIG_write_1: OutputPortRevised -- 
        generic map ( name => "DBG_TO_CCU_INIT_PC_SIG", data_width => 32, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => DBG_TO_CCU_INIT_PC_SIG_pipe_write_req(0),
          oack => DBG_TO_CCU_INIT_PC_SIG_pipe_write_ack(0),
          odata => DBG_TO_CCU_INIT_PC_SIG_pipe_write_data(31 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 1
    -- shared outport operator group (2) : WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_inst 
    OutportGroup_2: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_inst_req_0;
      WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_inst_req_1;
      WPIPE_DBG_TO_CCU_INIT_PSR_SIG_4321_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= second_word_3959;
      DBG_TO_CCU_INIT_PSR_SIG_write_2_gI: SplitGuardInterface generic map(name => "DBG_TO_CCU_INIT_PSR_SIG_write_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      DBG_TO_CCU_INIT_PSR_SIG_write_2: OutputPortRevised -- 
        generic map ( name => "DBG_TO_CCU_INIT_PSR_SIG", data_width => 32, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => DBG_TO_CCU_INIT_PSR_SIG_pipe_write_req(0),
          oack => DBG_TO_CCU_INIT_PSR_SIG_pipe_write_ack(0),
          odata => DBG_TO_CCU_INIT_PSR_SIG_pipe_write_data(31 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 2
    -- shared outport operator group (3) : WPIPE_DBG_TO_CCU_RESET_SIG_4287_inst 
    OutportGroup_3: Block -- 
      signal data_in: std_logic_vector(4 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_DBG_TO_CCU_RESET_SIG_4287_inst_req_0;
      WPIPE_DBG_TO_CCU_RESET_SIG_4287_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_DBG_TO_CCU_RESET_SIG_4287_inst_req_1;
      WPIPE_DBG_TO_CCU_RESET_SIG_4287_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= slice_4289_wire;
      DBG_TO_CCU_RESET_SIG_write_3_gI: SplitGuardInterface generic map(name => "DBG_TO_CCU_RESET_SIG_write_3_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      DBG_TO_CCU_RESET_SIG_write_3: OutputPortRevised -- 
        generic map ( name => "DBG_TO_CCU_RESET_SIG", data_width => 5, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => DBG_TO_CCU_RESET_SIG_pipe_write_req(0),
          oack => DBG_TO_CCU_RESET_SIG_pipe_write_ack(0),
          odata => DBG_TO_CCU_RESET_SIG_pipe_write_data(4 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 3
    -- shared outport operator group (4) : WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_inst 
    OutportGroup_4: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_inst_req_0;
      WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_inst_req_1;
      WPIPE_ccu_debug_daemon_to_ccu_daemon_4889_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= to_ccu_4888;
      ccu_debug_daemon_to_ccu_daemon_write_4_gI: SplitGuardInterface generic map(name => "ccu_debug_daemon_to_ccu_daemon_write_4_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      ccu_debug_daemon_to_ccu_daemon_write_4: OutputPortRevised -- 
        generic map ( name => "ccu_debug_daemon_to_ccu_daemon", data_width => 32, num_reqs => 1, input_buffering => inBUFs, full_rate => true,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => ccu_debug_daemon_to_ccu_daemon_pipe_write_req(0),
          oack => ccu_debug_daemon_to_ccu_daemon_pipe_write_ack(0),
          odata => ccu_debug_daemon_to_ccu_daemon_pipe_write_data(31 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 4
    -- shared outport operator group (5) : WPIPE_ccu_to_debug_interface_3985_inst WPIPE_ccu_to_debug_interface_4904_inst WPIPE_ccu_to_debug_interface_4911_inst 
    OutportGroup_5: Block -- 
      signal data_in: std_logic_vector(98 downto 0);
      signal sample_req, sample_ack : BooleanArray( 2 downto 0);
      signal update_req, update_ack : BooleanArray( 2 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 2 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 2 downto 0);
      signal guard_vector : std_logic_vector( 2 downto 0);
      constant inBUFs : IntegerArray(2 downto 0) := (2 => 0, 1 => 0, 0 => 0);
      constant guardFlags : BooleanArray(2 downto 0) := (0 => true, 1 => true, 2 => true);
      constant guardBuffering: IntegerArray(2 downto 0)  := (0 => 2, 1 => 2, 2 => 2);
      -- 
    begin -- 
      sample_req_unguarded(2) <= WPIPE_ccu_to_debug_interface_3985_inst_req_0;
      sample_req_unguarded(1) <= WPIPE_ccu_to_debug_interface_4904_inst_req_0;
      sample_req_unguarded(0) <= WPIPE_ccu_to_debug_interface_4911_inst_req_0;
      WPIPE_ccu_to_debug_interface_3985_inst_ack_0 <= sample_ack_unguarded(2);
      WPIPE_ccu_to_debug_interface_4904_inst_ack_0 <= sample_ack_unguarded(1);
      WPIPE_ccu_to_debug_interface_4911_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(2) <= WPIPE_ccu_to_debug_interface_3985_inst_req_1;
      update_req_unguarded(1) <= WPIPE_ccu_to_debug_interface_4904_inst_req_1;
      update_req_unguarded(0) <= WPIPE_ccu_to_debug_interface_4911_inst_req_1;
      WPIPE_ccu_to_debug_interface_3985_inst_ack_1 <= update_ack_unguarded(2);
      WPIPE_ccu_to_debug_interface_4904_inst_ack_1 <= update_ack_unguarded(1);
      WPIPE_ccu_to_debug_interface_4911_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <= send_second_4826(0);
      guard_vector(1)  <= send_first_4769(0);
      guard_vector(2)  <= ccu_cmd_valid_3979(0);
      data_in <= command_from_ccu_daemon_3942 & first_word_to_debug_interface_4722 & second_word_to_debug_interface_4805;
      ccu_to_debug_interface_write_5_gI: SplitGuardInterface generic map(name => "ccu_to_debug_interface_write_5_gI", nreqs => 3, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      ccu_to_debug_interface_write_5: OutputPortRevised -- 
        generic map ( name => "ccu_to_debug_interface", data_width => 33, num_reqs => 3, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => ccu_to_debug_interface_pipe_write_req(0),
          oack => ccu_to_debug_interface_pipe_write_ack(0),
          odata => ccu_to_debug_interface_pipe_write_data(32 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 5
    -- shared outport operator group (6) : WPIPE_init_npc_4307_inst 
    OutportGroup_6: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_init_npc_4307_inst_req_0;
      WPIPE_init_npc_4307_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_init_npc_4307_inst_req_1;
      WPIPE_init_npc_4307_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= second_word_3959;
      init_npc_write_6_gI: SplitGuardInterface generic map(name => "init_npc_write_6_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      init_npc_write_6: OutputPortRevised -- 
        generic map ( name => "init_npc", data_width => 32, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => init_npc_pipe_write_req(0),
          oack => init_npc_pipe_write_ack(0),
          odata => init_npc_pipe_write_data(31 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 6
    -- shared outport operator group (7) : WPIPE_init_pc_4296_inst 
    OutportGroup_7: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_init_pc_4296_inst_req_0;
      WPIPE_init_pc_4296_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_init_pc_4296_inst_req_1;
      WPIPE_init_pc_4296_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= second_word_3959;
      init_pc_write_7_gI: SplitGuardInterface generic map(name => "init_pc_write_7_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      init_pc_write_7: OutputPortRevised -- 
        generic map ( name => "init_pc", data_width => 32, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => init_pc_pipe_write_req(0),
          oack => init_pc_pipe_write_ack(0),
          odata => init_pc_pipe_write_data(31 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 7
    -- shared outport operator group (8) : WPIPE_init_psr_4318_inst 
    OutportGroup_8: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_init_psr_4318_inst_req_0;
      WPIPE_init_psr_4318_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_init_psr_4318_inst_req_1;
      WPIPE_init_psr_4318_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= second_word_3959;
      init_psr_write_8_gI: SplitGuardInterface generic map(name => "init_psr_write_8_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      init_psr_write_8: OutputPortRevised -- 
        generic map ( name => "init_psr", data_width => 32, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => init_psr_pipe_write_req(0),
          oack => init_psr_pipe_write_ack(0),
          odata => init_psr_pipe_write_data(31 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 8
    volatile_operator_decode_debug_command_6168: decode_debug_command_Volatile port map(valid_debug_cmd => command_can_be_parsed_4024, length => len_4011, op_code => op_code_4015, connect_cmd => connect_cmd_4056, resume_cmd => resume_cmd_4056, detach_cmd => detach_cmd_4056, kill_cmd => kill_cmd_4056, read_iu_reg_cmd => read_iu_reg_cmd_4056, read_fp_reg_cmd => read_fp_reg_cmd_4056, read_csr_cmd => read_csr_cmd_4056, read_mem_cmd => read_mem_cmd_4056, write_iu_reg_cmd => write_iu_reg_cmd_4056, write_fp_reg_cmd => write_fp_reg_cmd_4056, write_mem_cmd => write_mem_cmd_4056, set_break_cmd => set_break_cmd_4056, set_watch_cmd => set_watch_cmd_4056, remove_break_cmd => remove_break_cmd_4056, remove_watch_cmd => remove_watch_cmd_4056, write_reset_cmd => write_reset_cmd_4056, write_init_pc_cmd => write_init_pc_cmd_4056, write_init_npc_cmd => write_init_npc_cmd_4056, write_init_psr_cmd => write_init_psr_cmd_4056, read_mode_cmd => read_mode_cmd_4056, read_init_pc_cmd => read_init_pc_cmd_4056, read_init_npc_cmd => read_init_npc_cmd_4056, read_init_psr_cmd => read_init_psr_cmd_4056, illegal_cmd => illegal_cmd_4056, single_word_cmd => single_word_cmd_4056, two_word_cmd => two_word_cmd_4056, three_word_cmd => three_word_cmd_4056, cmd_len_error => cmd_len_error_4056); 
    -- shared call operator group (1) : call_stmt_4440_call 
    read_iunit_register_call_group_1: Block -- 
      signal data_in: std_logic_vector(7 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_4440_call_req_0;
      call_stmt_4440_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_4440_call_req_1;
      call_stmt_4440_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      read_iunit_register_call_group_1_gI: SplitGuardInterface generic map(name => "read_iunit_register_call_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= MUX_4437_wire & rreg_id_4418;
      rreg_val_4440 <= data_out(31 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 8,
        owidth => 8,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => read_iunit_register_call_reqs(0),
          ackR => read_iunit_register_call_acks(0),
          dataR => read_iunit_register_call_data(7 downto 0),
          tagR => read_iunit_register_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 32,
          owidth => 32,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => read_iunit_register_return_acks(0), -- cross-over
          ackL => read_iunit_register_return_reqs(0), -- cross-over
          dataL => read_iunit_register_return_data(31 downto 0),
          tagL => read_iunit_register_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 1
    -- shared call operator group (2) : call_stmt_4465_call 
    read_fpunit_register_call_group_2: Block -- 
      signal data_in: std_logic_vector(5 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_4465_call_req_0;
      call_stmt_4465_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_4465_call_req_1;
      call_stmt_4465_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      read_fpunit_register_call_group_2_gI: SplitGuardInterface generic map(name => "read_fpunit_register_call_group_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= fsr_4457 & fp_reg_id_4461;
      fp_reg_val_4465 <= data_out(31 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 6,
        owidth => 6,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => read_fpunit_register_call_reqs(0),
          ackR => read_fpunit_register_call_acks(0),
          dataR => read_fpunit_register_call_data(5 downto 0),
          tagR => read_fpunit_register_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 32,
          owidth => 32,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => read_fpunit_register_return_acks(0), -- cross-over
          ackL => read_fpunit_register_return_reqs(0), -- cross-over
          dataL => read_fpunit_register_return_data(31 downto 0),
          tagL => read_fpunit_register_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 2
    -- shared call operator group (3) : call_stmt_4525_call 
    write_iunit_register_call_group_3: Block -- 
      signal data_in: std_logic_vector(39 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_4525_call_req_0;
      call_stmt_4525_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_4525_call_req_1;
      call_stmt_4525_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      write_iunit_register_call_group_3_gI: SplitGuardInterface generic map(name => "write_iunit_register_call_group_3_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= MUX_4521_wire & wreg_id_4502 & second_word_3959;
      ignore_wir_4525 <= data_out(0 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 40,
        owidth => 40,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => write_iunit_register_call_reqs(0),
          ackR => write_iunit_register_call_acks(0),
          dataR => write_iunit_register_call_data(39 downto 0),
          tagR => write_iunit_register_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 1,
          owidth => 1,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => write_iunit_register_return_acks(0), -- cross-over
          ackL => write_iunit_register_return_reqs(0), -- cross-over
          dataL => write_iunit_register_return_data(0 downto 0),
          tagL => write_iunit_register_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 3
    -- shared call operator group (4) : call_stmt_4552_call 
    write_fpunit_register_call_group_4: Block -- 
      signal data_in: std_logic_vector(37 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_4552_call_req_0;
      call_stmt_4552_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_4552_call_req_1;
      call_stmt_4552_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      write_fpunit_register_call_group_4_gI: SplitGuardInterface generic map(name => "write_fpunit_register_call_group_4_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= fpwfsr_4543 & fpwreg_id_4547 & second_word_3959;
      err_fp_write_4552 <= data_out(0 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 38,
        owidth => 38,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => write_fpunit_register_call_reqs(0),
          ackR => write_fpunit_register_call_acks(0),
          dataR => write_fpunit_register_call_data(37 downto 0),
          tagR => write_fpunit_register_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 1,
          owidth => 1,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => write_fpunit_register_return_acks(0), -- cross-over
          ackL => write_fpunit_register_return_reqs(0), -- cross-over
          dataL => write_fpunit_register_return_data(0 downto 0),
          tagL => write_fpunit_register_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 4
    -- shared call operator group (5) : call_stmt_4570_call 
    read_from_memory_call_group_5: Block -- 
      signal data_in: std_logic_vector(39 downto 0);
      signal data_out: std_logic_vector(32 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_4570_call_req_0;
      call_stmt_4570_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_4570_call_req_1;
      call_stmt_4570_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      read_from_memory_call_group_5_gI: SplitGuardInterface generic map(name => "read_from_memory_call_group_5_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= asi_read_mem_4565 & second_word_3959;
      err_read_mem_4570 <= data_out(32 downto 32);
      mem_read_data_4570 <= data_out(31 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 40,
        owidth => 40,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => read_from_memory_call_reqs(0),
          ackR => read_from_memory_call_acks(0),
          dataR => read_from_memory_call_data(39 downto 0),
          tagR => read_from_memory_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 33,
          owidth => 33,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => read_from_memory_return_acks(0), -- cross-over
          ackL => read_from_memory_return_reqs(0), -- cross-over
          dataL => read_from_memory_return_data(32 downto 0),
          tagL => read_from_memory_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 5
    -- shared call operator group (6) : call_stmt_4588_call 
    write_to_memory_call_group_6: Block -- 
      signal data_in: std_logic_vector(71 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_4588_call_req_0;
      call_stmt_4588_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_4588_call_req_1;
      call_stmt_4588_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      write_to_memory_call_group_6_gI: SplitGuardInterface generic map(name => "write_to_memory_call_group_6_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= asi_write_mem_4583 & second_word_3959 & third_word_3963;
      err_write_mem_4588 <= data_out(0 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 72,
        owidth => 72,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => write_to_memory_call_reqs(0),
          ackR => write_to_memory_call_acks(0),
          dataR => write_to_memory_call_data(71 downto 0),
          tagR => write_to_memory_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 1,
          owidth => 1,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => write_to_memory_return_acks(0), -- cross-over
          ackL => write_to_memory_return_reqs(0), -- cross-over
          dataL => write_to_memory_return_data(0 downto 0),
          tagL => write_to_memory_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 6
    volatile_operator_construct_send_ccu_to_teu_args_6330: construct_send_ccu_to_teu_args_Volatile port map(set_break_cmd => set_break_cmd_4056, set_watch_cmd => set_watch_cmd_4056, remove_break_cmd => remove_break_cmd_4056, remove_watch_cmd => remove_watch_cmd_4056, kill_cmd => kill_cmd_4056, cmd_data => cmd_data_4019, second_word => second_word_3959, call_flag => call_ccu_to_teu_debug_4607, arg0 => arg_0_4607, arg1 => arg_1_4607, arg2 => arg_2_4607, arg3 => arg_3_4607); 
    -- shared call operator group (8) : call_stmt_4619_call 
    send_ccu_to_teu_debug_call_group_8: Block -- 
      signal data_in: std_logic_vector(38 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => true);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_4619_call_req_0;
      call_stmt_4619_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_4619_call_req_1;
      call_stmt_4619_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <= run_ccu_to_teu_debug_4612(0);
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      send_ccu_to_teu_debug_call_group_8_gI: SplitGuardInterface generic map(name => "send_ccu_to_teu_debug_call_group_8_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= arg_0_4607 & arg_1_4607 & arg_2_4607 & arg_3_4607;
      err_ccu_to_teu_debug_4619 <= data_out(0 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 39,
        owidth => 39,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => send_ccu_to_teu_debug_call_reqs(0),
          ackR => send_ccu_to_teu_debug_call_acks(0),
          dataR => send_ccu_to_teu_debug_call_data(38 downto 0),
          tagR => send_ccu_to_teu_debug_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 1,
          owidth => 1,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => send_ccu_to_teu_debug_return_acks(0), -- cross-over
          ackL => send_ccu_to_teu_debug_return_reqs(0), -- cross-over
          dataL => send_ccu_to_teu_debug_return_data(0 downto 0),
          tagL => send_ccu_to_teu_debug_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 8
    -- 
  end Block; -- data_path
  -- 
end ccu_debug_daemon_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity ccu_debug_initialize is -- 
  generic (tag_length : integer); 
  port ( -- 
    DBG_TO_CCU_RESET_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
    DBG_TO_CCU_RESET_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
    DBG_TO_CCU_RESET_SIG_pipe_write_data : out  std_logic_vector(4 downto 0);
    DBG_TO_CCU_INIT_NPC_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
    DBG_TO_CCU_INIT_NPC_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
    DBG_TO_CCU_INIT_NPC_SIG_pipe_write_data : out  std_logic_vector(31 downto 0);
    DBG_TO_CCU_INIT_PC_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
    DBG_TO_CCU_INIT_PC_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
    DBG_TO_CCU_INIT_PC_SIG_pipe_write_data : out  std_logic_vector(31 downto 0);
    DBG_TO_CCU_INIT_PSR_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
    DBG_TO_CCU_INIT_PSR_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
    DBG_TO_CCU_INIT_PSR_SIG_pipe_write_data : out  std_logic_vector(31 downto 0);
    init_npc_pipe_write_req : out  std_logic_vector(0 downto 0);
    init_npc_pipe_write_ack : in   std_logic_vector(0 downto 0);
    init_npc_pipe_write_data : out  std_logic_vector(31 downto 0);
    init_pc_pipe_write_req : out  std_logic_vector(0 downto 0);
    init_pc_pipe_write_ack : in   std_logic_vector(0 downto 0);
    init_pc_pipe_write_data : out  std_logic_vector(31 downto 0);
    init_psr_pipe_write_req : out  std_logic_vector(0 downto 0);
    init_psr_pipe_write_ack : in   std_logic_vector(0 downto 0);
    init_psr_pipe_write_data : out  std_logic_vector(31 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity ccu_debug_initialize;
architecture ccu_debug_initialize_arch of ccu_debug_initialize is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  -- output port buffer signals
  signal ccu_debug_initialize_CP_281_start: Boolean;
  signal ccu_debug_initialize_CP_281_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal WPIPE_DBG_TO_CCU_RESET_SIG_1419_inst_req_0 : boolean;
  signal WPIPE_DBG_TO_CCU_RESET_SIG_1419_inst_ack_0 : boolean;
  signal WPIPE_DBG_TO_CCU_RESET_SIG_1419_inst_req_1 : boolean;
  signal WPIPE_DBG_TO_CCU_RESET_SIG_1419_inst_ack_1 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_inst_req_0 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_inst_ack_0 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_inst_req_1 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_inst_ack_1 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_inst_req_0 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_inst_ack_0 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_inst_req_1 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_inst_ack_1 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_inst_req_0 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_inst_ack_0 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_inst_req_1 : boolean;
  signal WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_inst_ack_1 : boolean;
  signal WPIPE_init_pc_1431_inst_req_0 : boolean;
  signal WPIPE_init_pc_1431_inst_ack_0 : boolean;
  signal WPIPE_init_pc_1431_inst_req_1 : boolean;
  signal WPIPE_init_pc_1431_inst_ack_1 : boolean;
  signal WPIPE_init_npc_1434_inst_req_0 : boolean;
  signal WPIPE_init_npc_1434_inst_ack_0 : boolean;
  signal WPIPE_init_npc_1434_inst_req_1 : boolean;
  signal WPIPE_init_npc_1434_inst_ack_1 : boolean;
  signal WPIPE_init_psr_1437_inst_req_0 : boolean;
  signal WPIPE_init_psr_1437_inst_ack_0 : boolean;
  signal WPIPE_init_psr_1437_inst_req_1 : boolean;
  signal WPIPE_init_psr_1437_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "ccu_debug_initialize_input_buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      data_width => tag_length + 0) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(tag_length-1 downto 0) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length-1 downto 0);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  ccu_debug_initialize_CP_281_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "ccu_debug_initialize_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 0) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(tag_length-1 downto 0) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length-1 downto 0);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= ccu_debug_initialize_CP_281_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= ccu_debug_initialize_CP_281_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= ccu_debug_initialize_CP_281_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  ccu_debug_initialize_CP_281: Block -- control-path 
    signal ccu_debug_initialize_CP_281_elements: BooleanArray(15 downto 0);
    -- 
  begin -- 
    ccu_debug_initialize_CP_281_elements(0) <= ccu_debug_initialize_CP_281_start;
    ccu_debug_initialize_CP_281_symbol <= ccu_debug_initialize_CP_281_elements(15);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	3 
    -- CP-element group 0: 	5 
    -- CP-element group 0: 	7 
    -- CP-element group 0: 	9 
    -- CP-element group 0: 	11 
    -- CP-element group 0: 	13 
    -- CP-element group 0:  members (23) 
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/$entry
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_RESET_SIG_1419_sample_start_
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_RESET_SIG_1419_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_RESET_SIG_1419_Sample/req
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_sample_start_
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_Sample/req
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_sample_start_
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_Sample/req
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_sample_start_
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_Sample/req
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_pc_1431_sample_start_
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_pc_1431_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_pc_1431_Sample/req
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_npc_1434_sample_start_
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_npc_1434_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_npc_1434_Sample/req
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_psr_1437_sample_start_
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_psr_1437_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_psr_1437_Sample/req
      -- 
    req_294_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_294_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_initialize_CP_281_elements(0), ack => WPIPE_DBG_TO_CCU_RESET_SIG_1419_inst_req_0); -- 
    req_308_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_308_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_initialize_CP_281_elements(0), ack => WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_inst_req_0); -- 
    req_322_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_322_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_initialize_CP_281_elements(0), ack => WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_inst_req_0); -- 
    req_336_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_336_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_initialize_CP_281_elements(0), ack => WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_inst_req_0); -- 
    req_350_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_350_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_initialize_CP_281_elements(0), ack => WPIPE_init_pc_1431_inst_req_0); -- 
    req_364_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_364_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_initialize_CP_281_elements(0), ack => WPIPE_init_npc_1434_inst_req_0); -- 
    req_378_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_378_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_initialize_CP_281_elements(0), ack => WPIPE_init_psr_1437_inst_req_0); -- 
    -- CP-element group 1:  transition  input  output  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1: 	2 
    -- CP-element group 1:  members (6) 
      -- CP-element group 1: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_RESET_SIG_1419_sample_completed_
      -- CP-element group 1: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_RESET_SIG_1419_update_start_
      -- CP-element group 1: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_RESET_SIG_1419_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_RESET_SIG_1419_Sample/ack
      -- CP-element group 1: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_RESET_SIG_1419_Update/$entry
      -- CP-element group 1: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_RESET_SIG_1419_Update/req
      -- 
    ack_295_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_DBG_TO_CCU_RESET_SIG_1419_inst_ack_0, ack => ccu_debug_initialize_CP_281_elements(1)); -- 
    req_299_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_299_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_initialize_CP_281_elements(1), ack => WPIPE_DBG_TO_CCU_RESET_SIG_1419_inst_req_1); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	1 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	15 
    -- CP-element group 2:  members (3) 
      -- CP-element group 2: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_RESET_SIG_1419_update_completed_
      -- CP-element group 2: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_RESET_SIG_1419_Update/$exit
      -- CP-element group 2: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_RESET_SIG_1419_Update/ack
      -- 
    ack_300_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_DBG_TO_CCU_RESET_SIG_1419_inst_ack_1, ack => ccu_debug_initialize_CP_281_elements(2)); -- 
    -- CP-element group 3:  transition  input  output  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	0 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	4 
    -- CP-element group 3:  members (6) 
      -- CP-element group 3: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_sample_completed_
      -- CP-element group 3: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_update_start_
      -- CP-element group 3: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_Sample/ack
      -- CP-element group 3: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_Update/$entry
      -- CP-element group 3: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_Update/req
      -- 
    ack_309_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_inst_ack_0, ack => ccu_debug_initialize_CP_281_elements(3)); -- 
    req_313_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_313_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_initialize_CP_281_elements(3), ack => WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_inst_req_1); -- 
    -- CP-element group 4:  transition  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	3 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	15 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_update_completed_
      -- CP-element group 4: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_Update/$exit
      -- CP-element group 4: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_Update/ack
      -- 
    ack_314_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_inst_ack_1, ack => ccu_debug_initialize_CP_281_elements(4)); -- 
    -- CP-element group 5:  transition  input  output  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	0 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	6 
    -- CP-element group 5:  members (6) 
      -- CP-element group 5: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_sample_completed_
      -- CP-element group 5: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_update_start_
      -- CP-element group 5: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_Sample/$exit
      -- CP-element group 5: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_Sample/ack
      -- CP-element group 5: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_Update/$entry
      -- CP-element group 5: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_Update/req
      -- 
    ack_323_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_inst_ack_0, ack => ccu_debug_initialize_CP_281_elements(5)); -- 
    req_327_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_327_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_initialize_CP_281_elements(5), ack => WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_inst_req_1); -- 
    -- CP-element group 6:  transition  input  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	5 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	15 
    -- CP-element group 6:  members (3) 
      -- CP-element group 6: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_update_completed_
      -- CP-element group 6: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_Update/$exit
      -- CP-element group 6: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_Update/ack
      -- 
    ack_328_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_inst_ack_1, ack => ccu_debug_initialize_CP_281_elements(6)); -- 
    -- CP-element group 7:  transition  input  output  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	0 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	8 
    -- CP-element group 7:  members (6) 
      -- CP-element group 7: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_sample_completed_
      -- CP-element group 7: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_update_start_
      -- CP-element group 7: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_Sample/$exit
      -- CP-element group 7: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_Sample/ack
      -- CP-element group 7: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_Update/$entry
      -- CP-element group 7: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_Update/req
      -- 
    ack_337_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_inst_ack_0, ack => ccu_debug_initialize_CP_281_elements(7)); -- 
    req_341_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_341_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_initialize_CP_281_elements(7), ack => WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_inst_req_1); -- 
    -- CP-element group 8:  transition  input  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	7 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	15 
    -- CP-element group 8:  members (3) 
      -- CP-element group 8: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_update_completed_
      -- CP-element group 8: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_Update/$exit
      -- CP-element group 8: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_Update/ack
      -- 
    ack_342_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_inst_ack_1, ack => ccu_debug_initialize_CP_281_elements(8)); -- 
    -- CP-element group 9:  transition  input  output  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	0 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	10 
    -- CP-element group 9:  members (6) 
      -- CP-element group 9: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_pc_1431_sample_completed_
      -- CP-element group 9: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_pc_1431_update_start_
      -- CP-element group 9: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_pc_1431_Sample/$exit
      -- CP-element group 9: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_pc_1431_Sample/ack
      -- CP-element group 9: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_pc_1431_Update/$entry
      -- CP-element group 9: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_pc_1431_Update/req
      -- 
    ack_351_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_init_pc_1431_inst_ack_0, ack => ccu_debug_initialize_CP_281_elements(9)); -- 
    req_355_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_355_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_initialize_CP_281_elements(9), ack => WPIPE_init_pc_1431_inst_req_1); -- 
    -- CP-element group 10:  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	9 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	15 
    -- CP-element group 10:  members (3) 
      -- CP-element group 10: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_pc_1431_update_completed_
      -- CP-element group 10: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_pc_1431_Update/$exit
      -- CP-element group 10: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_pc_1431_Update/ack
      -- 
    ack_356_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_init_pc_1431_inst_ack_1, ack => ccu_debug_initialize_CP_281_elements(10)); -- 
    -- CP-element group 11:  transition  input  output  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	0 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	12 
    -- CP-element group 11:  members (6) 
      -- CP-element group 11: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_npc_1434_sample_completed_
      -- CP-element group 11: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_npc_1434_update_start_
      -- CP-element group 11: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_npc_1434_Sample/$exit
      -- CP-element group 11: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_npc_1434_Sample/ack
      -- CP-element group 11: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_npc_1434_Update/$entry
      -- CP-element group 11: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_npc_1434_Update/req
      -- 
    ack_365_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_init_npc_1434_inst_ack_0, ack => ccu_debug_initialize_CP_281_elements(11)); -- 
    req_369_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_369_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_initialize_CP_281_elements(11), ack => WPIPE_init_npc_1434_inst_req_1); -- 
    -- CP-element group 12:  transition  input  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	11 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	15 
    -- CP-element group 12:  members (3) 
      -- CP-element group 12: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_npc_1434_update_completed_
      -- CP-element group 12: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_npc_1434_Update/$exit
      -- CP-element group 12: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_npc_1434_Update/ack
      -- 
    ack_370_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_init_npc_1434_inst_ack_1, ack => ccu_debug_initialize_CP_281_elements(12)); -- 
    -- CP-element group 13:  transition  input  output  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	0 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	14 
    -- CP-element group 13:  members (6) 
      -- CP-element group 13: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_psr_1437_sample_completed_
      -- CP-element group 13: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_psr_1437_update_start_
      -- CP-element group 13: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_psr_1437_Sample/$exit
      -- CP-element group 13: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_psr_1437_Sample/ack
      -- CP-element group 13: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_psr_1437_Update/$entry
      -- CP-element group 13: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_psr_1437_Update/req
      -- 
    ack_379_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_init_psr_1437_inst_ack_0, ack => ccu_debug_initialize_CP_281_elements(13)); -- 
    req_383_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_383_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => ccu_debug_initialize_CP_281_elements(13), ack => WPIPE_init_psr_1437_inst_req_1); -- 
    -- CP-element group 14:  transition  input  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	13 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	15 
    -- CP-element group 14:  members (3) 
      -- CP-element group 14: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_psr_1437_update_completed_
      -- CP-element group 14: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_psr_1437_Update/$exit
      -- CP-element group 14: 	 assign_stmt_1421_to_assign_stmt_1439/WPIPE_init_psr_1437_Update/ack
      -- 
    ack_384_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_init_psr_1437_inst_ack_1, ack => ccu_debug_initialize_CP_281_elements(14)); -- 
    -- CP-element group 15:  join  transition  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	2 
    -- CP-element group 15: 	4 
    -- CP-element group 15: 	6 
    -- CP-element group 15: 	8 
    -- CP-element group 15: 	10 
    -- CP-element group 15: 	12 
    -- CP-element group 15: 	14 
    -- CP-element group 15: successors 
    -- CP-element group 15:  members (2) 
      -- CP-element group 15: 	 $exit
      -- CP-element group 15: 	 assign_stmt_1421_to_assign_stmt_1439/$exit
      -- 
    ccu_debug_initialize_cp_element_group_15: block -- 
      constant place_capacities: IntegerArray(0 to 6) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1,6 => 1);
      constant place_markings: IntegerArray(0 to 6)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0);
      constant place_delays: IntegerArray(0 to 6) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0,6 => 0);
      constant joinName: string(1 to 40) := "ccu_debug_initialize_cp_element_group_15"; 
      signal preds: BooleanArray(1 to 7); -- 
    begin -- 
      preds <= ccu_debug_initialize_CP_281_elements(2) & ccu_debug_initialize_CP_281_elements(4) & ccu_debug_initialize_CP_281_elements(6) & ccu_debug_initialize_CP_281_elements(8) & ccu_debug_initialize_CP_281_elements(10) & ccu_debug_initialize_CP_281_elements(12) & ccu_debug_initialize_CP_281_elements(14);
      gj_ccu_debug_initialize_cp_element_group_15 : generic_join generic map(name => joinName, number_of_predecessors => 7, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => ccu_debug_initialize_CP_281_elements(15), clk => clk, reset => reset); --
    end block;
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal R_NPC_RESET_VALUE_1426_wire_constant : std_logic_vector(31 downto 0);
    signal R_NPC_RESET_VALUE_1435_wire_constant : std_logic_vector(31 downto 0);
    signal R_PC_RESET_VALUE_1423_wire_constant : std_logic_vector(31 downto 0);
    signal R_PC_RESET_VALUE_1432_wire_constant : std_logic_vector(31 downto 0);
    signal R_PSR_RESET_VALUE_1429_wire_constant : std_logic_vector(31 downto 0);
    signal R_PSR_RESET_VALUE_1438_wire_constant : std_logic_vector(31 downto 0);
    signal konst_1420_wire_constant : std_logic_vector(4 downto 0);
    -- 
  begin -- 
    R_NPC_RESET_VALUE_1426_wire_constant <= "00000000000000000000000000000100";
    R_NPC_RESET_VALUE_1435_wire_constant <= "00000000000000000000000000000100";
    R_PC_RESET_VALUE_1423_wire_constant <= "00000000000000000000000000000000";
    R_PC_RESET_VALUE_1432_wire_constant <= "00000000000000000000000000000000";
    R_PSR_RESET_VALUE_1429_wire_constant <= "00000000000000000001000011000000";
    R_PSR_RESET_VALUE_1438_wire_constant <= "00000000000000000001000011000000";
    konst_1420_wire_constant <= "00000";
    -- shared outport operator group (0) : WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_inst 
    OutportGroup_0: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_inst_req_0;
      WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_inst_req_1;
      WPIPE_DBG_TO_CCU_INIT_NPC_SIG_1425_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= R_NPC_RESET_VALUE_1426_wire_constant;
      DBG_TO_CCU_INIT_NPC_SIG_write_0_gI: SplitGuardInterface generic map(name => "DBG_TO_CCU_INIT_NPC_SIG_write_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      DBG_TO_CCU_INIT_NPC_SIG_write_0: OutputPortRevised -- 
        generic map ( name => "DBG_TO_CCU_INIT_NPC_SIG", data_width => 32, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => DBG_TO_CCU_INIT_NPC_SIG_pipe_write_req(0),
          oack => DBG_TO_CCU_INIT_NPC_SIG_pipe_write_ack(0),
          odata => DBG_TO_CCU_INIT_NPC_SIG_pipe_write_data(31 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 0
    -- shared outport operator group (1) : WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_inst 
    OutportGroup_1: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_inst_req_0;
      WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_inst_req_1;
      WPIPE_DBG_TO_CCU_INIT_PC_SIG_1422_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= R_PC_RESET_VALUE_1423_wire_constant;
      DBG_TO_CCU_INIT_PC_SIG_write_1_gI: SplitGuardInterface generic map(name => "DBG_TO_CCU_INIT_PC_SIG_write_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      DBG_TO_CCU_INIT_PC_SIG_write_1: OutputPortRevised -- 
        generic map ( name => "DBG_TO_CCU_INIT_PC_SIG", data_width => 32, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => DBG_TO_CCU_INIT_PC_SIG_pipe_write_req(0),
          oack => DBG_TO_CCU_INIT_PC_SIG_pipe_write_ack(0),
          odata => DBG_TO_CCU_INIT_PC_SIG_pipe_write_data(31 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 1
    -- shared outport operator group (2) : WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_inst 
    OutportGroup_2: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_inst_req_0;
      WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_inst_req_1;
      WPIPE_DBG_TO_CCU_INIT_PSR_SIG_1428_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= R_PSR_RESET_VALUE_1429_wire_constant;
      DBG_TO_CCU_INIT_PSR_SIG_write_2_gI: SplitGuardInterface generic map(name => "DBG_TO_CCU_INIT_PSR_SIG_write_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      DBG_TO_CCU_INIT_PSR_SIG_write_2: OutputPortRevised -- 
        generic map ( name => "DBG_TO_CCU_INIT_PSR_SIG", data_width => 32, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => DBG_TO_CCU_INIT_PSR_SIG_pipe_write_req(0),
          oack => DBG_TO_CCU_INIT_PSR_SIG_pipe_write_ack(0),
          odata => DBG_TO_CCU_INIT_PSR_SIG_pipe_write_data(31 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 2
    -- shared outport operator group (3) : WPIPE_DBG_TO_CCU_RESET_SIG_1419_inst 
    OutportGroup_3: Block -- 
      signal data_in: std_logic_vector(4 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_DBG_TO_CCU_RESET_SIG_1419_inst_req_0;
      WPIPE_DBG_TO_CCU_RESET_SIG_1419_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_DBG_TO_CCU_RESET_SIG_1419_inst_req_1;
      WPIPE_DBG_TO_CCU_RESET_SIG_1419_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= konst_1420_wire_constant;
      DBG_TO_CCU_RESET_SIG_write_3_gI: SplitGuardInterface generic map(name => "DBG_TO_CCU_RESET_SIG_write_3_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      DBG_TO_CCU_RESET_SIG_write_3: OutputPortRevised -- 
        generic map ( name => "DBG_TO_CCU_RESET_SIG", data_width => 5, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => DBG_TO_CCU_RESET_SIG_pipe_write_req(0),
          oack => DBG_TO_CCU_RESET_SIG_pipe_write_ack(0),
          odata => DBG_TO_CCU_RESET_SIG_pipe_write_data(4 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 3
    -- shared outport operator group (4) : WPIPE_init_npc_1434_inst 
    OutportGroup_4: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_init_npc_1434_inst_req_0;
      WPIPE_init_npc_1434_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_init_npc_1434_inst_req_1;
      WPIPE_init_npc_1434_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= R_NPC_RESET_VALUE_1435_wire_constant;
      init_npc_write_4_gI: SplitGuardInterface generic map(name => "init_npc_write_4_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      init_npc_write_4: OutputPortRevised -- 
        generic map ( name => "init_npc", data_width => 32, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => init_npc_pipe_write_req(0),
          oack => init_npc_pipe_write_ack(0),
          odata => init_npc_pipe_write_data(31 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 4
    -- shared outport operator group (5) : WPIPE_init_pc_1431_inst 
    OutportGroup_5: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_init_pc_1431_inst_req_0;
      WPIPE_init_pc_1431_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_init_pc_1431_inst_req_1;
      WPIPE_init_pc_1431_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= R_PC_RESET_VALUE_1432_wire_constant;
      init_pc_write_5_gI: SplitGuardInterface generic map(name => "init_pc_write_5_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      init_pc_write_5: OutputPortRevised -- 
        generic map ( name => "init_pc", data_width => 32, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => init_pc_pipe_write_req(0),
          oack => init_pc_pipe_write_ack(0),
          odata => init_pc_pipe_write_data(31 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 5
    -- shared outport operator group (6) : WPIPE_init_psr_1437_inst 
    OutportGroup_6: Block -- 
      signal data_in: std_logic_vector(31 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_init_psr_1437_inst_req_0;
      WPIPE_init_psr_1437_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_init_psr_1437_inst_req_1;
      WPIPE_init_psr_1437_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= R_PSR_RESET_VALUE_1438_wire_constant;
      init_psr_write_6_gI: SplitGuardInterface generic map(name => "init_psr_write_6_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      init_psr_write_6: OutputPortRevised -- 
        generic map ( name => "init_psr", data_width => 32, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => init_psr_pipe_write_req(0),
          oack => init_psr_pipe_write_ack(0),
          odata => init_psr_pipe_write_data(31 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 6
    -- 
  end Block; -- data_path
  -- 
end ccu_debug_initialize_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity construct_send_ccu_to_teu_args_Volatile is -- 
  port ( -- 
    set_break_cmd : in  std_logic_vector(0 downto 0);
    set_watch_cmd : in  std_logic_vector(0 downto 0);
    remove_break_cmd : in  std_logic_vector(0 downto 0);
    remove_watch_cmd : in  std_logic_vector(0 downto 0);
    kill_cmd : in  std_logic_vector(0 downto 0);
    cmd_data : in  std_logic_vector(15 downto 0);
    second_word : in  std_logic_vector(31 downto 0);
    call_flag : out  std_logic_vector(0 downto 0);
    arg0 : out  std_logic_vector(2 downto 0);
    arg1 : out  std_logic_vector(1 downto 0);
    arg2 : out  std_logic_vector(1 downto 0);
    arg3 : out  std_logic_vector(31 downto 0)-- 
  );
  -- 
end entity construct_send_ccu_to_teu_args_Volatile;
architecture construct_send_ccu_to_teu_args_Volatile_arch of construct_send_ccu_to_teu_args_Volatile is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector(53-1 downto 0);
  signal default_zero_sig: std_logic;
  -- input port buffer signals
  signal set_break_cmd_buffer :  std_logic_vector(0 downto 0);
  signal set_watch_cmd_buffer :  std_logic_vector(0 downto 0);
  signal remove_break_cmd_buffer :  std_logic_vector(0 downto 0);
  signal remove_watch_cmd_buffer :  std_logic_vector(0 downto 0);
  signal kill_cmd_buffer :  std_logic_vector(0 downto 0);
  signal cmd_data_buffer :  std_logic_vector(15 downto 0);
  signal second_word_buffer :  std_logic_vector(31 downto 0);
  -- output port buffer signals
  signal call_flag_buffer :  std_logic_vector(0 downto 0);
  signal arg0_buffer :  std_logic_vector(2 downto 0);
  signal arg1_buffer :  std_logic_vector(1 downto 0);
  signal arg2_buffer :  std_logic_vector(1 downto 0);
  signal arg3_buffer :  std_logic_vector(31 downto 0);
  -- volatile/operator module components. 
  -- 
begin --  
  -- input handling ------------------------------------------------
  set_break_cmd_buffer <= set_break_cmd;
  set_watch_cmd_buffer <= set_watch_cmd;
  remove_break_cmd_buffer <= remove_break_cmd;
  remove_watch_cmd_buffer <= remove_watch_cmd;
  kill_cmd_buffer <= kill_cmd;
  cmd_data_buffer <= cmd_data;
  second_word_buffer <= second_word;
  -- output handling  -------------------------------------------------------
  call_flag <= call_flag_buffer;
  arg0 <= arg0_buffer;
  arg1 <= arg1_buffer;
  arg2 <= arg2_buffer;
  arg3 <= arg3_buffer;
  -- the control path --------------------------------------------------
  default_zero_sig <= '0';
  -- volatile module, no control path
  -- the data path
  data_path: Block -- 
    signal MUX_3783_wire : std_logic_vector(2 downto 0);
    signal MUX_3787_wire : std_logic_vector(2 downto 0);
    signal MUX_3792_wire : std_logic_vector(2 downto 0);
    signal MUX_3797_wire : std_logic_vector(2 downto 0);
    signal MUX_3801_wire : std_logic_vector(2 downto 0);
    signal MUX_3809_wire : std_logic_vector(1 downto 0);
    signal MUX_3813_wire : std_logic_vector(1 downto 0);
    signal MUX_3818_wire : std_logic_vector(1 downto 0);
    signal MUX_3823_wire : std_logic_vector(1 downto 0);
    signal MUX_3827_wire : std_logic_vector(1 downto 0);
    signal MUX_3835_wire : std_logic_vector(1 downto 0);
    signal MUX_3839_wire : std_logic_vector(1 downto 0);
    signal MUX_3844_wire : std_logic_vector(1 downto 0);
    signal MUX_3849_wire : std_logic_vector(1 downto 0);
    signal MUX_3853_wire : std_logic_vector(1 downto 0);
    signal MUX_3861_wire : std_logic_vector(31 downto 0);
    signal MUX_3865_wire : std_logic_vector(31 downto 0);
    signal MUX_3870_wire : std_logic_vector(31 downto 0);
    signal MUX_3875_wire : std_logic_vector(31 downto 0);
    signal MUX_3879_wire : std_logic_vector(31 downto 0);
    signal OR_u1_u1_3771_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3773_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3776_wire : std_logic_vector(0 downto 0);
    signal OR_u2_u2_3814_wire : std_logic_vector(1 downto 0);
    signal OR_u2_u2_3819_wire : std_logic_vector(1 downto 0);
    signal OR_u2_u2_3828_wire : std_logic_vector(1 downto 0);
    signal OR_u2_u2_3840_wire : std_logic_vector(1 downto 0);
    signal OR_u2_u2_3845_wire : std_logic_vector(1 downto 0);
    signal OR_u2_u2_3854_wire : std_logic_vector(1 downto 0);
    signal OR_u32_u32_3866_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_3871_wire : std_logic_vector(31 downto 0);
    signal OR_u32_u32_3880_wire : std_logic_vector(31 downto 0);
    signal OR_u3_u3_3788_wire : std_logic_vector(2 downto 0);
    signal OR_u3_u3_3793_wire : std_logic_vector(2 downto 0);
    signal OR_u3_u3_3802_wire : std_logic_vector(2 downto 0);
    signal konst_3782_wire_constant : std_logic_vector(2 downto 0);
    signal konst_3786_wire_constant : std_logic_vector(2 downto 0);
    signal konst_3791_wire_constant : std_logic_vector(2 downto 0);
    signal konst_3796_wire_constant : std_logic_vector(2 downto 0);
    signal konst_3800_wire_constant : std_logic_vector(2 downto 0);
    signal konst_3808_wire_constant : std_logic_vector(1 downto 0);
    signal konst_3812_wire_constant : std_logic_vector(1 downto 0);
    signal konst_3817_wire_constant : std_logic_vector(1 downto 0);
    signal konst_3822_wire_constant : std_logic_vector(1 downto 0);
    signal konst_3826_wire_constant : std_logic_vector(1 downto 0);
    signal konst_3834_wire_constant : std_logic_vector(1 downto 0);
    signal konst_3838_wire_constant : std_logic_vector(1 downto 0);
    signal konst_3843_wire_constant : std_logic_vector(1 downto 0);
    signal konst_3848_wire_constant : std_logic_vector(1 downto 0);
    signal konst_3852_wire_constant : std_logic_vector(1 downto 0);
    signal konst_3860_wire_constant : std_logic_vector(31 downto 0);
    signal konst_3864_wire_constant : std_logic_vector(31 downto 0);
    signal konst_3869_wire_constant : std_logic_vector(31 downto 0);
    signal konst_3874_wire_constant : std_logic_vector(31 downto 0);
    signal konst_3878_wire_constant : std_logic_vector(31 downto 0);
    signal sctt_arg_1_0_3687 : std_logic_vector(2 downto 0);
    signal sctt_arg_1_1_3690 : std_logic_vector(1 downto 0);
    signal sctt_arg_1_2_3693 : std_logic_vector(1 downto 0);
    signal sctt_arg_1_3_3696 : std_logic_vector(31 downto 0);
    signal sctt_arg_2_0_3702 : std_logic_vector(2 downto 0);
    signal sctt_arg_2_1_3705 : std_logic_vector(1 downto 0);
    signal sctt_arg_2_2_3708 : std_logic_vector(1 downto 0);
    signal sctt_arg_2_3_3711 : std_logic_vector(31 downto 0);
    signal sctt_arg_3_0_3725 : std_logic_vector(2 downto 0);
    signal sctt_arg_3_1_3728 : std_logic_vector(1 downto 0);
    signal sctt_arg_3_2_3731 : std_logic_vector(1 downto 0);
    signal sctt_arg_3_3_3734 : std_logic_vector(31 downto 0);
    signal sctt_arg_4_0_3740 : std_logic_vector(2 downto 0);
    signal sctt_arg_4_1_3743 : std_logic_vector(1 downto 0);
    signal sctt_arg_4_2_3746 : std_logic_vector(1 downto 0);
    signal sctt_arg_4_3_3749 : std_logic_vector(31 downto 0);
    signal sctt_arg_5_0_3755 : std_logic_vector(2 downto 0);
    signal sctt_arg_5_1_3758 : std_logic_vector(1 downto 0);
    signal sctt_arg_5_2_3761 : std_logic_vector(1 downto 0);
    signal sctt_arg_5_3_3764 : std_logic_vector(31 downto 0);
    signal sctt_case_1_3699 : std_logic_vector(0 downto 0);
    signal sctt_case_2_3714 : std_logic_vector(0 downto 0);
    signal sctt_case_3_3737 : std_logic_vector(0 downto 0);
    signal sctt_case_4_3752 : std_logic_vector(0 downto 0);
    signal sctt_case_5_3767 : std_logic_vector(0 downto 0);
    signal set_break_reg_id_3684 : std_logic_vector(1 downto 0);
    signal set_watch_reg_id_3722 : std_logic_vector(1 downto 0);
    signal set_watch_reg_type_3718 : std_logic_vector(1 downto 0);
    -- 
  begin -- 
    konst_3782_wire_constant <= "000";
    konst_3786_wire_constant <= "000";
    konst_3791_wire_constant <= "000";
    konst_3796_wire_constant <= "000";
    konst_3800_wire_constant <= "000";
    konst_3808_wire_constant <= "00";
    konst_3812_wire_constant <= "00";
    konst_3817_wire_constant <= "00";
    konst_3822_wire_constant <= "00";
    konst_3826_wire_constant <= "00";
    konst_3834_wire_constant <= "00";
    konst_3838_wire_constant <= "00";
    konst_3843_wire_constant <= "00";
    konst_3848_wire_constant <= "00";
    konst_3852_wire_constant <= "00";
    konst_3860_wire_constant <= "00000000000000000000000000000000";
    konst_3864_wire_constant <= "00000000000000000000000000000000";
    konst_3869_wire_constant <= "00000000000000000000000000000000";
    konst_3874_wire_constant <= "00000000000000000000000000000000";
    konst_3878_wire_constant <= "00000000000000000000000000000000";
    sctt_arg_1_0_3687 <= "001";
    sctt_arg_1_1_3690 <= "00";
    sctt_arg_2_0_3702 <= "010";
    sctt_arg_2_1_3705 <= "00";
    sctt_arg_2_3_3711 <= "00000000000000000000000000000000";
    sctt_arg_3_0_3725 <= "011";
    sctt_arg_4_0_3740 <= "100";
    sctt_arg_4_3_3749 <= "00000000000000000000000000000000";
    sctt_arg_5_0_3755 <= "101";
    sctt_arg_5_1_3758 <= "00";
    sctt_arg_5_2_3761 <= "00";
    sctt_arg_5_3_3764 <= "00000000000000000000000000000000";
    -- flow-through select operator MUX_3783_inst
    MUX_3783_wire <= sctt_arg_1_0_3687 when (sctt_case_1_3699(0) /=  '0') else konst_3782_wire_constant;
    -- flow-through select operator MUX_3787_inst
    MUX_3787_wire <= sctt_arg_2_0_3702 when (sctt_case_2_3714(0) /=  '0') else konst_3786_wire_constant;
    -- flow-through select operator MUX_3792_inst
    MUX_3792_wire <= sctt_arg_3_0_3725 when (sctt_case_3_3737(0) /=  '0') else konst_3791_wire_constant;
    -- flow-through select operator MUX_3797_inst
    MUX_3797_wire <= sctt_arg_4_0_3740 when (sctt_case_4_3752(0) /=  '0') else konst_3796_wire_constant;
    -- flow-through select operator MUX_3801_inst
    MUX_3801_wire <= sctt_arg_5_0_3755 when (sctt_case_5_3767(0) /=  '0') else konst_3800_wire_constant;
    -- flow-through select operator MUX_3809_inst
    MUX_3809_wire <= sctt_arg_1_1_3690 when (sctt_case_1_3699(0) /=  '0') else konst_3808_wire_constant;
    -- flow-through select operator MUX_3813_inst
    MUX_3813_wire <= sctt_arg_2_1_3705 when (sctt_case_2_3714(0) /=  '0') else konst_3812_wire_constant;
    -- flow-through select operator MUX_3818_inst
    MUX_3818_wire <= sctt_arg_3_1_3728 when (sctt_case_3_3737(0) /=  '0') else konst_3817_wire_constant;
    -- flow-through select operator MUX_3823_inst
    MUX_3823_wire <= sctt_arg_4_1_3743 when (sctt_case_4_3752(0) /=  '0') else konst_3822_wire_constant;
    -- flow-through select operator MUX_3827_inst
    MUX_3827_wire <= sctt_arg_5_1_3758 when (sctt_case_5_3767(0) /=  '0') else konst_3826_wire_constant;
    -- flow-through select operator MUX_3835_inst
    MUX_3835_wire <= sctt_arg_1_2_3693 when (sctt_case_1_3699(0) /=  '0') else konst_3834_wire_constant;
    -- flow-through select operator MUX_3839_inst
    MUX_3839_wire <= sctt_arg_2_2_3708 when (sctt_case_2_3714(0) /=  '0') else konst_3838_wire_constant;
    -- flow-through select operator MUX_3844_inst
    MUX_3844_wire <= sctt_arg_3_2_3731 when (sctt_case_3_3737(0) /=  '0') else konst_3843_wire_constant;
    -- flow-through select operator MUX_3849_inst
    MUX_3849_wire <= sctt_arg_4_2_3746 when (sctt_case_4_3752(0) /=  '0') else konst_3848_wire_constant;
    -- flow-through select operator MUX_3853_inst
    MUX_3853_wire <= sctt_arg_5_2_3761 when (sctt_case_5_3767(0) /=  '0') else konst_3852_wire_constant;
    -- flow-through select operator MUX_3861_inst
    MUX_3861_wire <= sctt_arg_1_3_3696 when (sctt_case_1_3699(0) /=  '0') else konst_3860_wire_constant;
    -- flow-through select operator MUX_3865_inst
    MUX_3865_wire <= sctt_arg_2_3_3711 when (sctt_case_2_3714(0) /=  '0') else konst_3864_wire_constant;
    -- flow-through select operator MUX_3870_inst
    MUX_3870_wire <= sctt_arg_3_3_3734 when (sctt_case_3_3737(0) /=  '0') else konst_3869_wire_constant;
    -- flow-through select operator MUX_3875_inst
    MUX_3875_wire <= sctt_arg_4_3_3749 when (sctt_case_4_3752(0) /=  '0') else konst_3874_wire_constant;
    -- flow-through select operator MUX_3879_inst
    MUX_3879_wire <= sctt_arg_5_3_3764 when (sctt_case_5_3767(0) /=  '0') else konst_3878_wire_constant;
    -- flow-through slice operator slice_3683_inst
    set_break_reg_id_3684 <= cmd_data_buffer(1 downto 0);
    -- flow-through slice operator slice_3717_inst
    set_watch_reg_type_3718 <= cmd_data_buffer(3 downto 2);
    -- flow-through slice operator slice_3721_inst
    set_watch_reg_id_3722 <= cmd_data_buffer(1 downto 0);
    -- interlock W_sctt_arg_1_2_3691_inst
    process(set_break_reg_id_3684) -- 
      variable tmp_var : std_logic_vector(1 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 1 downto 0) := set_break_reg_id_3684(1 downto 0);
      sctt_arg_1_2_3693 <= tmp_var; -- 
    end process;
    -- interlock W_sctt_arg_1_3_3694_inst
    process(second_word_buffer) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 31 downto 0) := second_word_buffer(31 downto 0);
      sctt_arg_1_3_3696 <= tmp_var; -- 
    end process;
    -- interlock W_sctt_arg_2_2_3706_inst
    process(set_break_reg_id_3684) -- 
      variable tmp_var : std_logic_vector(1 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 1 downto 0) := set_break_reg_id_3684(1 downto 0);
      sctt_arg_2_2_3708 <= tmp_var; -- 
    end process;
    -- interlock W_sctt_arg_3_1_3726_inst
    process(set_watch_reg_type_3718) -- 
      variable tmp_var : std_logic_vector(1 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 1 downto 0) := set_watch_reg_type_3718(1 downto 0);
      sctt_arg_3_1_3728 <= tmp_var; -- 
    end process;
    -- interlock W_sctt_arg_3_2_3729_inst
    process(set_watch_reg_id_3722) -- 
      variable tmp_var : std_logic_vector(1 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 1 downto 0) := set_watch_reg_id_3722(1 downto 0);
      sctt_arg_3_2_3731 <= tmp_var; -- 
    end process;
    -- interlock W_sctt_arg_3_3_3732_inst
    process(second_word_buffer) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 31 downto 0) := second_word_buffer(31 downto 0);
      sctt_arg_3_3_3734 <= tmp_var; -- 
    end process;
    -- interlock W_sctt_arg_4_1_3741_inst
    process(set_watch_reg_type_3718) -- 
      variable tmp_var : std_logic_vector(1 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 1 downto 0) := set_watch_reg_type_3718(1 downto 0);
      sctt_arg_4_1_3743 <= tmp_var; -- 
    end process;
    -- interlock W_sctt_arg_4_2_3744_inst
    process(set_watch_reg_id_3722) -- 
      variable tmp_var : std_logic_vector(1 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 1 downto 0) := set_watch_reg_id_3722(1 downto 0);
      sctt_arg_4_2_3746 <= tmp_var; -- 
    end process;
    -- interlock W_sctt_case_1_3697_inst
    process(set_break_cmd_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 0 downto 0) := set_break_cmd_buffer(0 downto 0);
      sctt_case_1_3699 <= tmp_var; -- 
    end process;
    -- interlock W_sctt_case_2_3712_inst
    process(remove_break_cmd_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 0 downto 0) := remove_break_cmd_buffer(0 downto 0);
      sctt_case_2_3714 <= tmp_var; -- 
    end process;
    -- interlock W_sctt_case_3_3735_inst
    process(set_watch_cmd_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 0 downto 0) := set_watch_cmd_buffer(0 downto 0);
      sctt_case_3_3737 <= tmp_var; -- 
    end process;
    -- interlock W_sctt_case_4_3750_inst
    process(remove_watch_cmd_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 0 downto 0) := remove_watch_cmd_buffer(0 downto 0);
      sctt_case_4_3752 <= tmp_var; -- 
    end process;
    -- interlock W_sctt_case_5_3765_inst
    process(kill_cmd_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 0 downto 0) := kill_cmd_buffer(0 downto 0);
      sctt_case_5_3767 <= tmp_var; -- 
    end process;
    -- flow through binary operator OR_u1_u1_3771_inst
    OR_u1_u1_3771_wire <= (sctt_case_1_3699 or sctt_case_2_3714);
    -- flow through binary operator OR_u1_u1_3773_inst
    OR_u1_u1_3773_wire <= (OR_u1_u1_3771_wire or sctt_case_3_3737);
    -- flow through binary operator OR_u1_u1_3776_inst
    OR_u1_u1_3776_wire <= (sctt_case_4_3752 or sctt_case_5_3767);
    -- flow through binary operator OR_u1_u1_3777_inst
    call_flag_buffer <= (OR_u1_u1_3773_wire or OR_u1_u1_3776_wire);
    -- flow through binary operator OR_u2_u2_3814_inst
    OR_u2_u2_3814_wire <= (MUX_3809_wire or MUX_3813_wire);
    -- flow through binary operator OR_u2_u2_3819_inst
    OR_u2_u2_3819_wire <= (OR_u2_u2_3814_wire or MUX_3818_wire);
    -- flow through binary operator OR_u2_u2_3828_inst
    OR_u2_u2_3828_wire <= (MUX_3823_wire or MUX_3827_wire);
    -- flow through binary operator OR_u2_u2_3829_inst
    arg1_buffer <= (OR_u2_u2_3819_wire or OR_u2_u2_3828_wire);
    -- flow through binary operator OR_u2_u2_3840_inst
    OR_u2_u2_3840_wire <= (MUX_3835_wire or MUX_3839_wire);
    -- flow through binary operator OR_u2_u2_3845_inst
    OR_u2_u2_3845_wire <= (OR_u2_u2_3840_wire or MUX_3844_wire);
    -- flow through binary operator OR_u2_u2_3854_inst
    OR_u2_u2_3854_wire <= (MUX_3849_wire or MUX_3853_wire);
    -- flow through binary operator OR_u2_u2_3855_inst
    arg2_buffer <= (OR_u2_u2_3845_wire or OR_u2_u2_3854_wire);
    -- flow through binary operator OR_u32_u32_3866_inst
    OR_u32_u32_3866_wire <= (MUX_3861_wire or MUX_3865_wire);
    -- flow through binary operator OR_u32_u32_3871_inst
    OR_u32_u32_3871_wire <= (OR_u32_u32_3866_wire or MUX_3870_wire);
    -- flow through binary operator OR_u32_u32_3880_inst
    OR_u32_u32_3880_wire <= (MUX_3875_wire or MUX_3879_wire);
    -- flow through binary operator OR_u32_u32_3881_inst
    arg3_buffer <= (OR_u32_u32_3871_wire or OR_u32_u32_3880_wire);
    -- flow through binary operator OR_u3_u3_3788_inst
    OR_u3_u3_3788_wire <= (MUX_3783_wire or MUX_3787_wire);
    -- flow through binary operator OR_u3_u3_3793_inst
    OR_u3_u3_3793_wire <= (OR_u3_u3_3788_wire or MUX_3792_wire);
    -- flow through binary operator OR_u3_u3_3802_inst
    OR_u3_u3_3802_wire <= (MUX_3797_wire or MUX_3801_wire);
    -- flow through binary operator OR_u3_u3_3803_inst
    arg0_buffer <= (OR_u3_u3_3793_wire or OR_u3_u3_3802_wire);
    -- 
  end Block; -- data_path
  -- 
end construct_send_ccu_to_teu_args_Volatile_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity decode_cpu_resets_Volatile is -- 
  port ( -- 
    reset_val : in  std_logic_vector(7 downto 0);
    hard_reset_asserted : out  std_logic_vector(0 downto 0);
    single_step_mode_selected : out  std_logic_vector(0 downto 0);
    debug_mode_selected : out  std_logic_vector(0 downto 0);
    debug_break_on_traps : out  std_logic_vector(0 downto 0);
    logging_trace_selected : out  std_logic_vector(0 downto 0)-- 
  );
  -- 
end entity decode_cpu_resets_Volatile;
architecture decode_cpu_resets_Volatile_arch of decode_cpu_resets_Volatile is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector(8-1 downto 0);
  signal default_zero_sig: std_logic;
  -- input port buffer signals
  signal reset_val_buffer :  std_logic_vector(7 downto 0);
  -- output port buffer signals
  signal hard_reset_asserted_buffer :  std_logic_vector(0 downto 0);
  signal single_step_mode_selected_buffer :  std_logic_vector(0 downto 0);
  signal debug_mode_selected_buffer :  std_logic_vector(0 downto 0);
  signal debug_break_on_traps_buffer :  std_logic_vector(0 downto 0);
  signal logging_trace_selected_buffer :  std_logic_vector(0 downto 0);
  -- volatile/operator module components. 
  -- 
begin --  
  -- input handling ------------------------------------------------
  reset_val_buffer <= reset_val;
  -- output handling  -------------------------------------------------------
  hard_reset_asserted <= hard_reset_asserted_buffer;
  single_step_mode_selected <= single_step_mode_selected_buffer;
  debug_mode_selected <= debug_mode_selected_buffer;
  debug_break_on_traps <= debug_break_on_traps_buffer;
  logging_trace_selected <= logging_trace_selected_buffer;
  -- the control path --------------------------------------------------
  default_zero_sig <= '0';
  -- volatile module, no control path
  -- the data path
  data_path: Block -- 
    signal b0_1467 : std_logic_vector(0 downto 0);
    signal b1_1463 : std_logic_vector(0 downto 0);
    signal b2_1459 : std_logic_vector(0 downto 0);
    signal b3_1455 : std_logic_vector(0 downto 0);
    signal b4_1451 : std_logic_vector(0 downto 0);
    -- 
  begin -- 
    -- flow-through slice operator slice_1450_inst
    b4_1451 <= reset_val_buffer(4 downto 4);
    -- flow-through slice operator slice_1454_inst
    b3_1455 <= reset_val_buffer(3 downto 3);
    -- flow-through slice operator slice_1458_inst
    b2_1459 <= reset_val_buffer(2 downto 2);
    -- flow-through slice operator slice_1462_inst
    b1_1463 <= reset_val_buffer(1 downto 1);
    -- flow-through slice operator slice_1466_inst
    b0_1467 <= reset_val_buffer(0 downto 0);
    -- interlock W_debug_break_on_traps_1480_inst
    process(b4_1451) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 0 downto 0) := b4_1451(0 downto 0);
      debug_break_on_traps_buffer <= tmp_var; -- 
    end process;
    -- interlock W_debug_mode_selected_1471_inst
    process(b1_1463) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 0 downto 0) := b1_1463(0 downto 0);
      debug_mode_selected_buffer <= tmp_var; -- 
    end process;
    -- interlock W_hard_reset_asserted_1468_inst
    process(b0_1467) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 0 downto 0) := b0_1467(0 downto 0);
      hard_reset_asserted_buffer <= tmp_var; -- 
    end process;
    -- interlock W_logging_trace_selected_1477_inst
    process(b3_1455) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 0 downto 0) := b3_1455(0 downto 0);
      logging_trace_selected_buffer <= tmp_var; -- 
    end process;
    -- interlock W_single_step_mode_selected_1474_inst
    process(b2_1459) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 0 downto 0) := b2_1459(0 downto 0);
      single_step_mode_selected_buffer <= tmp_var; -- 
    end process;
    -- 
  end Block; -- data_path
  -- 
end decode_cpu_resets_Volatile_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity decode_debug_command_Volatile is -- 
  port ( -- 
    valid_debug_cmd : in  std_logic_vector(0 downto 0);
    length : in  std_logic_vector(7 downto 0);
    op_code : in  std_logic_vector(7 downto 0);
    connect_cmd : out  std_logic_vector(0 downto 0);
    resume_cmd : out  std_logic_vector(0 downto 0);
    detach_cmd : out  std_logic_vector(0 downto 0);
    kill_cmd : out  std_logic_vector(0 downto 0);
    read_iu_reg_cmd : out  std_logic_vector(0 downto 0);
    read_fp_reg_cmd : out  std_logic_vector(0 downto 0);
    read_csr_cmd : out  std_logic_vector(0 downto 0);
    read_mem_cmd : out  std_logic_vector(0 downto 0);
    write_iu_reg_cmd : out  std_logic_vector(0 downto 0);
    write_fp_reg_cmd : out  std_logic_vector(0 downto 0);
    write_mem_cmd : out  std_logic_vector(0 downto 0);
    set_break_cmd : out  std_logic_vector(0 downto 0);
    set_watch_cmd : out  std_logic_vector(0 downto 0);
    remove_break_cmd : out  std_logic_vector(0 downto 0);
    remove_watch_cmd : out  std_logic_vector(0 downto 0);
    write_reset_cmd : out  std_logic_vector(0 downto 0);
    write_init_pc_cmd : out  std_logic_vector(0 downto 0);
    write_init_npc_cmd : out  std_logic_vector(0 downto 0);
    write_init_psr_cmd : out  std_logic_vector(0 downto 0);
    read_mode_cmd : out  std_logic_vector(0 downto 0);
    read_init_pc_cmd : out  std_logic_vector(0 downto 0);
    read_init_npc_cmd : out  std_logic_vector(0 downto 0);
    read_init_psr_cmd : out  std_logic_vector(0 downto 0);
    illegal_cmd : out  std_logic_vector(0 downto 0);
    single_word_cmd : out  std_logic_vector(0 downto 0);
    two_word_cmd : out  std_logic_vector(0 downto 0);
    three_word_cmd : out  std_logic_vector(0 downto 0);
    cmd_len_error : out  std_logic_vector(0 downto 0)-- 
  );
  -- 
end entity decode_debug_command_Volatile;
architecture decode_debug_command_Volatile_arch of decode_debug_command_Volatile is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector(17-1 downto 0);
  signal default_zero_sig: std_logic;
  -- input port buffer signals
  signal valid_debug_cmd_buffer :  std_logic_vector(0 downto 0);
  signal length_buffer :  std_logic_vector(7 downto 0);
  signal op_code_buffer :  std_logic_vector(7 downto 0);
  -- output port buffer signals
  signal connect_cmd_buffer :  std_logic_vector(0 downto 0);
  signal resume_cmd_buffer :  std_logic_vector(0 downto 0);
  signal detach_cmd_buffer :  std_logic_vector(0 downto 0);
  signal kill_cmd_buffer :  std_logic_vector(0 downto 0);
  signal read_iu_reg_cmd_buffer :  std_logic_vector(0 downto 0);
  signal read_fp_reg_cmd_buffer :  std_logic_vector(0 downto 0);
  signal read_csr_cmd_buffer :  std_logic_vector(0 downto 0);
  signal read_mem_cmd_buffer :  std_logic_vector(0 downto 0);
  signal write_iu_reg_cmd_buffer :  std_logic_vector(0 downto 0);
  signal write_fp_reg_cmd_buffer :  std_logic_vector(0 downto 0);
  signal write_mem_cmd_buffer :  std_logic_vector(0 downto 0);
  signal set_break_cmd_buffer :  std_logic_vector(0 downto 0);
  signal set_watch_cmd_buffer :  std_logic_vector(0 downto 0);
  signal remove_break_cmd_buffer :  std_logic_vector(0 downto 0);
  signal remove_watch_cmd_buffer :  std_logic_vector(0 downto 0);
  signal write_reset_cmd_buffer :  std_logic_vector(0 downto 0);
  signal write_init_pc_cmd_buffer :  std_logic_vector(0 downto 0);
  signal write_init_npc_cmd_buffer :  std_logic_vector(0 downto 0);
  signal write_init_psr_cmd_buffer :  std_logic_vector(0 downto 0);
  signal read_mode_cmd_buffer :  std_logic_vector(0 downto 0);
  signal read_init_pc_cmd_buffer :  std_logic_vector(0 downto 0);
  signal read_init_npc_cmd_buffer :  std_logic_vector(0 downto 0);
  signal read_init_psr_cmd_buffer :  std_logic_vector(0 downto 0);
  signal illegal_cmd_buffer :  std_logic_vector(0 downto 0);
  signal single_word_cmd_buffer :  std_logic_vector(0 downto 0);
  signal two_word_cmd_buffer :  std_logic_vector(0 downto 0);
  signal three_word_cmd_buffer :  std_logic_vector(0 downto 0);
  signal cmd_len_error_buffer :  std_logic_vector(0 downto 0);
  -- volatile/operator module components. 
  -- 
begin --  
  -- input handling ------------------------------------------------
  valid_debug_cmd_buffer <= valid_debug_cmd;
  length_buffer <= length;
  op_code_buffer <= op_code;
  -- output handling  -------------------------------------------------------
  connect_cmd <= connect_cmd_buffer;
  resume_cmd <= resume_cmd_buffer;
  detach_cmd <= detach_cmd_buffer;
  kill_cmd <= kill_cmd_buffer;
  read_iu_reg_cmd <= read_iu_reg_cmd_buffer;
  read_fp_reg_cmd <= read_fp_reg_cmd_buffer;
  read_csr_cmd <= read_csr_cmd_buffer;
  read_mem_cmd <= read_mem_cmd_buffer;
  write_iu_reg_cmd <= write_iu_reg_cmd_buffer;
  write_fp_reg_cmd <= write_fp_reg_cmd_buffer;
  write_mem_cmd <= write_mem_cmd_buffer;
  set_break_cmd <= set_break_cmd_buffer;
  set_watch_cmd <= set_watch_cmd_buffer;
  remove_break_cmd <= remove_break_cmd_buffer;
  remove_watch_cmd <= remove_watch_cmd_buffer;
  write_reset_cmd <= write_reset_cmd_buffer;
  write_init_pc_cmd <= write_init_pc_cmd_buffer;
  write_init_npc_cmd <= write_init_npc_cmd_buffer;
  write_init_psr_cmd <= write_init_psr_cmd_buffer;
  read_mode_cmd <= read_mode_cmd_buffer;
  read_init_pc_cmd <= read_init_pc_cmd_buffer;
  read_init_npc_cmd <= read_init_npc_cmd_buffer;
  read_init_psr_cmd <= read_init_psr_cmd_buffer;
  illegal_cmd <= illegal_cmd_buffer;
  single_word_cmd <= single_word_cmd_buffer;
  two_word_cmd <= two_word_cmd_buffer;
  three_word_cmd <= three_word_cmd_buffer;
  cmd_len_error <= cmd_len_error_buffer;
  -- the control path --------------------------------------------------
  default_zero_sig <= '0';
  -- volatile module, no control path
  -- the data path
  data_path: Block -- 
    signal EQ_u8_u1_3228_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3235_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3242_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3249_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3256_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3263_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3270_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3277_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3284_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3291_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3298_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3305_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3312_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3321_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3330_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3337_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3346_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3355_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3364_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3373_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3382_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3391_wire : std_logic_vector(0 downto 0);
    signal EQ_u8_u1_3400_wire : std_logic_vector(0 downto 0);
    signal MUX_3516_wire : std_logic_vector(0 downto 0);
    signal MUX_3517_wire : std_logic_vector(0 downto 0);
    signal NEQ_u8_u1_3506_wire : std_logic_vector(0 downto 0);
    signal NEQ_u8_u1_3510_wire : std_logic_vector(0 downto 0);
    signal NEQ_u8_u1_3514_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3408_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3410_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3413_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3415_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3416_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3419_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3421_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3424_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3426_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3427_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3428_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3431_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3433_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3436_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3438_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3439_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3442_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3444_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3447_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3448_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3449_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3450_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3456_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3458_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3461_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3463_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3464_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3467_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3469_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3472_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3474_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3475_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3481_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3483_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3486_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3487_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3490_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3492_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3495_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_3496_wire : std_logic_vector(0 downto 0);
    signal R_GDB_DBG_CONNECT_3283_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_CONTINUE_3290_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_DETACH_3297_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_KILL_3304_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_READ_CPUNIT_REG_3329_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_READ_FPUNIT_REG_3320_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_READ_INIT_NPC_3269_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_READ_INIT_PC_3262_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_READ_INIT_PSR_3276_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_READ_IUNIT_REG_3311_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_READ_MEM_3336_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_READ_MODE_3255_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_REMOVE_BREAK_POINT_3390_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_REMOVE_WATCH_POINT_3399_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_SET_BREAK_POINT_3372_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_SET_WATCH_POINT_3381_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_WRITE_FPUNIT_REG_3354_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_WRITE_INIT_NPC_3241_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_WRITE_INIT_PC_3234_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_WRITE_INIT_PSR_3248_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_WRITE_IUNIT_REG_3345_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_WRITE_MEM_3363_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_WRITE_RESET_3227_wire_constant : std_logic_vector(7 downto 0);
    signal konst_3505_wire_constant : std_logic_vector(7 downto 0);
    signal konst_3509_wire_constant : std_logic_vector(7 downto 0);
    signal konst_3513_wire_constant : std_logic_vector(7 downto 0);
    signal konst_3515_wire_constant : std_logic_vector(0 downto 0);
    -- 
  begin -- 
    R_GDB_DBG_CONNECT_3283_wire_constant <= "00001110";
    R_GDB_DBG_CONTINUE_3290_wire_constant <= "00010000";
    R_GDB_DBG_DETACH_3297_wire_constant <= "00001111";
    R_GDB_DBG_KILL_3304_wire_constant <= "00010011";
    R_GDB_DBG_READ_CPUNIT_REG_3329_wire_constant <= "00010001";
    R_GDB_DBG_READ_FPUNIT_REG_3320_wire_constant <= "00000011";
    R_GDB_DBG_READ_INIT_NPC_3269_wire_constant <= "00011101";
    R_GDB_DBG_READ_INIT_PC_3262_wire_constant <= "00011100";
    R_GDB_DBG_READ_INIT_PSR_3276_wire_constant <= "00011110";
    R_GDB_DBG_READ_IUNIT_REG_3311_wire_constant <= "00000001";
    R_GDB_DBG_READ_MEM_3336_wire_constant <= "00000110";
    R_GDB_DBG_READ_MODE_3255_wire_constant <= "00011111";
    R_GDB_DBG_REMOVE_BREAK_POINT_3390_wire_constant <= "00001001";
    R_GDB_DBG_REMOVE_WATCH_POINT_3399_wire_constant <= "00001011";
    R_GDB_DBG_SET_BREAK_POINT_3372_wire_constant <= "00001000";
    R_GDB_DBG_SET_WATCH_POINT_3381_wire_constant <= "00001010";
    R_GDB_DBG_WRITE_FPUNIT_REG_3354_wire_constant <= "00000100";
    R_GDB_DBG_WRITE_INIT_NPC_3241_wire_constant <= "00011010";
    R_GDB_DBG_WRITE_INIT_PC_3234_wire_constant <= "00011001";
    R_GDB_DBG_WRITE_INIT_PSR_3248_wire_constant <= "00011011";
    R_GDB_DBG_WRITE_IUNIT_REG_3345_wire_constant <= "00000010";
    R_GDB_DBG_WRITE_MEM_3363_wire_constant <= "00000111";
    R_GDB_DBG_WRITE_RESET_3227_wire_constant <= "00011000";
    konst_3505_wire_constant <= "00000001";
    konst_3509_wire_constant <= "00000010";
    konst_3513_wire_constant <= "00000011";
    konst_3515_wire_constant <= "1";
    -- flow-through select operator MUX_3516_inst
    MUX_3516_wire <= NEQ_u8_u1_3514_wire when (three_word_cmd_buffer(0) /=  '0') else konst_3515_wire_constant;
    -- flow-through select operator MUX_3517_inst
    MUX_3517_wire <= NEQ_u8_u1_3510_wire when (two_word_cmd_buffer(0) /=  '0') else MUX_3516_wire;
    -- flow-through select operator MUX_3518_inst
    cmd_len_error_buffer <= NEQ_u8_u1_3506_wire when (single_word_cmd_buffer(0) /=  '0') else MUX_3517_wire;
    -- interlock W_three_word_cmd_3499_inst
    process(write_mem_cmd_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 0 downto 0) := write_mem_cmd_buffer(0 downto 0);
      three_word_cmd_buffer <= tmp_var; -- 
    end process;
    -- flow through binary operator AND_u1_u1_3229_inst
    write_reset_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3228_wire);
    -- flow through binary operator AND_u1_u1_3236_inst
    write_init_pc_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3235_wire);
    -- flow through binary operator AND_u1_u1_3243_inst
    write_init_npc_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3242_wire);
    -- flow through binary operator AND_u1_u1_3250_inst
    write_init_psr_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3249_wire);
    -- flow through binary operator AND_u1_u1_3257_inst
    read_mode_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3256_wire);
    -- flow through binary operator AND_u1_u1_3264_inst
    read_init_pc_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3263_wire);
    -- flow through binary operator AND_u1_u1_3271_inst
    read_init_npc_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3270_wire);
    -- flow through binary operator AND_u1_u1_3278_inst
    read_init_psr_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3277_wire);
    -- flow through binary operator AND_u1_u1_3285_inst
    connect_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3284_wire);
    -- flow through binary operator AND_u1_u1_3292_inst
    resume_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3291_wire);
    -- flow through binary operator AND_u1_u1_3299_inst
    detach_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3298_wire);
    -- flow through binary operator AND_u1_u1_3306_inst
    kill_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3305_wire);
    -- flow through binary operator AND_u1_u1_3313_inst
    read_iu_reg_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3312_wire);
    -- flow through binary operator AND_u1_u1_3322_inst
    read_fp_reg_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3321_wire);
    -- flow through binary operator AND_u1_u1_3331_inst
    read_csr_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3330_wire);
    -- flow through binary operator AND_u1_u1_3338_inst
    read_mem_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3337_wire);
    -- flow through binary operator AND_u1_u1_3347_inst
    write_iu_reg_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3346_wire);
    -- flow through binary operator AND_u1_u1_3356_inst
    write_fp_reg_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3355_wire);
    -- flow through binary operator AND_u1_u1_3365_inst
    write_mem_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3364_wire);
    -- flow through binary operator AND_u1_u1_3374_inst
    set_break_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3373_wire);
    -- flow through binary operator AND_u1_u1_3383_inst
    set_watch_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3382_wire);
    -- flow through binary operator AND_u1_u1_3392_inst
    remove_break_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3391_wire);
    -- flow through binary operator AND_u1_u1_3401_inst
    remove_watch_cmd_buffer <= (valid_debug_cmd_buffer and EQ_u8_u1_3400_wire);
    -- flow through binary operator EQ_u8_u1_3228_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_WRITE_RESET_3227_wire_constant, tmp_var);
      EQ_u8_u1_3228_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3235_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_WRITE_INIT_PC_3234_wire_constant, tmp_var);
      EQ_u8_u1_3235_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3242_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_WRITE_INIT_NPC_3241_wire_constant, tmp_var);
      EQ_u8_u1_3242_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3249_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_WRITE_INIT_PSR_3248_wire_constant, tmp_var);
      EQ_u8_u1_3249_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3256_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_READ_MODE_3255_wire_constant, tmp_var);
      EQ_u8_u1_3256_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3263_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_READ_INIT_PC_3262_wire_constant, tmp_var);
      EQ_u8_u1_3263_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3270_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_READ_INIT_NPC_3269_wire_constant, tmp_var);
      EQ_u8_u1_3270_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3277_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_READ_INIT_PSR_3276_wire_constant, tmp_var);
      EQ_u8_u1_3277_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3284_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_CONNECT_3283_wire_constant, tmp_var);
      EQ_u8_u1_3284_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3291_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_CONTINUE_3290_wire_constant, tmp_var);
      EQ_u8_u1_3291_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3298_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_DETACH_3297_wire_constant, tmp_var);
      EQ_u8_u1_3298_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3305_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_KILL_3304_wire_constant, tmp_var);
      EQ_u8_u1_3305_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3312_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_READ_IUNIT_REG_3311_wire_constant, tmp_var);
      EQ_u8_u1_3312_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3321_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_READ_FPUNIT_REG_3320_wire_constant, tmp_var);
      EQ_u8_u1_3321_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3330_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_READ_CPUNIT_REG_3329_wire_constant, tmp_var);
      EQ_u8_u1_3330_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3337_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_READ_MEM_3336_wire_constant, tmp_var);
      EQ_u8_u1_3337_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3346_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_WRITE_IUNIT_REG_3345_wire_constant, tmp_var);
      EQ_u8_u1_3346_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3355_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_WRITE_FPUNIT_REG_3354_wire_constant, tmp_var);
      EQ_u8_u1_3355_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3364_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_WRITE_MEM_3363_wire_constant, tmp_var);
      EQ_u8_u1_3364_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3373_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_SET_BREAK_POINT_3372_wire_constant, tmp_var);
      EQ_u8_u1_3373_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3382_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_SET_WATCH_POINT_3381_wire_constant, tmp_var);
      EQ_u8_u1_3382_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3391_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_REMOVE_BREAK_POINT_3390_wire_constant, tmp_var);
      EQ_u8_u1_3391_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_3400_inst
    process(op_code_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(op_code_buffer, R_GDB_DBG_REMOVE_WATCH_POINT_3399_wire_constant, tmp_var);
      EQ_u8_u1_3400_wire <= tmp_var; --
    end process;
    -- flow through binary operator NEQ_u8_u1_3506_inst
    process(length_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntNe_proc(length_buffer, konst_3505_wire_constant, tmp_var);
      NEQ_u8_u1_3506_wire <= tmp_var; --
    end process;
    -- flow through binary operator NEQ_u8_u1_3510_inst
    process(length_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntNe_proc(length_buffer, konst_3509_wire_constant, tmp_var);
      NEQ_u8_u1_3510_wire <= tmp_var; --
    end process;
    -- flow through binary operator NEQ_u8_u1_3514_inst
    process(length_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntNe_proc(length_buffer, konst_3513_wire_constant, tmp_var);
      NEQ_u8_u1_3514_wire <= tmp_var; --
    end process;
    -- unary operator NOT_u1_u1_3451_inst
    process(OR_u1_u1_3450_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", OR_u1_u1_3450_wire, tmp_var);
      illegal_cmd_buffer <= tmp_var; -- 
    end process;
    -- flow through binary operator OR_u1_u1_3408_inst
    OR_u1_u1_3408_wire <= (connect_cmd_buffer or resume_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3410_inst
    OR_u1_u1_3410_wire <= (OR_u1_u1_3408_wire or detach_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3413_inst
    OR_u1_u1_3413_wire <= (kill_cmd_buffer or read_iu_reg_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3415_inst
    OR_u1_u1_3415_wire <= (OR_u1_u1_3413_wire or read_fp_reg_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3416_inst
    OR_u1_u1_3416_wire <= (OR_u1_u1_3410_wire or OR_u1_u1_3415_wire);
    -- flow through binary operator OR_u1_u1_3419_inst
    OR_u1_u1_3419_wire <= (read_csr_cmd_buffer or read_mem_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3421_inst
    OR_u1_u1_3421_wire <= (OR_u1_u1_3419_wire or write_iu_reg_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3424_inst
    OR_u1_u1_3424_wire <= (write_fp_reg_cmd_buffer or set_break_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3426_inst
    OR_u1_u1_3426_wire <= (OR_u1_u1_3424_wire or set_watch_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3427_inst
    OR_u1_u1_3427_wire <= (OR_u1_u1_3421_wire or OR_u1_u1_3426_wire);
    -- flow through binary operator OR_u1_u1_3428_inst
    OR_u1_u1_3428_wire <= (OR_u1_u1_3416_wire or OR_u1_u1_3427_wire);
    -- flow through binary operator OR_u1_u1_3431_inst
    OR_u1_u1_3431_wire <= (remove_break_cmd_buffer or remove_watch_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3433_inst
    OR_u1_u1_3433_wire <= (OR_u1_u1_3431_wire or write_mem_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3436_inst
    OR_u1_u1_3436_wire <= (write_reset_cmd_buffer or write_init_pc_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3438_inst
    OR_u1_u1_3438_wire <= (OR_u1_u1_3436_wire or write_init_npc_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3439_inst
    OR_u1_u1_3439_wire <= (OR_u1_u1_3433_wire or OR_u1_u1_3438_wire);
    -- flow through binary operator OR_u1_u1_3442_inst
    OR_u1_u1_3442_wire <= (write_init_psr_cmd_buffer or read_mode_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3444_inst
    OR_u1_u1_3444_wire <= (OR_u1_u1_3442_wire or read_init_pc_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3447_inst
    OR_u1_u1_3447_wire <= (read_init_npc_cmd_buffer or read_init_psr_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3448_inst
    OR_u1_u1_3448_wire <= (OR_u1_u1_3444_wire or OR_u1_u1_3447_wire);
    -- flow through binary operator OR_u1_u1_3449_inst
    OR_u1_u1_3449_wire <= (OR_u1_u1_3439_wire or OR_u1_u1_3448_wire);
    -- flow through binary operator OR_u1_u1_3450_inst
    OR_u1_u1_3450_wire <= (OR_u1_u1_3428_wire or OR_u1_u1_3449_wire);
    -- flow through binary operator OR_u1_u1_3456_inst
    OR_u1_u1_3456_wire <= (connect_cmd_buffer or resume_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3458_inst
    OR_u1_u1_3458_wire <= (OR_u1_u1_3456_wire or detach_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3461_inst
    OR_u1_u1_3461_wire <= (kill_cmd_buffer or read_iu_reg_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3463_inst
    OR_u1_u1_3463_wire <= (OR_u1_u1_3461_wire or read_fp_reg_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3464_inst
    OR_u1_u1_3464_wire <= (OR_u1_u1_3458_wire or OR_u1_u1_3463_wire);
    -- flow through binary operator OR_u1_u1_3467_inst
    OR_u1_u1_3467_wire <= (read_csr_cmd_buffer or write_reset_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3469_inst
    OR_u1_u1_3469_wire <= (OR_u1_u1_3467_wire or read_init_pc_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3472_inst
    OR_u1_u1_3472_wire <= (read_init_npc_cmd_buffer or read_init_psr_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3474_inst
    OR_u1_u1_3474_wire <= (OR_u1_u1_3472_wire or read_mode_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3475_inst
    OR_u1_u1_3475_wire <= (OR_u1_u1_3469_wire or OR_u1_u1_3474_wire);
    -- flow through binary operator OR_u1_u1_3476_inst
    single_word_cmd_buffer <= (OR_u1_u1_3464_wire or OR_u1_u1_3475_wire);
    -- flow through binary operator OR_u1_u1_3481_inst
    OR_u1_u1_3481_wire <= (read_mem_cmd_buffer or write_iu_reg_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3483_inst
    OR_u1_u1_3483_wire <= (OR_u1_u1_3481_wire or write_fp_reg_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3486_inst
    OR_u1_u1_3486_wire <= (set_break_cmd_buffer or set_watch_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3487_inst
    OR_u1_u1_3487_wire <= (OR_u1_u1_3483_wire or OR_u1_u1_3486_wire);
    -- flow through binary operator OR_u1_u1_3490_inst
    OR_u1_u1_3490_wire <= (remove_break_cmd_buffer or remove_watch_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3492_inst
    OR_u1_u1_3492_wire <= (OR_u1_u1_3490_wire or write_init_pc_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3495_inst
    OR_u1_u1_3495_wire <= (write_init_npc_cmd_buffer or write_init_psr_cmd_buffer);
    -- flow through binary operator OR_u1_u1_3496_inst
    OR_u1_u1_3496_wire <= (OR_u1_u1_3492_wire or OR_u1_u1_3495_wire);
    -- flow through binary operator OR_u1_u1_3497_inst
    two_word_cmd_buffer <= (OR_u1_u1_3487_wire or OR_u1_u1_3496_wire);
    -- 
  end Block; -- data_path
  -- 
end decode_debug_command_Volatile_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity init_processor_state_Volatile is -- 
  port ( -- 
    ipc : in  std_logic_vector(31 downto 0);
    inpc : in  std_logic_vector(31 downto 0);
    ipsr : in  std_logic_vector(31 downto 0);
    pmode : out  std_logic_vector(1 downto 0);
    psr : out  std_logic_vector(31 downto 0);
    wim : out  std_logic_vector(31 downto 0);
    tbr : out  std_logic_vector(31 downto 0);
    tv : out  std_logic_vector(31 downto 0);
    pc : out  std_logic_vector(31 downto 0);
    npc : out  std_logic_vector(31 downto 0);
    ilvl : out  std_logic_vector(3 downto 0);
    ticc_trap_type : out  std_logic_vector(6 downto 0)-- 
  );
  -- 
end entity init_processor_state_Volatile;
architecture init_processor_state_Volatile_arch of init_processor_state_Volatile is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector(96-1 downto 0);
  signal default_zero_sig: std_logic;
  -- input port buffer signals
  signal ipc_buffer :  std_logic_vector(31 downto 0);
  signal inpc_buffer :  std_logic_vector(31 downto 0);
  signal ipsr_buffer :  std_logic_vector(31 downto 0);
  -- output port buffer signals
  signal pmode_buffer :  std_logic_vector(1 downto 0);
  signal psr_buffer :  std_logic_vector(31 downto 0);
  signal wim_buffer :  std_logic_vector(31 downto 0);
  signal tbr_buffer :  std_logic_vector(31 downto 0);
  signal tv_buffer :  std_logic_vector(31 downto 0);
  signal pc_buffer :  std_logic_vector(31 downto 0);
  signal npc_buffer :  std_logic_vector(31 downto 0);
  signal ilvl_buffer :  std_logic_vector(3 downto 0);
  signal ticc_trap_type_buffer :  std_logic_vector(6 downto 0);
  -- volatile/operator module components. 
  -- 
begin --  
  -- input handling ------------------------------------------------
  ipc_buffer <= ipc;
  inpc_buffer <= inpc;
  ipsr_buffer <= ipsr;
  -- output handling  -------------------------------------------------------
  pmode <= pmode_buffer;
  pmode_buffer <= "01";
  psr <= psr_buffer;
  wim <= wim_buffer;
  wim_buffer <= "00000000000000000000000000000000";
  tbr <= tbr_buffer;
  tbr_buffer <= "00000000000000000000000000000000";
  tv <= tv_buffer;
  tv_buffer <= "00000000000000000000000000000011";
  pc <= pc_buffer;
  npc <= npc_buffer;
  ilvl <= ilvl_buffer;
  ilvl_buffer <= "0000";
  ticc_trap_type <= ticc_trap_type_buffer;
  ticc_trap_type_buffer <= "0000000";
  -- the control path --------------------------------------------------
  default_zero_sig <= '0';
  -- volatile module, no control path
  -- the data path
  data_path: Block -- 
    signal trace_on_flag_1520 : std_logic_vector(0 downto 0);
    -- 
  begin -- 
    trace_on_flag_1520 <= "1";
    -- interlock W_npc_1546_inst
    process(inpc_buffer) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 31 downto 0) := inpc_buffer(31 downto 0);
      npc_buffer <= tmp_var; -- 
    end process;
    -- interlock W_pc_1543_inst
    process(ipc_buffer) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 31 downto 0) := ipc_buffer(31 downto 0);
      pc_buffer <= tmp_var; -- 
    end process;
    -- interlock W_psr_1535_inst
    process(ipsr_buffer) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 31 downto 0) := ipsr_buffer(31 downto 0);
      psr_buffer <= tmp_var; -- 
    end process;
    -- 
  end Block; -- data_path
  -- 
end init_processor_state_Volatile_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity queryDebugger is -- 
  generic (tag_length : integer); 
  port ( -- 
    first_connect_flag : in  std_logic_vector(0 downto 0);
    i_machine_error : in  std_logic_vector(0 downto 0);
    i_exception_found : in  std_logic_vector(0 downto 0);
    i_interrupt_found : in  std_logic_vector(0 downto 0);
    i_annul_instr : in  std_logic_vector(0 downto 0);
    i_debug_break_on_traps : in  std_logic_vector(0 downto 0);
    i_dbg_status : in  std_logic_vector(7 downto 0);
    i_PC : in  std_logic_vector(31 downto 0);
    i_NPC : in  std_logic_vector(31 downto 0);
    i_PSR : in  std_logic_vector(31 downto 0);
    o_annul_instr : out  std_logic_vector(0 downto 0);
    o_ignore_bp : out  std_logic_vector(0 downto 0);
    o_PC : out  std_logic_vector(31 downto 0);
    o_NPC : out  std_logic_vector(31 downto 0);
    o_PSR : out  std_logic_vector(31 downto 0);
    recv_ccu_debug_daemon_to_ccu_daemon_call_reqs : out  std_logic_vector(0 downto 0);
    recv_ccu_debug_daemon_to_ccu_daemon_call_acks : in   std_logic_vector(0 downto 0);
    recv_ccu_debug_daemon_to_ccu_daemon_call_tag  :  out  std_logic_vector(0 downto 0);
    recv_ccu_debug_daemon_to_ccu_daemon_return_reqs : out  std_logic_vector(0 downto 0);
    recv_ccu_debug_daemon_to_ccu_daemon_return_acks : in   std_logic_vector(0 downto 0);
    recv_ccu_debug_daemon_to_ccu_daemon_return_data : in   std_logic_vector(95 downto 0);
    recv_ccu_debug_daemon_to_ccu_daemon_return_tag :  in   std_logic_vector(0 downto 0);
    send_ccu_daemon_to_ccu_debug_daemon_call_reqs : out  std_logic_vector(0 downto 0);
    send_ccu_daemon_to_ccu_debug_daemon_call_acks : in   std_logic_vector(0 downto 0);
    send_ccu_daemon_to_ccu_debug_daemon_call_data : out  std_logic_vector(127 downto 0);
    send_ccu_daemon_to_ccu_debug_daemon_call_tag  :  out  std_logic_vector(0 downto 0);
    send_ccu_daemon_to_ccu_debug_daemon_return_reqs : out  std_logic_vector(0 downto 0);
    send_ccu_daemon_to_ccu_debug_daemon_return_acks : in   std_logic_vector(0 downto 0);
    send_ccu_daemon_to_ccu_debug_daemon_return_tag :  in   std_logic_vector(0 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity queryDebugger;
architecture queryDebugger_arch of queryDebugger is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 110)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 98)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal first_connect_flag_buffer :  std_logic_vector(0 downto 0);
  signal first_connect_flag_update_enable: Boolean;
  signal i_machine_error_buffer :  std_logic_vector(0 downto 0);
  signal i_machine_error_update_enable: Boolean;
  signal i_exception_found_buffer :  std_logic_vector(0 downto 0);
  signal i_exception_found_update_enable: Boolean;
  signal i_interrupt_found_buffer :  std_logic_vector(0 downto 0);
  signal i_interrupt_found_update_enable: Boolean;
  signal i_annul_instr_buffer :  std_logic_vector(0 downto 0);
  signal i_annul_instr_update_enable: Boolean;
  signal i_debug_break_on_traps_buffer :  std_logic_vector(0 downto 0);
  signal i_debug_break_on_traps_update_enable: Boolean;
  signal i_dbg_status_buffer :  std_logic_vector(7 downto 0);
  signal i_dbg_status_update_enable: Boolean;
  signal i_PC_buffer :  std_logic_vector(31 downto 0);
  signal i_PC_update_enable: Boolean;
  signal i_NPC_buffer :  std_logic_vector(31 downto 0);
  signal i_NPC_update_enable: Boolean;
  signal i_PSR_buffer :  std_logic_vector(31 downto 0);
  signal i_PSR_update_enable: Boolean;
  -- output port buffer signals
  signal o_annul_instr_buffer :  std_logic_vector(0 downto 0);
  signal o_annul_instr_update_enable: Boolean;
  signal o_ignore_bp_buffer :  std_logic_vector(0 downto 0);
  signal o_ignore_bp_update_enable: Boolean;
  signal o_PC_buffer :  std_logic_vector(31 downto 0);
  signal o_PC_update_enable: Boolean;
  signal o_NPC_buffer :  std_logic_vector(31 downto 0);
  signal o_NPC_update_enable: Boolean;
  signal o_PSR_buffer :  std_logic_vector(31 downto 0);
  signal o_PSR_update_enable: Boolean;
  signal queryDebugger_CP_857_start: Boolean;
  signal queryDebugger_CP_857_symbol: Boolean;
  -- volatile/operator module components. 
  component recv_ccu_debug_daemon_to_ccu_daemon is -- 
    generic (tag_length : integer); 
    port ( -- 
      pc : out  std_logic_vector(31 downto 0);
      npc : out  std_logic_vector(31 downto 0);
      psr : out  std_logic_vector(31 downto 0);
      ccu_debug_daemon_to_ccu_daemon_pipe_read_req : out  std_logic_vector(0 downto 0);
      ccu_debug_daemon_to_ccu_daemon_pipe_read_ack : in   std_logic_vector(0 downto 0);
      ccu_debug_daemon_to_ccu_daemon_pipe_read_data : in   std_logic_vector(31 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  component send_ccu_daemon_to_ccu_debug_daemon is -- 
    generic (tag_length : integer); 
    port ( -- 
      command : in  std_logic_vector(31 downto 0);
      pc : in  std_logic_vector(31 downto 0);
      npc : in  std_logic_vector(31 downto 0);
      psr : in  std_logic_vector(31 downto 0);
      ccu_daemon_to_ccu_debug_daemon_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_daemon_to_ccu_debug_daemon_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_daemon_to_ccu_debug_daemon_pipe_write_data : out  std_logic_vector(32 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal call_stmt_2115_call_ack_0 : boolean;
  signal call_stmt_2115_call_req_0 : boolean;
  signal call_stmt_2120_call_req_1 : boolean;
  signal call_stmt_2120_call_ack_1 : boolean;
  signal call_stmt_2120_call_req_0 : boolean;
  signal call_stmt_2115_call_req_1 : boolean;
  signal call_stmt_2120_call_ack_0 : boolean;
  signal call_stmt_2115_call_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "queryDebugger_input_buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      data_width => tag_length + 110) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(0 downto 0) <= first_connect_flag;
  first_connect_flag_buffer <= in_buffer_data_out(0 downto 0);
  in_buffer_data_in(1 downto 1) <= i_machine_error;
  i_machine_error_buffer <= in_buffer_data_out(1 downto 1);
  in_buffer_data_in(2 downto 2) <= i_exception_found;
  i_exception_found_buffer <= in_buffer_data_out(2 downto 2);
  in_buffer_data_in(3 downto 3) <= i_interrupt_found;
  i_interrupt_found_buffer <= in_buffer_data_out(3 downto 3);
  in_buffer_data_in(4 downto 4) <= i_annul_instr;
  i_annul_instr_buffer <= in_buffer_data_out(4 downto 4);
  in_buffer_data_in(5 downto 5) <= i_debug_break_on_traps;
  i_debug_break_on_traps_buffer <= in_buffer_data_out(5 downto 5);
  in_buffer_data_in(13 downto 6) <= i_dbg_status;
  i_dbg_status_buffer <= in_buffer_data_out(13 downto 6);
  in_buffer_data_in(45 downto 14) <= i_PC;
  i_PC_buffer <= in_buffer_data_out(45 downto 14);
  in_buffer_data_in(77 downto 46) <= i_NPC;
  i_NPC_buffer <= in_buffer_data_out(77 downto 46);
  in_buffer_data_in(109 downto 78) <= i_PSR;
  i_PSR_buffer <= in_buffer_data_out(109 downto 78);
  in_buffer_data_in(tag_length + 109 downto 110) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 109 downto 110);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  queryDebugger_CP_857_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "queryDebugger_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 98) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(0 downto 0) <= o_annul_instr_buffer;
  o_annul_instr <= out_buffer_data_out(0 downto 0);
  out_buffer_data_in(1 downto 1) <= o_ignore_bp_buffer;
  o_ignore_bp <= out_buffer_data_out(1 downto 1);
  out_buffer_data_in(33 downto 2) <= o_PC_buffer;
  o_PC <= out_buffer_data_out(33 downto 2);
  out_buffer_data_in(65 downto 34) <= o_NPC_buffer;
  o_NPC <= out_buffer_data_out(65 downto 34);
  out_buffer_data_in(97 downto 66) <= o_PSR_buffer;
  o_PSR <= out_buffer_data_out(97 downto 66);
  out_buffer_data_in(tag_length + 97 downto 98) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 97 downto 98);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= queryDebugger_CP_857_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= queryDebugger_CP_857_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= queryDebugger_CP_857_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  queryDebugger_CP_857: Block -- control-path 
    signal queryDebugger_CP_857_elements: BooleanArray(5 downto 0);
    -- 
  begin -- 
    queryDebugger_CP_857_elements(0) <= queryDebugger_CP_857_start;
    queryDebugger_CP_857_symbol <= queryDebugger_CP_857_elements(5);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	3 
    -- CP-element group 0: 	4 
    -- CP-element group 0: 	2 
    -- CP-element group 0: 	1 
    -- CP-element group 0:  members (14) 
      -- CP-element group 0: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2120_update_start_
      -- CP-element group 0: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2120_sample_start_
      -- CP-element group 0: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2115_Update/$entry
      -- CP-element group 0: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2115_sample_start_
      -- CP-element group 0: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2115_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2115_Sample/crr
      -- CP-element group 0: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2120_Update/ccr
      -- CP-element group 0: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2120_Sample/$entry
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2120_Sample/crr
      -- CP-element group 0: 	 assign_stmt_1985_to_assign_stmt_2180/$entry
      -- CP-element group 0: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2115_Update/ccr
      -- CP-element group 0: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2115_update_start_
      -- CP-element group 0: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2120_Update/$entry
      -- 
    ccr_889_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_889_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => queryDebugger_CP_857_elements(0), ack => call_stmt_2120_call_req_1); -- 
    crr_884_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_884_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => queryDebugger_CP_857_elements(0), ack => call_stmt_2120_call_req_0); -- 
    crr_870_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_870_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => queryDebugger_CP_857_elements(0), ack => call_stmt_2115_call_req_0); -- 
    ccr_875_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_875_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => queryDebugger_CP_857_elements(0), ack => call_stmt_2115_call_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2115_Sample/cra
      -- CP-element group 1: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2115_sample_completed_
      -- CP-element group 1: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2115_Sample/$exit
      -- 
    cra_871_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2115_call_ack_0, ack => queryDebugger_CP_857_elements(1)); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	5 
    -- CP-element group 2:  members (3) 
      -- CP-element group 2: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2115_update_completed_
      -- CP-element group 2: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2115_Update/$exit
      -- CP-element group 2: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2115_Update/cca
      -- 
    cca_876_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2115_call_ack_1, ack => queryDebugger_CP_857_elements(2)); -- 
    -- CP-element group 3:  transition  input  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	0 
    -- CP-element group 3: successors 
    -- CP-element group 3:  members (3) 
      -- CP-element group 3: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2120_sample_completed_
      -- CP-element group 3: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2120_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2120_Sample/cra
      -- 
    cra_885_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2120_call_ack_0, ack => queryDebugger_CP_857_elements(3)); -- 
    -- CP-element group 4:  transition  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	0 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	5 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2120_Update/$exit
      -- CP-element group 4: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2120_update_completed_
      -- CP-element group 4: 	 assign_stmt_1985_to_assign_stmt_2180/call_stmt_2120_Update/cca
      -- 
    cca_890_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_2120_call_ack_1, ack => queryDebugger_CP_857_elements(4)); -- 
    -- CP-element group 5:  join  transition  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	4 
    -- CP-element group 5: 	2 
    -- CP-element group 5: successors 
    -- CP-element group 5:  members (2) 
      -- CP-element group 5: 	 $exit
      -- CP-element group 5: 	 assign_stmt_1985_to_assign_stmt_2180/$exit
      -- 
    queryDebugger_cp_element_group_5: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 32) := "queryDebugger_cp_element_group_5"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= queryDebugger_CP_857_elements(4) & queryDebugger_CP_857_elements(2);
      gj_queryDebugger_cp_element_group_5 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => queryDebugger_CP_857_elements(5), clk => clk, reset => reset); --
    end block;
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal AND_u1_u1_2174_wire : std_logic_vector(0 downto 0);
    signal AND_u1_u1_2177_wire : std_logic_vector(0 downto 0);
    signal CONCAT_u14_u16_2082_wire_constant : std_logic_vector(15 downto 0);
    signal CONCAT_u14_u16_2086_wire : std_logic_vector(15 downto 0);
    signal CONCAT_u14_u16_2090_wire : std_logic_vector(15 downto 0);
    signal CONCAT_u8_u16_2101_wire : std_logic_vector(15 downto 0);
    signal MUX_2062_wire : std_logic_vector(7 downto 0);
    signal MUX_2063_wire : std_logic_vector(7 downto 0);
    signal MUX_2064_wire : std_logic_vector(7 downto 0);
    signal MUX_2065_wire : std_logic_vector(7 downto 0);
    signal MUX_2092_wire : std_logic_vector(15 downto 0);
    signal MUX_2093_wire : std_logic_vector(15 downto 0);
    signal MUX_2094_wire : std_logic_vector(15 downto 0);
    signal MUX_2095_wire : std_logic_vector(15 downto 0);
    signal MUX_2178_wire : std_logic_vector(0 downto 0);
    signal NEQ_u32_u1_2125_wire : std_logic_vector(0 downto 0);
    signal NEQ_u32_u1_2132_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_2011_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_2032_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_2042_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_2168_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_2173_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_2176_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_2009_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_2027_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_2035_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_2037_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_2045_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_2047_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_2073_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_2077_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_2138_wire : std_logic_vector(0 downto 0);
    signal R_CCU_DBG_BP_HIT_2056_wire_constant : std_logic_vector(7 downto 0);
    signal R_CCU_DBG_CONNECT_RQST_2052_wire_constant : std_logic_vector(7 downto 0);
    signal R_CCU_DBG_READ_WP_HIT_2058_wire_constant : std_logic_vector(7 downto 0);
    signal R_CCU_DBG_THREAD_FINISH_2054_wire_constant : std_logic_vector(7 downto 0);
    signal R_CCU_DBG_WRITE_WP_HIT_2060_wire_constant : std_logic_vector(7 downto 0);
    signal R_ONE_16_2074_wire_constant : std_logic_vector(15 downto 0);
    signal R_ONE_8_2099_wire_constant : std_logic_vector(7 downto 0);
    signal R_ZERO_14_2084_wire_constant : std_logic_vector(13 downto 0);
    signal R_ZERO_14_2088_wire_constant : std_logic_vector(13 downto 0);
    signal R_ZERO_16_2070_wire_constant : std_logic_vector(15 downto 0);
    signal R_ZERO_16_2091_wire_constant : std_logic_vector(15 downto 0);
    signal R_ZERO_8_2061_wire_constant : std_logic_vector(7 downto 0);
    signal bp_hit_1993 : std_logic_vector(0 downto 0);
    signal bp_id_1989 : std_logic_vector(1 downto 0);
    signal ccu_cmd_data_2097 : std_logic_vector(15 downto 0);
    signal ccu_cmd_opcode_2067 : std_logic_vector(7 downto 0);
    signal dbg_interrupt_1985 : std_logic_vector(0 downto 0);
    signal konst_2162_wire_constant : std_logic_vector(0 downto 0);
    signal konst_2170_wire_constant : std_logic_vector(0 downto 0);
    signal msg_to_gdb_2104 : std_logic_vector(31 downto 0);
    signal npc_changed_by_debugger_2134 : std_logic_vector(0 downto 0);
    signal pc_changed_by_debugger_2127 : std_logic_vector(0 downto 0);
    signal read_wp_hit_2001 : std_logic_vector(0 downto 0);
    signal resumeNPC_2120 : std_logic_vector(31 downto 0);
    signal resumePC_2120 : std_logic_vector(31 downto 0);
    signal resumePSR_2120 : std_logic_vector(31 downto 0);
    signal send_to_debug_2109 : std_logic_vector(0 downto 0);
    signal thread_finish_2039 : std_logic_vector(0 downto 0);
    signal thread_finish_due_to_trap_2029 : std_logic_vector(0 downto 0);
    signal use_debug_pc_values_2141 : std_logic_vector(0 downto 0);
    signal valid_debug_stop_2049 : std_logic_vector(0 downto 0);
    signal wp_hit_2013 : std_logic_vector(0 downto 0);
    signal wp_id_1997 : std_logic_vector(1 downto 0);
    signal write_wp_hit_2005 : std_logic_vector(0 downto 0);
    -- 
  begin -- 
    CONCAT_u14_u16_2082_wire_constant <= "0000000000000100";
    R_CCU_DBG_BP_HIT_2056_wire_constant <= "00000010";
    R_CCU_DBG_CONNECT_RQST_2052_wire_constant <= "00000001";
    R_CCU_DBG_READ_WP_HIT_2058_wire_constant <= "00000011";
    R_CCU_DBG_THREAD_FINISH_2054_wire_constant <= "00000101";
    R_CCU_DBG_WRITE_WP_HIT_2060_wire_constant <= "00000100";
    R_ONE_16_2074_wire_constant <= "0000000000000001";
    R_ONE_8_2099_wire_constant <= "00000001";
    R_ZERO_14_2084_wire_constant <= "00000000000000";
    R_ZERO_14_2088_wire_constant <= "00000000000000";
    R_ZERO_16_2070_wire_constant <= "0000000000000000";
    R_ZERO_16_2091_wire_constant <= "0000000000000000";
    R_ZERO_8_2061_wire_constant <= "00000000";
    konst_2162_wire_constant <= "0";
    konst_2170_wire_constant <= "0";
    -- flow-through select operator MUX_2062_inst
    MUX_2062_wire <= R_CCU_DBG_WRITE_WP_HIT_2060_wire_constant when (write_wp_hit_2005(0) /=  '0') else R_ZERO_8_2061_wire_constant;
    -- flow-through select operator MUX_2063_inst
    MUX_2063_wire <= R_CCU_DBG_READ_WP_HIT_2058_wire_constant when (read_wp_hit_2001(0) /=  '0') else MUX_2062_wire;
    -- flow-through select operator MUX_2064_inst
    MUX_2064_wire <= R_CCU_DBG_BP_HIT_2056_wire_constant when (bp_hit_1993(0) /=  '0') else MUX_2063_wire;
    -- flow-through select operator MUX_2065_inst
    MUX_2065_wire <= R_CCU_DBG_THREAD_FINISH_2054_wire_constant when (thread_finish_2039(0) /=  '0') else MUX_2064_wire;
    -- flow-through select operator MUX_2066_inst
    ccu_cmd_opcode_2067 <= R_CCU_DBG_CONNECT_RQST_2052_wire_constant when (first_connect_flag_buffer(0) /=  '0') else MUX_2065_wire;
    -- flow-through select operator MUX_2092_inst
    MUX_2092_wire <= CONCAT_u14_u16_2090_wire when (wp_hit_2013(0) /=  '0') else R_ZERO_16_2091_wire_constant;
    -- flow-through select operator MUX_2093_inst
    MUX_2093_wire <= CONCAT_u14_u16_2086_wire when (bp_hit_1993(0) /=  '0') else MUX_2092_wire;
    -- flow-through select operator MUX_2094_inst
    MUX_2094_wire <= CONCAT_u14_u16_2082_wire_constant when (OR_u1_u1_2077_wire(0) /=  '0') else MUX_2093_wire;
    -- flow-through select operator MUX_2095_inst
    MUX_2095_wire <= R_ONE_16_2074_wire_constant when (OR_u1_u1_2073_wire(0) /=  '0') else MUX_2094_wire;
    -- flow-through select operator MUX_2096_inst
    ccu_cmd_data_2097 <= R_ZERO_16_2070_wire_constant when (first_connect_flag_buffer(0) /=  '0') else MUX_2095_wire;
    -- flow-through select operator MUX_2146_inst
    o_PC_buffer <= resumePC_2120 when (use_debug_pc_values_2141(0) /=  '0') else i_PC_buffer;
    -- flow-through select operator MUX_2152_inst
    o_NPC_buffer <= resumeNPC_2120 when (use_debug_pc_values_2141(0) /=  '0') else i_NPC_buffer;
    -- flow-through select operator MUX_2158_inst
    o_PSR_buffer <= resumePSR_2120 when (valid_debug_stop_2049(0) /=  '0') else i_PSR_buffer;
    -- flow-through select operator MUX_2164_inst
    o_annul_instr_buffer <= konst_2162_wire_constant when (use_debug_pc_values_2141(0) /=  '0') else i_annul_instr_buffer;
    -- flow-through select operator MUX_2178_inst
    MUX_2178_wire <= konst_2170_wire_constant when (use_debug_pc_values_2141(0) /=  '0') else AND_u1_u1_2177_wire;
    -- flow-through slice operator slice_1984_inst
    dbg_interrupt_1985 <= i_dbg_status_buffer(7 downto 7);
    -- flow-through slice operator slice_1988_inst
    bp_id_1989 <= i_dbg_status_buffer(6 downto 5);
    -- flow-through slice operator slice_1992_inst
    bp_hit_1993 <= i_dbg_status_buffer(4 downto 4);
    -- flow-through slice operator slice_1996_inst
    wp_id_1997 <= i_dbg_status_buffer(3 downto 2);
    -- flow-through slice operator slice_2000_inst
    read_wp_hit_2001 <= i_dbg_status_buffer(1 downto 1);
    -- flow-through slice operator slice_2004_inst
    write_wp_hit_2005 <= i_dbg_status_buffer(0 downto 0);
    -- flow through binary operator AND_u1_u1_2012_inst
    wp_hit_2013 <= (OR_u1_u1_2009_wire and NOT_u1_u1_2011_wire);
    -- flow through binary operator AND_u1_u1_2028_inst
    thread_finish_due_to_trap_2029 <= (i_debug_break_on_traps_buffer and OR_u1_u1_2027_wire);
    -- flow through binary operator AND_u1_u1_2038_inst
    thread_finish_2039 <= (NOT_u1_u1_2032_wire and OR_u1_u1_2037_wire);
    -- flow through binary operator AND_u1_u1_2048_inst
    valid_debug_stop_2049 <= (NOT_u1_u1_2042_wire and OR_u1_u1_2047_wire);
    -- flow through binary operator AND_u1_u1_2126_inst
    pc_changed_by_debugger_2127 <= (valid_debug_stop_2049 and NEQ_u32_u1_2125_wire);
    -- flow through binary operator AND_u1_u1_2133_inst
    npc_changed_by_debugger_2134 <= (valid_debug_stop_2049 and NEQ_u32_u1_2132_wire);
    -- flow through binary operator AND_u1_u1_2174_inst
    AND_u1_u1_2174_wire <= (bp_hit_1993 and NOT_u1_u1_2173_wire);
    -- flow through binary operator AND_u1_u1_2177_inst
    AND_u1_u1_2177_wire <= (AND_u1_u1_2174_wire and NOT_u1_u1_2176_wire);
    -- flow through binary operator AND_u1_u1_2179_inst
    o_ignore_bp_buffer <= (NOT_u1_u1_2168_wire and MUX_2178_wire);
    -- flow through binary operator CONCAT_u14_u16_2086_inst
    process(R_ZERO_14_2084_wire_constant, bp_id_1989) -- 
      variable tmp_var : std_logic_vector(15 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ZERO_14_2084_wire_constant, bp_id_1989, tmp_var);
      CONCAT_u14_u16_2086_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u14_u16_2090_inst
    process(R_ZERO_14_2088_wire_constant, wp_id_1997) -- 
      variable tmp_var : std_logic_vector(15 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ZERO_14_2088_wire_constant, wp_id_1997, tmp_var);
      CONCAT_u14_u16_2090_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u16_u32_2103_inst
    process(CONCAT_u8_u16_2101_wire, ccu_cmd_data_2097) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u8_u16_2101_wire, ccu_cmd_data_2097, tmp_var);
      msg_to_gdb_2104 <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u8_u16_2101_inst
    process(R_ONE_8_2099_wire_constant, ccu_cmd_opcode_2067) -- 
      variable tmp_var : std_logic_vector(15 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ONE_8_2099_wire_constant, ccu_cmd_opcode_2067, tmp_var);
      CONCAT_u8_u16_2101_wire <= tmp_var; --
    end process;
    -- flow through binary operator NEQ_u32_u1_2125_inst
    process(resumePC_2120, i_PC_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntNe_proc(resumePC_2120, i_PC_buffer, tmp_var);
      NEQ_u32_u1_2125_wire <= tmp_var; --
    end process;
    -- flow through binary operator NEQ_u32_u1_2132_inst
    process(resumeNPC_2120, i_NPC_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntNe_proc(resumeNPC_2120, i_NPC_buffer, tmp_var);
      NEQ_u32_u1_2132_wire <= tmp_var; --
    end process;
    -- unary operator NOT_u1_u1_2011_inst
    process(first_connect_flag_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", first_connect_flag_buffer, tmp_var);
      NOT_u1_u1_2011_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_2032_inst
    process(first_connect_flag_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", first_connect_flag_buffer, tmp_var);
      NOT_u1_u1_2032_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_2042_inst
    process(first_connect_flag_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", first_connect_flag_buffer, tmp_var);
      NOT_u1_u1_2042_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_2168_inst
    process(first_connect_flag_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", first_connect_flag_buffer, tmp_var);
      NOT_u1_u1_2168_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_2173_inst
    process(i_exception_found_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", i_exception_found_buffer, tmp_var);
      NOT_u1_u1_2173_wire <= tmp_var; -- 
    end process;
    -- unary operator NOT_u1_u1_2176_inst
    process(i_interrupt_found_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", i_interrupt_found_buffer, tmp_var);
      NOT_u1_u1_2176_wire <= tmp_var; -- 
    end process;
    -- flow through binary operator OR_u1_u1_2009_inst
    OR_u1_u1_2009_wire <= (read_wp_hit_2001 or write_wp_hit_2005);
    -- flow through binary operator OR_u1_u1_2027_inst
    OR_u1_u1_2027_wire <= (i_exception_found_buffer or i_interrupt_found_buffer);
    -- flow through binary operator OR_u1_u1_2035_inst
    OR_u1_u1_2035_wire <= (dbg_interrupt_1985 or i_machine_error_buffer);
    -- flow through binary operator OR_u1_u1_2037_inst
    OR_u1_u1_2037_wire <= (OR_u1_u1_2035_wire or thread_finish_due_to_trap_2029);
    -- flow through binary operator OR_u1_u1_2045_inst
    OR_u1_u1_2045_wire <= (thread_finish_2039 or wp_hit_2013);
    -- flow through binary operator OR_u1_u1_2047_inst
    OR_u1_u1_2047_wire <= (OR_u1_u1_2045_wire or bp_hit_1993);
    -- flow through binary operator OR_u1_u1_2073_inst
    OR_u1_u1_2073_wire <= (i_machine_error_buffer or i_exception_found_buffer);
    -- flow through binary operator OR_u1_u1_2077_inst
    OR_u1_u1_2077_wire <= (dbg_interrupt_1985 or i_interrupt_found_buffer);
    -- flow through binary operator OR_u1_u1_2108_inst
    send_to_debug_2109 <= (first_connect_flag_buffer or valid_debug_stop_2049);
    -- flow through binary operator OR_u1_u1_2138_inst
    OR_u1_u1_2138_wire <= (first_connect_flag_buffer or pc_changed_by_debugger_2127);
    -- flow through binary operator OR_u1_u1_2140_inst
    use_debug_pc_values_2141 <= (OR_u1_u1_2138_wire or npc_changed_by_debugger_2134);
    -- shared call operator group (0) : call_stmt_2115_call 
    send_ccu_daemon_to_ccu_debug_daemon_call_group_0: Block -- 
      signal data_in: std_logic_vector(127 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs: IntegerArray(0 downto 0) := (others => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => true);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_2115_call_req_0;
      call_stmt_2115_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_2115_call_req_1;
      call_stmt_2115_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <= send_to_debug_2109(0);
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      send_ccu_daemon_to_ccu_debug_daemon_call_group_0_gI: SplitGuardInterface generic map(name => "send_ccu_daemon_to_ccu_debug_daemon_call_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= msg_to_gdb_2104 & i_PC_buffer & i_NPC_buffer & i_PSR_buffer;
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 128,
        owidth => 128,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => send_ccu_daemon_to_ccu_debug_daemon_call_reqs(0),
          ackR => send_ccu_daemon_to_ccu_debug_daemon_call_acks(0),
          dataR => send_ccu_daemon_to_ccu_debug_daemon_call_data(127 downto 0),
          tagR => send_ccu_daemon_to_ccu_debug_daemon_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseNoData -- 
        generic map ( -- 
          detailed_buffering_per_output => outBUFs, 
          twidth => 1,
          name => "OutputDemuxBaseNoData",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          reqL => send_ccu_daemon_to_ccu_debug_daemon_return_acks(0), -- cross-over
          ackL => send_ccu_daemon_to_ccu_debug_daemon_return_reqs(0), -- cross-over
          tagL => send_ccu_daemon_to_ccu_debug_daemon_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- shared call operator group (1) : call_stmt_2120_call 
    recv_ccu_debug_daemon_to_ccu_daemon_call_group_1: Block -- 
      signal data_out: std_logic_vector(95 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => true);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_2120_call_req_0;
      call_stmt_2120_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_2120_call_req_1;
      call_stmt_2120_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <= send_to_debug_2109(0);
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      recv_ccu_debug_daemon_to_ccu_daemon_call_group_1_gI: SplitGuardInterface generic map(name => "recv_ccu_debug_daemon_to_ccu_daemon_call_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      resumePC_2120 <= data_out(95 downto 64);
      resumeNPC_2120 <= data_out(63 downto 32);
      resumePSR_2120 <= data_out(31 downto 0);
      CallReq: InputMuxBaseNoData -- 
        generic map (name => "InputMuxBaseNoData",
        twidth => 1,
        nreqs => 1,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          reqR => recv_ccu_debug_daemon_to_ccu_daemon_call_reqs(0),
          ackR => recv_ccu_debug_daemon_to_ccu_daemon_call_acks(0),
          tagR => recv_ccu_debug_daemon_to_ccu_daemon_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 96,
          owidth => 96,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => recv_ccu_debug_daemon_to_ccu_daemon_return_acks(0), -- cross-over
          ackL => recv_ccu_debug_daemon_to_ccu_daemon_return_reqs(0), -- cross-over
          dataL => recv_ccu_debug_daemon_to_ccu_daemon_return_data(95 downto 0),
          tagL => recv_ccu_debug_daemon_to_ccu_daemon_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 1
    -- 
  end Block; -- data_path
  -- 
end queryDebugger_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity read_fpunit_register is -- 
  generic (tag_length : integer); 
  port ( -- 
    fsr_flag : in  std_logic_vector(0 downto 0);
    reg_id : in  std_logic_vector(4 downto 0);
    ret_val : out  std_logic_vector(31 downto 0);
    access_fpunit_registers_call_reqs : out  std_logic_vector(0 downto 0);
    access_fpunit_registers_call_acks : in   std_logic_vector(0 downto 0);
    access_fpunit_registers_call_data : out  std_logic_vector(38 downto 0);
    access_fpunit_registers_call_tag  :  out  std_logic_vector(0 downto 0);
    access_fpunit_registers_return_reqs : out  std_logic_vector(0 downto 0);
    access_fpunit_registers_return_acks : in   std_logic_vector(0 downto 0);
    access_fpunit_registers_return_data : in   std_logic_vector(32 downto 0);
    access_fpunit_registers_return_tag :  in   std_logic_vector(0 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity read_fpunit_register;
architecture read_fpunit_register_arch of read_fpunit_register is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 6)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 32)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal fsr_flag_buffer :  std_logic_vector(0 downto 0);
  signal fsr_flag_update_enable: Boolean;
  signal reg_id_buffer :  std_logic_vector(4 downto 0);
  signal reg_id_update_enable: Boolean;
  -- output port buffer signals
  signal ret_val_buffer :  std_logic_vector(31 downto 0);
  signal ret_val_update_enable: Boolean;
  signal read_fpunit_register_CP_1324_start: Boolean;
  signal read_fpunit_register_CP_1324_symbol: Boolean;
  -- volatile/operator module components. 
  component access_fpunit_registers is -- 
    generic (tag_length : integer); 
    port ( -- 
      command : in  std_logic_vector(38 downto 0);
      response : out  std_logic_vector(32 downto 0);
      teu_to_ccu_fpunit_register_access_response_pipe_read_req : out  std_logic_vector(0 downto 0);
      teu_to_ccu_fpunit_register_access_response_pipe_read_ack : in   std_logic_vector(0 downto 0);
      teu_to_ccu_fpunit_register_access_response_pipe_read_data : in   std_logic_vector(32 downto 0);
      ccu_to_teu_fpunit_register_access_command_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_to_teu_fpunit_register_access_command_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_to_teu_fpunit_register_access_command_pipe_write_data : out  std_logic_vector(39 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal call_stmt_3556_call_ack_1 : boolean;
  signal call_stmt_3556_call_req_0 : boolean;
  signal call_stmt_3556_call_ack_0 : boolean;
  signal call_stmt_3556_call_req_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "read_fpunit_register_input_buffer", -- 
      buffer_size => 0,
      bypass_flag => true,
      data_width => tag_length + 6) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(0 downto 0) <= fsr_flag;
  fsr_flag_buffer <= in_buffer_data_out(0 downto 0);
  in_buffer_data_in(5 downto 1) <= reg_id;
  reg_id_buffer <= in_buffer_data_out(5 downto 1);
  in_buffer_data_in(tag_length + 5 downto 6) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 5 downto 6);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  read_fpunit_register_CP_1324_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "read_fpunit_register_out_buffer", -- 
      buffer_size => 0,
      full_rate => false,
      data_width => tag_length + 32) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(31 downto 0) <= ret_val_buffer;
  ret_val <= out_buffer_data_out(31 downto 0);
  out_buffer_data_in(tag_length + 31 downto 32) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 31 downto 32);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= read_fpunit_register_CP_1324_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= read_fpunit_register_CP_1324_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= read_fpunit_register_CP_1324_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  read_fpunit_register_CP_1324: Block -- control-path 
    signal read_fpunit_register_CP_1324_elements: BooleanArray(2 downto 0);
    -- 
  begin -- 
    read_fpunit_register_CP_1324_elements(0) <= read_fpunit_register_CP_1324_start;
    read_fpunit_register_CP_1324_symbol <= read_fpunit_register_CP_1324_elements(2);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0:  members (8) 
      -- CP-element group 0: 	 assign_stmt_3553_to_assign_stmt_3560/$entry
      -- CP-element group 0: 	 assign_stmt_3553_to_assign_stmt_3560/call_stmt_3556_Sample/crr
      -- CP-element group 0: 	 assign_stmt_3553_to_assign_stmt_3560/call_stmt_3556_sample_start_
      -- CP-element group 0: 	 assign_stmt_3553_to_assign_stmt_3560/call_stmt_3556_update_start_
      -- CP-element group 0: 	 assign_stmt_3553_to_assign_stmt_3560/call_stmt_3556_Update/$entry
      -- CP-element group 0: 	 assign_stmt_3553_to_assign_stmt_3560/call_stmt_3556_Update/ccr
      -- CP-element group 0: 	 assign_stmt_3553_to_assign_stmt_3560/call_stmt_3556_Sample/$entry
      -- CP-element group 0: 	 $entry
      -- 
    crr_1337_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1337_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => read_fpunit_register_CP_1324_elements(0), ack => call_stmt_3556_call_req_0); -- 
    ccr_1342_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1342_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => read_fpunit_register_CP_1324_elements(0), ack => call_stmt_3556_call_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_3553_to_assign_stmt_3560/call_stmt_3556_Sample/cra
      -- CP-element group 1: 	 assign_stmt_3553_to_assign_stmt_3560/call_stmt_3556_sample_completed_
      -- CP-element group 1: 	 assign_stmt_3553_to_assign_stmt_3560/call_stmt_3556_Sample/$exit
      -- 
    cra_1338_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_3556_call_ack_0, ack => read_fpunit_register_CP_1324_elements(1)); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2:  members (5) 
      -- CP-element group 2: 	 assign_stmt_3553_to_assign_stmt_3560/call_stmt_3556_Update/cca
      -- CP-element group 2: 	 assign_stmt_3553_to_assign_stmt_3560/$exit
      -- CP-element group 2: 	 assign_stmt_3553_to_assign_stmt_3560/call_stmt_3556_update_completed_
      -- CP-element group 2: 	 $exit
      -- CP-element group 2: 	 assign_stmt_3553_to_assign_stmt_3560/call_stmt_3556_Update/$exit
      -- 
    cca_1343_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_3556_call_ack_1, ack => read_fpunit_register_CP_1324_elements(2)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal CONCAT_u1_u2_3548_wire : std_logic_vector(1 downto 0);
    signal CONCAT_u5_u37_3551_wire : std_logic_vector(36 downto 0);
    signal R_ZERO_1_3546_wire_constant : std_logic_vector(0 downto 0);
    signal R_ZERO_32_3550_wire_constant : std_logic_vector(31 downto 0);
    signal command_3553 : std_logic_vector(38 downto 0);
    signal ret_stat_3556 : std_logic_vector(32 downto 0);
    -- 
  begin -- 
    R_ZERO_1_3546_wire_constant <= "0";
    R_ZERO_32_3550_wire_constant <= "00000000000000000000000000000000";
    -- flow-through slice operator slice_3559_inst
    ret_val_buffer <= ret_stat_3556(31 downto 0);
    -- flow through binary operator CONCAT_u1_u2_3548_inst
    process(R_ZERO_1_3546_wire_constant, fsr_flag_buffer) -- 
      variable tmp_var : std_logic_vector(1 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ZERO_1_3546_wire_constant, fsr_flag_buffer, tmp_var);
      CONCAT_u1_u2_3548_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u2_u39_3552_inst
    process(CONCAT_u1_u2_3548_wire, CONCAT_u5_u37_3551_wire) -- 
      variable tmp_var : std_logic_vector(38 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u1_u2_3548_wire, CONCAT_u5_u37_3551_wire, tmp_var);
      command_3553 <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u5_u37_3551_inst
    process(reg_id_buffer) -- 
      variable tmp_var : std_logic_vector(36 downto 0); -- 
    begin -- 
      ApConcat_proc(reg_id_buffer, R_ZERO_32_3550_wire_constant, tmp_var);
      CONCAT_u5_u37_3551_wire <= tmp_var; --
    end process;
    -- shared call operator group (0) : call_stmt_3556_call 
    access_fpunit_registers_call_group_0: Block -- 
      signal data_in: std_logic_vector(38 downto 0);
      signal data_out: std_logic_vector(32 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_3556_call_req_0;
      call_stmt_3556_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_3556_call_req_1;
      call_stmt_3556_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      access_fpunit_registers_call_group_0_gI: SplitGuardInterface generic map(name => "access_fpunit_registers_call_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= command_3553;
      ret_stat_3556 <= data_out(32 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 39,
        owidth => 39,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => access_fpunit_registers_call_reqs(0),
          ackR => access_fpunit_registers_call_acks(0),
          dataR => access_fpunit_registers_call_data(38 downto 0),
          tagR => access_fpunit_registers_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 33,
          owidth => 33,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => access_fpunit_registers_return_acks(0), -- cross-over
          ackL => access_fpunit_registers_return_reqs(0), -- cross-over
          dataL => access_fpunit_registers_return_data(32 downto 0),
          tagL => access_fpunit_registers_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- 
  end Block; -- data_path
  -- 
end read_fpunit_register_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity read_from_memory is -- 
  generic (tag_length : integer); 
  port ( -- 
    asi : in  std_logic_vector(7 downto 0);
    addr : in  std_logic_vector(31 downto 0);
    err_flag : out  std_logic_vector(0 downto 0);
    data : out  std_logic_vector(31 downto 0);
    access_memory_call_reqs : out  std_logic_vector(0 downto 0);
    access_memory_call_acks : in   std_logic_vector(0 downto 0);
    access_memory_call_data : out  std_logic_vector(72 downto 0);
    access_memory_call_tag  :  out  std_logic_vector(0 downto 0);
    access_memory_return_reqs : out  std_logic_vector(0 downto 0);
    access_memory_return_acks : in   std_logic_vector(0 downto 0);
    access_memory_return_data : in   std_logic_vector(32 downto 0);
    access_memory_return_tag :  in   std_logic_vector(0 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity read_from_memory;
architecture read_from_memory_arch of read_from_memory is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 40)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 33)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal asi_buffer :  std_logic_vector(7 downto 0);
  signal asi_update_enable: Boolean;
  signal addr_buffer :  std_logic_vector(31 downto 0);
  signal addr_update_enable: Boolean;
  -- output port buffer signals
  signal err_flag_buffer :  std_logic_vector(0 downto 0);
  signal err_flag_update_enable: Boolean;
  signal data_buffer :  std_logic_vector(31 downto 0);
  signal data_update_enable: Boolean;
  signal read_from_memory_CP_1384_start: Boolean;
  signal read_from_memory_CP_1384_symbol: Boolean;
  -- volatile/operator module components. 
  component access_memory is -- 
    generic (tag_length : integer); 
    port ( -- 
      command : in  std_logic_vector(72 downto 0);
      response : out  std_logic_vector(32 downto 0);
      teu_to_ccu_load_store_response_pipe_read_req : out  std_logic_vector(0 downto 0);
      teu_to_ccu_load_store_response_pipe_read_ack : in   std_logic_vector(0 downto 0);
      teu_to_ccu_load_store_response_pipe_read_data : in   std_logic_vector(32 downto 0);
      ccu_to_teu_load_store_command_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_to_teu_load_store_command_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_to_teu_load_store_command_pipe_write_data : out  std_logic_vector(72 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal call_stmt_3624_call_req_0 : boolean;
  signal call_stmt_3624_call_ack_0 : boolean;
  signal call_stmt_3624_call_req_1 : boolean;
  signal call_stmt_3624_call_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "read_from_memory_input_buffer", -- 
      buffer_size => 0,
      bypass_flag => true,
      data_width => tag_length + 40) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(7 downto 0) <= asi;
  asi_buffer <= in_buffer_data_out(7 downto 0);
  in_buffer_data_in(39 downto 8) <= addr;
  addr_buffer <= in_buffer_data_out(39 downto 8);
  in_buffer_data_in(tag_length + 39 downto 40) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 39 downto 40);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  read_from_memory_CP_1384_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "read_from_memory_out_buffer", -- 
      buffer_size => 0,
      full_rate => false,
      data_width => tag_length + 33) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(0 downto 0) <= err_flag_buffer;
  err_flag <= out_buffer_data_out(0 downto 0);
  out_buffer_data_in(32 downto 1) <= data_buffer;
  data <= out_buffer_data_out(32 downto 1);
  out_buffer_data_in(tag_length + 32 downto 33) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 32 downto 33);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= read_from_memory_CP_1384_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= read_from_memory_CP_1384_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= read_from_memory_CP_1384_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  read_from_memory_CP_1384: Block -- control-path 
    signal read_from_memory_CP_1384_elements: BooleanArray(2 downto 0);
    -- 
  begin -- 
    read_from_memory_CP_1384_elements(0) <= read_from_memory_CP_1384_start;
    read_from_memory_CP_1384_symbol <= read_from_memory_CP_1384_elements(2);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0:  members (8) 
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_3621_to_assign_stmt_3633/$entry
      -- CP-element group 0: 	 assign_stmt_3621_to_assign_stmt_3633/call_stmt_3624_sample_start_
      -- CP-element group 0: 	 assign_stmt_3621_to_assign_stmt_3633/call_stmt_3624_update_start_
      -- CP-element group 0: 	 assign_stmt_3621_to_assign_stmt_3633/call_stmt_3624_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_3621_to_assign_stmt_3633/call_stmt_3624_Sample/crr
      -- CP-element group 0: 	 assign_stmt_3621_to_assign_stmt_3633/call_stmt_3624_Update/$entry
      -- CP-element group 0: 	 assign_stmt_3621_to_assign_stmt_3633/call_stmt_3624_Update/ccr
      -- 
    crr_1397_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1397_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => read_from_memory_CP_1384_elements(0), ack => call_stmt_3624_call_req_0); -- 
    ccr_1402_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1402_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => read_from_memory_CP_1384_elements(0), ack => call_stmt_3624_call_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_3621_to_assign_stmt_3633/call_stmt_3624_sample_completed_
      -- CP-element group 1: 	 assign_stmt_3621_to_assign_stmt_3633/call_stmt_3624_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_3621_to_assign_stmt_3633/call_stmt_3624_Sample/cra
      -- 
    cra_1398_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_3624_call_ack_0, ack => read_from_memory_CP_1384_elements(1)); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2:  members (5) 
      -- CP-element group 2: 	 $exit
      -- CP-element group 2: 	 assign_stmt_3621_to_assign_stmt_3633/$exit
      -- CP-element group 2: 	 assign_stmt_3621_to_assign_stmt_3633/call_stmt_3624_update_completed_
      -- CP-element group 2: 	 assign_stmt_3621_to_assign_stmt_3633/call_stmt_3624_Update/$exit
      -- CP-element group 2: 	 assign_stmt_3621_to_assign_stmt_3633/call_stmt_3624_Update/cca
      -- 
    cca_1403_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_3624_call_ack_1, ack => read_from_memory_CP_1384_elements(2)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal CONCAT_u1_u9_3616_wire : std_logic_vector(8 downto 0);
    signal CONCAT_u32_u64_3619_wire : std_logic_vector(63 downto 0);
    signal R_ONE_1_3614_wire_constant : std_logic_vector(0 downto 0);
    signal R_ZERO_32_3618_wire_constant : std_logic_vector(31 downto 0);
    signal command_3621 : std_logic_vector(72 downto 0);
    signal konst_3627_wire_constant : std_logic_vector(32 downto 0);
    signal ret_stat_3624 : std_logic_vector(32 downto 0);
    -- 
  begin -- 
    R_ONE_1_3614_wire_constant <= "1";
    R_ZERO_32_3618_wire_constant <= "00000000000000000000000000000000";
    konst_3627_wire_constant <= "000000000000000000000000000100000";
    -- flow-through slice operator slice_3632_inst
    data_buffer <= ret_stat_3624(31 downto 0);
    -- flow through binary operator BITSEL_u33_u1_3628_inst
    process(ret_stat_3624) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(ret_stat_3624, konst_3627_wire_constant, tmp_var);
      err_flag_buffer <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u1_u9_3616_inst
    process(R_ONE_1_3614_wire_constant, asi_buffer) -- 
      variable tmp_var : std_logic_vector(8 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ONE_1_3614_wire_constant, asi_buffer, tmp_var);
      CONCAT_u1_u9_3616_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u32_u64_3619_inst
    process(addr_buffer) -- 
      variable tmp_var : std_logic_vector(63 downto 0); -- 
    begin -- 
      ApConcat_proc(addr_buffer, R_ZERO_32_3618_wire_constant, tmp_var);
      CONCAT_u32_u64_3619_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u9_u73_3620_inst
    process(CONCAT_u1_u9_3616_wire, CONCAT_u32_u64_3619_wire) -- 
      variable tmp_var : std_logic_vector(72 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u1_u9_3616_wire, CONCAT_u32_u64_3619_wire, tmp_var);
      command_3621 <= tmp_var; --
    end process;
    -- shared call operator group (0) : call_stmt_3624_call 
    access_memory_call_group_0: Block -- 
      signal data_in: std_logic_vector(72 downto 0);
      signal data_out: std_logic_vector(32 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_3624_call_req_0;
      call_stmt_3624_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_3624_call_req_1;
      call_stmt_3624_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      access_memory_call_group_0_gI: SplitGuardInterface generic map(name => "access_memory_call_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= command_3621;
      ret_stat_3624 <= data_out(32 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 73,
        owidth => 73,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => access_memory_call_reqs(0),
          ackR => access_memory_call_acks(0),
          dataR => access_memory_call_data(72 downto 0),
          tagR => access_memory_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 33,
          owidth => 33,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => access_memory_return_acks(0), -- cross-over
          ackL => access_memory_return_reqs(0), -- cross-over
          dataL => access_memory_return_data(32 downto 0),
          tagL => access_memory_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- 
  end Block; -- data_path
  -- 
end read_from_memory_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity read_iunit_register is -- 
  generic (tag_length : integer); 
  port ( -- 
    reg_type : in  std_logic_vector(2 downto 0);
    reg_id : in  std_logic_vector(4 downto 0);
    ret_val : out  std_logic_vector(31 downto 0);
    access_iunit_registers_call_reqs : out  std_logic_vector(0 downto 0);
    access_iunit_registers_call_acks : in   std_logic_vector(0 downto 0);
    access_iunit_registers_call_data : out  std_logic_vector(40 downto 0);
    access_iunit_registers_call_tag  :  out  std_logic_vector(2 downto 0);
    access_iunit_registers_return_reqs : out  std_logic_vector(0 downto 0);
    access_iunit_registers_return_acks : in   std_logic_vector(0 downto 0);
    access_iunit_registers_return_data : in   std_logic_vector(31 downto 0);
    access_iunit_registers_return_tag :  in   std_logic_vector(2 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity read_iunit_register;
architecture read_iunit_register_arch of read_iunit_register is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 8)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 32)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal reg_type_buffer :  std_logic_vector(2 downto 0);
  signal reg_type_update_enable: Boolean;
  signal reg_id_buffer :  std_logic_vector(4 downto 0);
  signal reg_id_update_enable: Boolean;
  -- output port buffer signals
  signal ret_val_buffer :  std_logic_vector(31 downto 0);
  signal ret_val_update_enable: Boolean;
  signal read_iunit_register_CP_1304_start: Boolean;
  signal read_iunit_register_CP_1304_symbol: Boolean;
  -- volatile/operator module components. 
  component access_iunit_registers is -- 
    generic (tag_length : integer); 
    port ( -- 
      cmd_word : in  std_logic_vector(40 downto 0);
      response_word : out  std_logic_vector(31 downto 0);
      teu_to_ccu_iunit_register_access_response_pipe_read_req : out  std_logic_vector(0 downto 0);
      teu_to_ccu_iunit_register_access_response_pipe_read_ack : in   std_logic_vector(0 downto 0);
      teu_to_ccu_iunit_register_access_response_pipe_read_data : in   std_logic_vector(31 downto 0);
      ccu_to_teu_iunit_register_access_command_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_to_teu_iunit_register_access_command_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_to_teu_iunit_register_access_command_pipe_write_data : out  std_logic_vector(41 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal call_stmt_3536_call_req_0 : boolean;
  signal call_stmt_3536_call_ack_1 : boolean;
  signal call_stmt_3536_call_ack_0 : boolean;
  signal call_stmt_3536_call_req_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "read_iunit_register_input_buffer", -- 
      buffer_size => 0,
      bypass_flag => true,
      data_width => tag_length + 8) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(2 downto 0) <= reg_type;
  reg_type_buffer <= in_buffer_data_out(2 downto 0);
  in_buffer_data_in(7 downto 3) <= reg_id;
  reg_id_buffer <= in_buffer_data_out(7 downto 3);
  in_buffer_data_in(tag_length + 7 downto 8) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 7 downto 8);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  read_iunit_register_CP_1304_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "read_iunit_register_out_buffer", -- 
      buffer_size => 0,
      full_rate => false,
      data_width => tag_length + 32) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(31 downto 0) <= ret_val_buffer;
  ret_val <= out_buffer_data_out(31 downto 0);
  out_buffer_data_in(tag_length + 31 downto 32) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 31 downto 32);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= read_iunit_register_CP_1304_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= read_iunit_register_CP_1304_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= read_iunit_register_CP_1304_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  read_iunit_register_CP_1304: Block -- control-path 
    signal read_iunit_register_CP_1304_elements: BooleanArray(2 downto 0);
    -- 
  begin -- 
    read_iunit_register_CP_1304_elements(0) <= read_iunit_register_CP_1304_start;
    read_iunit_register_CP_1304_symbol <= read_iunit_register_CP_1304_elements(2);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	2 
    -- CP-element group 0: 	1 
    -- CP-element group 0:  members (8) 
      -- CP-element group 0: 	 assign_stmt_3533_to_assign_stmt_3539/call_stmt_3536_sample_start_
      -- CP-element group 0: 	 assign_stmt_3533_to_assign_stmt_3539/call_stmt_3536_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_3533_to_assign_stmt_3539/call_stmt_3536_Sample/crr
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_3533_to_assign_stmt_3539/call_stmt_3536_Update/$entry
      -- CP-element group 0: 	 assign_stmt_3533_to_assign_stmt_3539/call_stmt_3536_update_start_
      -- CP-element group 0: 	 assign_stmt_3533_to_assign_stmt_3539/call_stmt_3536_Update/ccr
      -- CP-element group 0: 	 assign_stmt_3533_to_assign_stmt_3539/$entry
      -- 
    crr_1317_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1317_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => read_iunit_register_CP_1304_elements(0), ack => call_stmt_3536_call_req_0); -- 
    ccr_1322_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1322_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => read_iunit_register_CP_1304_elements(0), ack => call_stmt_3536_call_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_3533_to_assign_stmt_3539/call_stmt_3536_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_3533_to_assign_stmt_3539/call_stmt_3536_sample_completed_
      -- CP-element group 1: 	 assign_stmt_3533_to_assign_stmt_3539/call_stmt_3536_Sample/cra
      -- 
    cra_1318_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_3536_call_ack_0, ack => read_iunit_register_CP_1304_elements(1)); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2:  members (5) 
      -- CP-element group 2: 	 assign_stmt_3533_to_assign_stmt_3539/$exit
      -- CP-element group 2: 	 assign_stmt_3533_to_assign_stmt_3539/call_stmt_3536_update_completed_
      -- CP-element group 2: 	 assign_stmt_3533_to_assign_stmt_3539/call_stmt_3536_Update/cca
      -- CP-element group 2: 	 assign_stmt_3533_to_assign_stmt_3539/call_stmt_3536_Update/$exit
      -- CP-element group 2: 	 $exit
      -- 
    cca_1323_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_3536_call_ack_1, ack => read_iunit_register_CP_1304_elements(2)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal CONCAT_u1_u4_3528_wire : std_logic_vector(3 downto 0);
    signal CONCAT_u5_u37_3531_wire : std_logic_vector(36 downto 0);
    signal R_ZERO_1_3526_wire_constant : std_logic_vector(0 downto 0);
    signal R_ZERO_32_3530_wire_constant : std_logic_vector(31 downto 0);
    signal command_3533 : std_logic_vector(40 downto 0);
    signal ret_stat_3536 : std_logic_vector(31 downto 0);
    -- 
  begin -- 
    R_ZERO_1_3526_wire_constant <= "0";
    R_ZERO_32_3530_wire_constant <= "00000000000000000000000000000000";
    -- interlock W_ret_val_3537_inst
    process(ret_stat_3536) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 31 downto 0) := ret_stat_3536(31 downto 0);
      ret_val_buffer <= tmp_var; -- 
    end process;
    -- flow through binary operator CONCAT_u1_u4_3528_inst
    process(R_ZERO_1_3526_wire_constant, reg_type_buffer) -- 
      variable tmp_var : std_logic_vector(3 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ZERO_1_3526_wire_constant, reg_type_buffer, tmp_var);
      CONCAT_u1_u4_3528_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u4_u41_3532_inst
    process(CONCAT_u1_u4_3528_wire, CONCAT_u5_u37_3531_wire) -- 
      variable tmp_var : std_logic_vector(40 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u1_u4_3528_wire, CONCAT_u5_u37_3531_wire, tmp_var);
      command_3533 <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u5_u37_3531_inst
    process(reg_id_buffer) -- 
      variable tmp_var : std_logic_vector(36 downto 0); -- 
    begin -- 
      ApConcat_proc(reg_id_buffer, R_ZERO_32_3530_wire_constant, tmp_var);
      CONCAT_u5_u37_3531_wire <= tmp_var; --
    end process;
    -- shared call operator group (0) : call_stmt_3536_call 
    access_iunit_registers_call_group_0: Block -- 
      signal data_in: std_logic_vector(40 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_3536_call_req_0;
      call_stmt_3536_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_3536_call_req_1;
      call_stmt_3536_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      access_iunit_registers_call_group_0_gI: SplitGuardInterface generic map(name => "access_iunit_registers_call_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= command_3533;
      ret_stat_3536 <= data_out(31 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 41,
        owidth => 41,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 3,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => access_iunit_registers_call_reqs(0),
          ackR => access_iunit_registers_call_acks(0),
          dataR => access_iunit_registers_call_data(40 downto 0),
          tagR => access_iunit_registers_call_tag(2 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 32,
          owidth => 32,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 3,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => access_iunit_registers_return_acks(0), -- cross-over
          ackL => access_iunit_registers_return_reqs(0), -- cross-over
          dataL => access_iunit_registers_return_data(31 downto 0),
          tagL => access_iunit_registers_return_tag(2 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- 
  end Block; -- data_path
  -- 
end read_iunit_register_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity recv_ccu_debug_daemon_to_ccu_daemon is -- 
  generic (tag_length : integer); 
  port ( -- 
    pc : out  std_logic_vector(31 downto 0);
    npc : out  std_logic_vector(31 downto 0);
    psr : out  std_logic_vector(31 downto 0);
    ccu_debug_daemon_to_ccu_daemon_pipe_read_req : out  std_logic_vector(0 downto 0);
    ccu_debug_daemon_to_ccu_daemon_pipe_read_ack : in   std_logic_vector(0 downto 0);
    ccu_debug_daemon_to_ccu_daemon_pipe_read_data : in   std_logic_vector(31 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity recv_ccu_debug_daemon_to_ccu_daemon;
architecture recv_ccu_debug_daemon_to_ccu_daemon_arch of recv_ccu_debug_daemon_to_ccu_daemon is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 96)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  -- output port buffer signals
  signal pc_buffer :  std_logic_vector(31 downto 0);
  signal pc_update_enable: Boolean;
  signal npc_buffer :  std_logic_vector(31 downto 0);
  signal npc_update_enable: Boolean;
  signal psr_buffer :  std_logic_vector(31 downto 0);
  signal psr_update_enable: Boolean;
  signal recv_ccu_debug_daemon_to_ccu_daemon_CP_712_start: Boolean;
  signal recv_ccu_debug_daemon_to_ccu_daemon_CP_712_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal W_psr_1956_inst_req_1 : boolean;
  signal W_psr_1956_inst_ack_1 : boolean;
  signal do_while_stmt_1884_branch_ack_1 : boolean;
  signal do_while_stmt_1884_branch_ack_0 : boolean;
  signal W_npc_1952_inst_ack_1 : boolean;
  signal W_npc_1952_inst_req_1 : boolean;
  signal W_psr_1956_inst_req_0 : boolean;
  signal W_psr_1956_inst_ack_0 : boolean;
  signal do_while_stmt_1884_branch_req_0 : boolean;
  signal phi_stmt_1886_req_0 : boolean;
  signal phi_stmt_1886_req_1 : boolean;
  signal phi_stmt_1886_ack_0 : boolean;
  signal nstate_1946_1888_buf_req_0 : boolean;
  signal nstate_1946_1888_buf_ack_0 : boolean;
  signal nstate_1946_1888_buf_req_1 : boolean;
  signal nstate_1946_1888_buf_ack_1 : boolean;
  signal RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_inst_req_0 : boolean;
  signal RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_inst_ack_0 : boolean;
  signal RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_inst_req_1 : boolean;
  signal RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_inst_ack_1 : boolean;
  signal W_pc_1948_inst_req_0 : boolean;
  signal W_pc_1948_inst_ack_0 : boolean;
  signal W_pc_1948_inst_req_1 : boolean;
  signal W_pc_1948_inst_ack_1 : boolean;
  signal W_npc_1952_inst_req_0 : boolean;
  signal W_npc_1952_inst_ack_0 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "recv_ccu_debug_daemon_to_ccu_daemon_input_buffer", -- 
      buffer_size => 0,
      bypass_flag => true,
      data_width => tag_length + 0) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(tag_length-1 downto 0) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length-1 downto 0);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  recv_ccu_debug_daemon_to_ccu_daemon_CP_712_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "recv_ccu_debug_daemon_to_ccu_daemon_out_buffer", -- 
      buffer_size => 0,
      full_rate => false,
      data_width => tag_length + 96) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(31 downto 0) <= pc_buffer;
  pc <= out_buffer_data_out(31 downto 0);
  out_buffer_data_in(63 downto 32) <= npc_buffer;
  npc <= out_buffer_data_out(63 downto 32);
  out_buffer_data_in(95 downto 64) <= psr_buffer;
  psr <= out_buffer_data_out(95 downto 64);
  out_buffer_data_in(tag_length + 95 downto 96) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 95 downto 96);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  recv_ccu_debug_daemon_to_ccu_daemon_CP_712: Block -- control-path 
    signal recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements: BooleanArray(54 downto 0);
    -- 
  begin -- 
    recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(0) <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_start;
    recv_ccu_debug_daemon_to_ccu_daemon_CP_712_symbol <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(1);
    -- CP-element group 0:  transition  place  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	2 
    -- CP-element group 0:  members (4) 
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 branch_block_stmt_1883/$entry
      -- CP-element group 0: 	 branch_block_stmt_1883/branch_block_stmt_1883__entry__
      -- CP-element group 0: 	 branch_block_stmt_1883/do_while_stmt_1884__entry__
      -- 
    -- CP-element group 1:  transition  place  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	54 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (4) 
      -- CP-element group 1: 	 $exit
      -- CP-element group 1: 	 branch_block_stmt_1883/$exit
      -- CP-element group 1: 	 branch_block_stmt_1883/branch_block_stmt_1883__exit__
      -- CP-element group 1: 	 branch_block_stmt_1883/do_while_stmt_1884__exit__
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(1) <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(54);
    -- CP-element group 2:  transition  place  bypass  pipeline-parent 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	8 
    -- CP-element group 2:  members (2) 
      -- CP-element group 2: 	 branch_block_stmt_1883/do_while_stmt_1884/$entry
      -- CP-element group 2: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884__entry__
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(2) <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(0);
    -- CP-element group 3:  merge  place  bypass  pipeline-parent 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	54 
    -- CP-element group 3:  members (1) 
      -- CP-element group 3: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884__exit__
      -- 
    -- Element group recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(3) is bound as output of CP function.
    -- CP-element group 4:  merge  place  bypass  pipeline-parent 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	7 
    -- CP-element group 4:  members (1) 
      -- CP-element group 4: 	 branch_block_stmt_1883/do_while_stmt_1884/loop_back
      -- 
    -- Element group recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(4) is bound as output of CP function.
    -- CP-element group 5:  branch  transition  place  bypass  pipeline-parent 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	10 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	52 
    -- CP-element group 5: 	53 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 branch_block_stmt_1883/do_while_stmt_1884/loop_exit/$entry
      -- CP-element group 5: 	 branch_block_stmt_1883/do_while_stmt_1884/loop_taken/$entry
      -- CP-element group 5: 	 branch_block_stmt_1883/do_while_stmt_1884/condition_done
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(5) <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(10);
    -- CP-element group 6:  branch  place  bypass  pipeline-parent 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	51 
    -- CP-element group 6: successors 
    -- CP-element group 6:  members (1) 
      -- CP-element group 6: 	 branch_block_stmt_1883/do_while_stmt_1884/loop_body_done
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(6) <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(51);
    -- CP-element group 7:  transition  bypass  pipeline-parent 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	4 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	20 
    -- CP-element group 7:  members (1) 
      -- CP-element group 7: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/back_edge_to_loop_body
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(7) <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(4);
    -- CP-element group 8:  transition  bypass  pipeline-parent 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	2 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	22 
    -- CP-element group 8:  members (1) 
      -- CP-element group 8: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/first_time_through_loop_body
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(8) <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(2);
    -- CP-element group 9:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	11 
    -- CP-element group 9: 	16 
    -- CP-element group 9: 	17 
    -- CP-element group 9: 	33 
    -- CP-element group 9: 	50 
    -- CP-element group 9:  members (3) 
      -- CP-element group 9: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/$entry
      -- CP-element group 9: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/loop_body_start
      -- CP-element group 9: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1890_sample_start_
      -- 
    -- Element group recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(9) is bound as output of CP function.
    -- CP-element group 10:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	13 
    -- CP-element group 10: 	15 
    -- CP-element group 10: 	50 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	5 
    -- CP-element group 10:  members (1) 
      -- CP-element group 10: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/condition_evaluated
      -- 
    condition_evaluated_736_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " condition_evaluated_736_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(10), ack => do_while_stmt_1884_branch_req_0); -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_10: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 0);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_10"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(13) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(15) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(50);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_10 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(10), clk => clk, reset => reset); --
    end block;
    -- CP-element group 11:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	9 
    -- CP-element group 11: 	16 
    -- CP-element group 11: marked-predecessors 
    -- CP-element group 11: 	15 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	34 
    -- CP-element group 11:  members (2) 
      -- CP-element group 11: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/aggregated_phi_sample_req
      -- CP-element group 11: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1886_sample_start__ps
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_11: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 1);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_11"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(9) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(16) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(15);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_11 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(11), clk => clk, reset => reset); --
    end block;
    -- CP-element group 12:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	18 
    -- CP-element group 12: 	36 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	13 
    -- CP-element group 12: 	51 
    -- CP-element group 12: marked-successors 
    -- CP-element group 12: 	16 
    -- CP-element group 12:  members (3) 
      -- CP-element group 12: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/aggregated_phi_sample_ack
      -- CP-element group 12: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1886_sample_completed_
      -- CP-element group 12: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1890_sample_completed_
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_12: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_12"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(18) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(36);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_12 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(12), clk => clk, reset => reset); --
    end block;
    -- CP-element group 13:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	12 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	10 
    -- CP-element group 13:  members (1) 
      -- CP-element group 13: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/aggregated_phi_sample_ack_d
      -- 
    -- Element group recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(13) is a control-delay.
    cp_element_13_delay: control_delay_element  generic map(name => " 13_delay", delay_value => 1)  port map(req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(12), ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(13), clk => clk, reset =>reset);
    -- CP-element group 14:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	17 
    -- CP-element group 14: 	33 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	35 
    -- CP-element group 14:  members (2) 
      -- CP-element group 14: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/aggregated_phi_update_req
      -- CP-element group 14: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1886_update_start__ps
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_14: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_14"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(17) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(33);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_14 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(14), clk => clk, reset => reset); --
    end block;
    -- CP-element group 15:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	19 
    -- CP-element group 15: 	37 
    -- CP-element group 15: successors 
    -- CP-element group 15: 	10 
    -- CP-element group 15: marked-successors 
    -- CP-element group 15: 	11 
    -- CP-element group 15:  members (1) 
      -- CP-element group 15: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/aggregated_phi_update_ack
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_15: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_15"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(19) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(37);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_15 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(15), clk => clk, reset => reset); --
    end block;
    -- CP-element group 16:  join  transition  bypass  pipeline-parent 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	9 
    -- CP-element group 16: marked-predecessors 
    -- CP-element group 16: 	12 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	11 
    -- CP-element group 16:  members (1) 
      -- CP-element group 16: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1886_sample_start_
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_16: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_16"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(9) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(12);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_16 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(16), clk => clk, reset => reset); --
    end block;
    -- CP-element group 17:  join  transition  bypass  pipeline-parent 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	9 
    -- CP-element group 17: marked-predecessors 
    -- CP-element group 17: 	40 
    -- CP-element group 17: 	44 
    -- CP-element group 17: 	48 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	14 
    -- CP-element group 17:  members (1) 
      -- CP-element group 17: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1886_update_start_
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_17: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 1,1 => 1,2 => 1,3 => 1);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 0,1 => 1,2 => 1,3 => 1);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_17"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(9) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(40) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(44) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(48);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_17 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(17), clk => clk, reset => reset); --
    end block;
    -- CP-element group 18:  join  transition  bypass  pipeline-parent 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: successors 
    -- CP-element group 18: 	12 
    -- CP-element group 18:  members (1) 
      -- CP-element group 18: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1886_sample_completed__ps
      -- 
    -- Element group recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(18) is bound as output of CP function.
    -- CP-element group 19:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: successors 
    -- CP-element group 19: 	15 
    -- CP-element group 19: 	38 
    -- CP-element group 19: 	42 
    -- CP-element group 19: 	46 
    -- CP-element group 19:  members (2) 
      -- CP-element group 19: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1886_update_completed_
      -- CP-element group 19: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1886_update_completed__ps
      -- 
    -- Element group recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(19) is bound as output of CP function.
    -- CP-element group 20:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: 	7 
    -- CP-element group 20: successors 
    -- CP-element group 20:  members (1) 
      -- CP-element group 20: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1886_loopback_trigger
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(20) <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(7);
    -- CP-element group 21:  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: successors 
    -- CP-element group 21:  members (2) 
      -- CP-element group 21: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1886_loopback_sample_req
      -- CP-element group 21: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1886_loopback_sample_req_ps
      -- 
    phi_stmt_1886_loopback_sample_req_752_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1886_loopback_sample_req_752_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(21), ack => phi_stmt_1886_req_0); -- 
    -- Element group recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(21) is bound as output of CP function.
    -- CP-element group 22:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: 	8 
    -- CP-element group 22: successors 
    -- CP-element group 22:  members (1) 
      -- CP-element group 22: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1886_entry_trigger
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(22) <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(8);
    -- CP-element group 23:  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: successors 
    -- CP-element group 23:  members (2) 
      -- CP-element group 23: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1886_entry_sample_req
      -- CP-element group 23: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1886_entry_sample_req_ps
      -- 
    phi_stmt_1886_entry_sample_req_755_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1886_entry_sample_req_755_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(23), ack => phi_stmt_1886_req_1); -- 
    -- Element group recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(23) is bound as output of CP function.
    -- CP-element group 24:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: successors 
    -- CP-element group 24:  members (2) 
      -- CP-element group 24: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1886_phi_mux_ack
      -- CP-element group 24: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1886_phi_mux_ack_ps
      -- 
    phi_stmt_1886_phi_mux_ack_758_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 24_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_1886_ack_0, ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(24)); -- 
    -- CP-element group 25:  join  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: successors 
    -- CP-element group 25: 	27 
    -- CP-element group 25:  members (4) 
      -- CP-element group 25: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_nstate_1888_sample_start__ps
      -- CP-element group 25: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_nstate_1888_sample_start_
      -- CP-element group 25: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_nstate_1888_Sample/$entry
      -- CP-element group 25: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_nstate_1888_Sample/req
      -- 
    req_771_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_771_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(25), ack => nstate_1946_1888_buf_req_0); -- 
    -- Element group recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(25) is bound as output of CP function.
    -- CP-element group 26:  join  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: successors 
    -- CP-element group 26: 	28 
    -- CP-element group 26:  members (4) 
      -- CP-element group 26: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_nstate_1888_update_start__ps
      -- CP-element group 26: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_nstate_1888_update_start_
      -- CP-element group 26: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_nstate_1888_Update/$entry
      -- CP-element group 26: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_nstate_1888_Update/req
      -- 
    req_776_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_776_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(26), ack => nstate_1946_1888_buf_req_1); -- 
    -- Element group recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(26) is bound as output of CP function.
    -- CP-element group 27:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: 	25 
    -- CP-element group 27: successors 
    -- CP-element group 27:  members (4) 
      -- CP-element group 27: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_nstate_1888_sample_completed__ps
      -- CP-element group 27: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_nstate_1888_sample_completed_
      -- CP-element group 27: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_nstate_1888_Sample/$exit
      -- CP-element group 27: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_nstate_1888_Sample/ack
      -- 
    ack_772_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 27_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nstate_1946_1888_buf_ack_0, ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(27)); -- 
    -- CP-element group 28:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: 	26 
    -- CP-element group 28: successors 
    -- CP-element group 28:  members (4) 
      -- CP-element group 28: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_nstate_1888_update_completed__ps
      -- CP-element group 28: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_nstate_1888_update_completed_
      -- CP-element group 28: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_nstate_1888_Update/$exit
      -- CP-element group 28: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_nstate_1888_Update/ack
      -- 
    ack_777_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 28_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nstate_1946_1888_buf_ack_1, ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(28)); -- 
    -- CP-element group 29:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: successors 
    -- CP-element group 29:  members (4) 
      -- CP-element group 29: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_SKIP_CMD_1889_sample_start__ps
      -- CP-element group 29: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_SKIP_CMD_1889_sample_completed__ps
      -- CP-element group 29: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_SKIP_CMD_1889_sample_start_
      -- CP-element group 29: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_SKIP_CMD_1889_sample_completed_
      -- 
    -- Element group recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(29) is bound as output of CP function.
    -- CP-element group 30:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: successors 
    -- CP-element group 30: 	32 
    -- CP-element group 30:  members (2) 
      -- CP-element group 30: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_SKIP_CMD_1889_update_start__ps
      -- CP-element group 30: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_SKIP_CMD_1889_update_start_
      -- 
    -- Element group recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(30) is bound as output of CP function.
    -- CP-element group 31:  join  transition  bypass  pipeline-parent 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: 	32 
    -- CP-element group 31: successors 
    -- CP-element group 31:  members (1) 
      -- CP-element group 31: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_SKIP_CMD_1889_update_completed__ps
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(31) <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(32);
    -- CP-element group 32:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	30 
    -- CP-element group 32: successors 
    -- CP-element group 32: 	31 
    -- CP-element group 32:  members (1) 
      -- CP-element group 32: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/R_SKIP_CMD_1889_update_completed_
      -- 
    -- Element group recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(32) is a control-delay.
    cp_element_32_delay: control_delay_element  generic map(name => " 32_delay", delay_value => 1)  port map(req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(30), ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(32), clk => clk, reset =>reset);
    -- CP-element group 33:  join  transition  bypass  pipeline-parent 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: 	9 
    -- CP-element group 33: marked-predecessors 
    -- CP-element group 33: 	40 
    -- CP-element group 33: 	44 
    -- CP-element group 33: 	48 
    -- CP-element group 33: successors 
    -- CP-element group 33: 	14 
    -- CP-element group 33:  members (1) 
      -- CP-element group 33: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1890_update_start_
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_33: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 1,1 => 1,2 => 1,3 => 1);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 0,1 => 1,2 => 1,3 => 1);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_33"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(9) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(40) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(44) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(48);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_33 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(33), clk => clk, reset => reset); --
    end block;
    -- CP-element group 34:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: 	11 
    -- CP-element group 34: marked-predecessors 
    -- CP-element group 34: 	37 
    -- CP-element group 34: successors 
    -- CP-element group 34: 	36 
    -- CP-element group 34:  members (3) 
      -- CP-element group 34: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_sample_start_
      -- CP-element group 34: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_Sample/$entry
      -- CP-element group 34: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_Sample/rr
      -- 
    rr_798_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_798_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(34), ack => RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_inst_req_0); -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_34: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_34"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(11) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(37);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_34 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(34), clk => clk, reset => reset); --
    end block;
    -- CP-element group 35:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: 	14 
    -- CP-element group 35: 	36 
    -- CP-element group 35: successors 
    -- CP-element group 35: 	37 
    -- CP-element group 35:  members (3) 
      -- CP-element group 35: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_update_start_
      -- CP-element group 35: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_Update/$entry
      -- CP-element group 35: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_Update/cr
      -- 
    cr_803_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_803_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(35), ack => RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_inst_req_1); -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_35: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_35"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(14) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(36);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_35 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(35), clk => clk, reset => reset); --
    end block;
    -- CP-element group 36:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: 	34 
    -- CP-element group 36: successors 
    -- CP-element group 36: 	12 
    -- CP-element group 36: 	35 
    -- CP-element group 36:  members (3) 
      -- CP-element group 36: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_sample_completed_
      -- CP-element group 36: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_Sample/$exit
      -- CP-element group 36: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_Sample/ra
      -- 
    ra_799_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 36_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_inst_ack_0, ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(36)); -- 
    -- CP-element group 37:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: 	35 
    -- CP-element group 37: successors 
    -- CP-element group 37: 	15 
    -- CP-element group 37: 	38 
    -- CP-element group 37: 	42 
    -- CP-element group 37: 	46 
    -- CP-element group 37: marked-successors 
    -- CP-element group 37: 	34 
    -- CP-element group 37:  members (4) 
      -- CP-element group 37: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/phi_stmt_1890_update_completed_
      -- CP-element group 37: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_update_completed_
      -- CP-element group 37: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_Update/$exit
      -- CP-element group 37: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_Update/ca
      -- 
    ca_804_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 37_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_inst_ack_1, ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(37)); -- 
    -- CP-element group 38:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 38: predecessors 
    -- CP-element group 38: 	19 
    -- CP-element group 38: 	37 
    -- CP-element group 38: successors 
    -- CP-element group 38: 	40 
    -- CP-element group 38:  members (3) 
      -- CP-element group 38: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1950_sample_start_
      -- CP-element group 38: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1950_Sample/$entry
      -- CP-element group 38: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1950_Sample/req
      -- 
    req_812_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_812_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(38), ack => W_pc_1948_inst_req_0); -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_38: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_38"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(19) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(37);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_38 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(38), clk => clk, reset => reset); --
    end block;
    -- CP-element group 39:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 39: predecessors 
    -- CP-element group 39: marked-predecessors 
    -- CP-element group 39: 	41 
    -- CP-element group 39: successors 
    -- CP-element group 39: 	41 
    -- CP-element group 39:  members (3) 
      -- CP-element group 39: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1950_update_start_
      -- CP-element group 39: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1950_Update/$entry
      -- CP-element group 39: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1950_Update/req
      -- 
    req_817_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_817_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(39), ack => W_pc_1948_inst_req_1); -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_39: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_39"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(41);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_39 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(39), clk => clk, reset => reset); --
    end block;
    -- CP-element group 40:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 40: predecessors 
    -- CP-element group 40: 	38 
    -- CP-element group 40: successors 
    -- CP-element group 40: marked-successors 
    -- CP-element group 40: 	17 
    -- CP-element group 40: 	33 
    -- CP-element group 40:  members (3) 
      -- CP-element group 40: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1950_sample_completed_
      -- CP-element group 40: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1950_Sample/$exit
      -- CP-element group 40: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1950_Sample/ack
      -- 
    ack_813_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 40_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_pc_1948_inst_ack_0, ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(40)); -- 
    -- CP-element group 41:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 41: predecessors 
    -- CP-element group 41: 	39 
    -- CP-element group 41: successors 
    -- CP-element group 41: 	51 
    -- CP-element group 41: marked-successors 
    -- CP-element group 41: 	39 
    -- CP-element group 41:  members (3) 
      -- CP-element group 41: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1950_update_completed_
      -- CP-element group 41: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1950_Update/$exit
      -- CP-element group 41: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1950_Update/ack
      -- 
    ack_818_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 41_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_pc_1948_inst_ack_1, ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(41)); -- 
    -- CP-element group 42:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 42: predecessors 
    -- CP-element group 42: 	19 
    -- CP-element group 42: 	37 
    -- CP-element group 42: successors 
    -- CP-element group 42: 	44 
    -- CP-element group 42:  members (3) 
      -- CP-element group 42: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1954_sample_start_
      -- CP-element group 42: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1954_Sample/$entry
      -- CP-element group 42: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1954_Sample/req
      -- 
    req_826_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_826_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(42), ack => W_npc_1952_inst_req_0); -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_42: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_42"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(19) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(37);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_42 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(42), clk => clk, reset => reset); --
    end block;
    -- CP-element group 43:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 43: predecessors 
    -- CP-element group 43: marked-predecessors 
    -- CP-element group 43: 	45 
    -- CP-element group 43: successors 
    -- CP-element group 43: 	45 
    -- CP-element group 43:  members (3) 
      -- CP-element group 43: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1954_Update/req
      -- CP-element group 43: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1954_Update/$entry
      -- CP-element group 43: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1954_update_start_
      -- 
    req_831_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_831_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(43), ack => W_npc_1952_inst_req_1); -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_43: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_43"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(45);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_43 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(43), clk => clk, reset => reset); --
    end block;
    -- CP-element group 44:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 44: predecessors 
    -- CP-element group 44: 	42 
    -- CP-element group 44: successors 
    -- CP-element group 44: marked-successors 
    -- CP-element group 44: 	17 
    -- CP-element group 44: 	33 
    -- CP-element group 44:  members (3) 
      -- CP-element group 44: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1954_sample_completed_
      -- CP-element group 44: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1954_Sample/$exit
      -- CP-element group 44: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1954_Sample/ack
      -- 
    ack_827_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 44_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_npc_1952_inst_ack_0, ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(44)); -- 
    -- CP-element group 45:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 45: predecessors 
    -- CP-element group 45: 	43 
    -- CP-element group 45: successors 
    -- CP-element group 45: 	51 
    -- CP-element group 45: marked-successors 
    -- CP-element group 45: 	43 
    -- CP-element group 45:  members (3) 
      -- CP-element group 45: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1954_Update/ack
      -- CP-element group 45: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1954_Update/$exit
      -- CP-element group 45: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1954_update_completed_
      -- 
    ack_832_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 45_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_npc_1952_inst_ack_1, ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(45)); -- 
    -- CP-element group 46:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 46: predecessors 
    -- CP-element group 46: 	19 
    -- CP-element group 46: 	37 
    -- CP-element group 46: successors 
    -- CP-element group 46: 	48 
    -- CP-element group 46:  members (3) 
      -- CP-element group 46: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1958_Sample/$entry
      -- CP-element group 46: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1958_sample_start_
      -- CP-element group 46: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1958_Sample/req
      -- 
    req_840_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_840_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(46), ack => W_psr_1956_inst_req_0); -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_46: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_46"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(19) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(37);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_46 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(46), clk => clk, reset => reset); --
    end block;
    -- CP-element group 47:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 47: predecessors 
    -- CP-element group 47: marked-predecessors 
    -- CP-element group 47: 	49 
    -- CP-element group 47: successors 
    -- CP-element group 47: 	49 
    -- CP-element group 47:  members (3) 
      -- CP-element group 47: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1958_Update/req
      -- CP-element group 47: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1958_Update/$entry
      -- CP-element group 47: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1958_update_start_
      -- 
    req_845_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_845_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(47), ack => W_psr_1956_inst_req_1); -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_47: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_47"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(49);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_47 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(47), clk => clk, reset => reset); --
    end block;
    -- CP-element group 48:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 48: predecessors 
    -- CP-element group 48: 	46 
    -- CP-element group 48: successors 
    -- CP-element group 48: marked-successors 
    -- CP-element group 48: 	17 
    -- CP-element group 48: 	33 
    -- CP-element group 48:  members (3) 
      -- CP-element group 48: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1958_Sample/$exit
      -- CP-element group 48: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1958_sample_completed_
      -- CP-element group 48: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1958_Sample/ack
      -- 
    ack_841_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 48_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_psr_1956_inst_ack_0, ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(48)); -- 
    -- CP-element group 49:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 49: predecessors 
    -- CP-element group 49: 	47 
    -- CP-element group 49: successors 
    -- CP-element group 49: 	51 
    -- CP-element group 49: marked-successors 
    -- CP-element group 49: 	47 
    -- CP-element group 49:  members (3) 
      -- CP-element group 49: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1958_Update/ack
      -- CP-element group 49: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1958_update_completed_
      -- CP-element group 49: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/assign_stmt_1958_Update/$exit
      -- 
    ack_846_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 49_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_psr_1956_inst_ack_1, ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(49)); -- 
    -- CP-element group 50:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 50: predecessors 
    -- CP-element group 50: 	9 
    -- CP-element group 50: successors 
    -- CP-element group 50: 	10 
    -- CP-element group 50:  members (1) 
      -- CP-element group 50: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/loop_body_delay_to_condition_start
      -- 
    -- Element group recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(50) is a control-delay.
    cp_element_50_delay: control_delay_element  generic map(name => " 50_delay", delay_value => 1)  port map(req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(9), ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(50), clk => clk, reset =>reset);
    -- CP-element group 51:  join  transition  bypass  pipeline-parent 
    -- CP-element group 51: predecessors 
    -- CP-element group 51: 	12 
    -- CP-element group 51: 	41 
    -- CP-element group 51: 	45 
    -- CP-element group 51: 	49 
    -- CP-element group 51: successors 
    -- CP-element group 51: 	6 
    -- CP-element group 51:  members (1) 
      -- CP-element group 51: 	 branch_block_stmt_1883/do_while_stmt_1884/do_while_stmt_1884_loop_body/$exit
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_51: block -- 
      constant place_capacities: IntegerArray(0 to 3) := (0 => 3,1 => 3,2 => 3,3 => 3);
      constant place_markings: IntegerArray(0 to 3)  := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant place_delays: IntegerArray(0 to 3) := (0 => 0,1 => 0,2 => 0,3 => 0);
      constant joinName: string(1 to 55) := "recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_51"; 
      signal preds: BooleanArray(1 to 4); -- 
    begin -- 
      preds <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(12) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(41) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(45) & recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(49);
      gj_recv_ccu_debug_daemon_to_ccu_daemon_cp_element_group_51 : generic_join generic map(name => joinName, number_of_predecessors => 4, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(51), clk => clk, reset => reset); --
    end block;
    -- CP-element group 52:  transition  input  bypass  pipeline-parent 
    -- CP-element group 52: predecessors 
    -- CP-element group 52: 	5 
    -- CP-element group 52: successors 
    -- CP-element group 52:  members (2) 
      -- CP-element group 52: 	 branch_block_stmt_1883/do_while_stmt_1884/loop_exit/$exit
      -- CP-element group 52: 	 branch_block_stmt_1883/do_while_stmt_1884/loop_exit/ack
      -- 
    ack_851_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 52_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => do_while_stmt_1884_branch_ack_0, ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(52)); -- 
    -- CP-element group 53:  transition  input  bypass  pipeline-parent 
    -- CP-element group 53: predecessors 
    -- CP-element group 53: 	5 
    -- CP-element group 53: successors 
    -- CP-element group 53:  members (2) 
      -- CP-element group 53: 	 branch_block_stmt_1883/do_while_stmt_1884/loop_taken/ack
      -- CP-element group 53: 	 branch_block_stmt_1883/do_while_stmt_1884/loop_taken/$exit
      -- 
    ack_855_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 53_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => do_while_stmt_1884_branch_ack_1, ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(53)); -- 
    -- CP-element group 54:  transition  bypass  pipeline-parent 
    -- CP-element group 54: predecessors 
    -- CP-element group 54: 	3 
    -- CP-element group 54: successors 
    -- CP-element group 54: 	1 
    -- CP-element group 54:  members (1) 
      -- CP-element group 54: 	 branch_block_stmt_1883/do_while_stmt_1884/$exit
      -- 
    recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(54) <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(3);
    recv_ccu_debug_daemon_to_ccu_daemon_do_while_stmt_1884_terminator_856: loop_terminator -- 
      generic map (name => " recv_ccu_debug_daemon_to_ccu_daemon_do_while_stmt_1884_terminator_856", max_iterations_in_flight =>3) 
      port map(loop_body_exit => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(6),loop_continue => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(53),loop_terminate => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(52),loop_back => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(4),loop_exit => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(3),clk => clk, reset => reset); -- 
    phi_stmt_1886_phi_seq_786_block : block -- 
      signal triggers, src_sample_reqs, src_sample_acks, src_update_reqs, src_update_acks : BooleanArray(0 to 1);
      signal phi_mux_reqs : BooleanArray(0 to 1); -- 
    begin -- 
      triggers(0)  <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(20);
      recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(25)<= src_sample_reqs(0);
      src_sample_acks(0)  <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(27);
      recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(26)<= src_update_reqs(0);
      src_update_acks(0)  <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(28);
      recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(21) <= phi_mux_reqs(0);
      triggers(1)  <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(22);
      recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(29)<= src_sample_reqs(1);
      src_sample_acks(1)  <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(29);
      recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(30)<= src_update_reqs(1);
      src_update_acks(1)  <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(31);
      recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(23) <= phi_mux_reqs(1);
      phi_stmt_1886_phi_seq_786 : phi_sequencer_v2-- 
        generic map (place_capacity => 3, ntriggers => 2, name => "phi_stmt_1886_phi_seq_786") 
        port map ( -- 
          triggers => triggers, src_sample_starts => src_sample_reqs, 
          src_sample_completes => src_sample_acks, src_update_starts => src_update_reqs, 
          src_update_completes => src_update_acks,
          phi_mux_select_reqs => phi_mux_reqs, 
          phi_sample_req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(11), 
          phi_sample_ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(18), 
          phi_update_req => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(14), 
          phi_update_ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(19), 
          phi_mux_ack => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(24), 
          clk => clk, reset => reset -- 
        );
        -- 
    end block;
    entry_tmerge_737_block : block -- 
      signal preds : BooleanArray(0 to 1);
      begin -- 
        preds(0)  <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(7);
        preds(1)  <= recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(8);
        entry_tmerge_737 : transition_merge -- 
          generic map(name => " entry_tmerge_737")
          port map (preds => preds, symbol_out => recv_ccu_debug_daemon_to_ccu_daemon_CP_712_elements(9));
          -- 
    end block;
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal EQ_u2_u1_1929_wire : std_logic_vector(0 downto 0);
    signal MUX_1933_wire : std_logic_vector(1 downto 0);
    signal MUX_1935_wire : std_logic_vector(1 downto 0);
    signal MUX_1939_wire : std_logic_vector(1 downto 0);
    signal MUX_1944_wire : std_logic_vector(1 downto 0);
    signal NEQ_u8_u1_1901_wire : std_logic_vector(0 downto 0);
    signal NEQ_u8_u1_1904_wire : std_logic_vector(0 downto 0);
    signal OR_u2_u2_1940_wire : std_logic_vector(1 downto 0);
    signal RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_wire : std_logic_vector(31 downto 0);
    signal R_GDB_DBG_CONTINUE_1900_wire_constant : std_logic_vector(7 downto 0);
    signal R_GDB_DBG_DETACH_1903_wire_constant : std_logic_vector(7 downto 0);
    signal R_GET_NPC_1914_wire_constant : std_logic_vector(1 downto 0);
    signal R_GET_NPC_1937_wire_constant : std_logic_vector(1 downto 0);
    signal R_GET_PC_1909_wire_constant : std_logic_vector(1 downto 0);
    signal R_GET_PC_1932_wire_constant : std_logic_vector(1 downto 0);
    signal R_GET_PSR_1919_wire_constant : std_logic_vector(1 downto 0);
    signal R_GET_PSR_1942_wire_constant : std_logic_vector(1 downto 0);
    signal R_SKIP_CMD_1889_wire_constant : std_logic_vector(1 downto 0);
    signal R_SKIP_CMD_1928_wire_constant : std_logic_vector(1 downto 0);
    signal R_SKIP_CMD_1931_wire_constant : std_logic_vector(1 downto 0);
    signal ccu_dbg_msg_1890 : std_logic_vector(31 downto 0);
    signal continue_flag_1925 : std_logic_vector(0 downto 0);
    signal konst_1934_wire_constant : std_logic_vector(1 downto 0);
    signal konst_1938_wire_constant : std_logic_vector(1 downto 0);
    signal konst_1943_wire_constant : std_logic_vector(1 downto 0);
    signal load_npc_1916 : std_logic_vector(0 downto 0);
    signal load_pc_1911 : std_logic_vector(0 downto 0);
    signal load_psr_1921 : std_logic_vector(0 downto 0);
    signal nstate_1946 : std_logic_vector(1 downto 0);
    signal nstate_1946_1888_buffered : std_logic_vector(1 downto 0);
    signal op_code_1897 : std_logic_vector(7 downto 0);
    signal read_next_1906 : std_logic_vector(0 downto 0);
    signal state_1886 : std_logic_vector(1 downto 0);
    -- 
  begin -- 
    R_GDB_DBG_CONTINUE_1900_wire_constant <= "00010000";
    R_GDB_DBG_DETACH_1903_wire_constant <= "00001111";
    R_GET_NPC_1914_wire_constant <= "10";
    R_GET_NPC_1937_wire_constant <= "10";
    R_GET_PC_1909_wire_constant <= "01";
    R_GET_PC_1932_wire_constant <= "01";
    R_GET_PSR_1919_wire_constant <= "11";
    R_GET_PSR_1942_wire_constant <= "11";
    R_SKIP_CMD_1889_wire_constant <= "00";
    R_SKIP_CMD_1928_wire_constant <= "00";
    R_SKIP_CMD_1931_wire_constant <= "00";
    konst_1934_wire_constant <= "00";
    konst_1938_wire_constant <= "00";
    konst_1943_wire_constant <= "00";
    phi_stmt_1886: Block -- phi operator 
      signal idata: std_logic_vector(3 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= nstate_1946_1888_buffered & R_SKIP_CMD_1889_wire_constant;
      req <= phi_stmt_1886_req_0 & phi_stmt_1886_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_1886",
          num_reqs => 2,
          bypass_flag => true,
          data_width => 2) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_1886_ack_0,
          idata => idata,
          odata => state_1886,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_1886
    -- flow-through select operator MUX_1933_inst
    MUX_1933_wire <= R_SKIP_CMD_1931_wire_constant when (read_next_1906(0) /=  '0') else R_GET_PC_1932_wire_constant;
    -- flow-through select operator MUX_1935_inst
    MUX_1935_wire <= MUX_1933_wire when (EQ_u2_u1_1929_wire(0) /=  '0') else konst_1934_wire_constant;
    -- flow-through select operator MUX_1939_inst
    MUX_1939_wire <= R_GET_NPC_1937_wire_constant when (load_pc_1911(0) /=  '0') else konst_1938_wire_constant;
    -- flow-through select operator MUX_1944_inst
    MUX_1944_wire <= R_GET_PSR_1942_wire_constant when (load_npc_1916(0) /=  '0') else konst_1943_wire_constant;
    -- flow-through slice operator slice_1896_inst
    op_code_1897 <= ccu_dbg_msg_1890(23 downto 16);
    W_npc_1952_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      signal wreq_ug, wack_ug, rreq_ug, rack_ug: BooleanArray(0 downto 0); 
      signal guard_vector : std_logic_vector(0 downto 0); 
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => true);
      -- 
    begin -- 
      wreq_ug(0) <= W_npc_1952_inst_req_0;
      W_npc_1952_inst_ack_0<= wack_ug(0);
      rreq_ug(0) <= W_npc_1952_inst_req_1;
      W_npc_1952_inst_ack_1<= rack_ug(0);
      guard_vector(0) <=  load_npc_1916(0);
      W_npc_1952_inst_gI: SplitGuardInterface generic map(name => "W_npc_1952_inst_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => wreq_ug,
        sr_out => wreq,
        sa_in => wack,
        sa_out => wack_ug,
        cr_in => rreq_ug,
        cr_out => rreq,
        ca_in => rack,
        ca_out => rack_ug,
        guards => guard_vector); -- 
      W_npc_1952_inst : InterlockBuffer generic map ( -- 
        name => "W_npc_1952_inst",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => ccu_dbg_msg_1890,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => npc_buffer,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_pc_1948_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      signal wreq_ug, wack_ug, rreq_ug, rack_ug: BooleanArray(0 downto 0); 
      signal guard_vector : std_logic_vector(0 downto 0); 
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => true);
      -- 
    begin -- 
      wreq_ug(0) <= W_pc_1948_inst_req_0;
      W_pc_1948_inst_ack_0<= wack_ug(0);
      rreq_ug(0) <= W_pc_1948_inst_req_1;
      W_pc_1948_inst_ack_1<= rack_ug(0);
      guard_vector(0) <=  load_pc_1911(0);
      W_pc_1948_inst_gI: SplitGuardInterface generic map(name => "W_pc_1948_inst_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => wreq_ug,
        sr_out => wreq,
        sa_in => wack,
        sa_out => wack_ug,
        cr_in => rreq_ug,
        cr_out => rreq,
        ca_in => rack,
        ca_out => rack_ug,
        guards => guard_vector); -- 
      W_pc_1948_inst : InterlockBuffer generic map ( -- 
        name => "W_pc_1948_inst",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => ccu_dbg_msg_1890,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => pc_buffer,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_psr_1956_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      signal wreq_ug, wack_ug, rreq_ug, rack_ug: BooleanArray(0 downto 0); 
      signal guard_vector : std_logic_vector(0 downto 0); 
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => true);
      -- 
    begin -- 
      wreq_ug(0) <= W_psr_1956_inst_req_0;
      W_psr_1956_inst_ack_0<= wack_ug(0);
      rreq_ug(0) <= W_psr_1956_inst_req_1;
      W_psr_1956_inst_ack_1<= rack_ug(0);
      guard_vector(0) <=  load_psr_1921(0);
      W_psr_1956_inst_gI: SplitGuardInterface generic map(name => "W_psr_1956_inst_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => wreq_ug,
        sr_out => wreq,
        sa_in => wack,
        sa_out => wack_ug,
        cr_in => rreq_ug,
        cr_out => rreq,
        ca_in => rack,
        ca_out => rack_ug,
        guards => guard_vector); -- 
      W_psr_1956_inst : InterlockBuffer generic map ( -- 
        name => "W_psr_1956_inst",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => ccu_dbg_msg_1890,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => psr_buffer,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    nstate_1946_1888_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= nstate_1946_1888_buf_req_0;
      nstate_1946_1888_buf_ack_0<= wack(0);
      rreq(0) <= nstate_1946_1888_buf_req_1;
      nstate_1946_1888_buf_ack_1<= rack(0);
      nstate_1946_1888_buf : InterlockBuffer generic map ( -- 
        name => "nstate_1946_1888_buf",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 2,
        out_data_width => 2,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => nstate_1946,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => nstate_1946_1888_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    -- interlock ssrc_phi_stmt_1890
    process(RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 31 downto 0) := RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_wire(31 downto 0);
      ccu_dbg_msg_1890 <= tmp_var; -- 
    end process;
    do_while_stmt_1884_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= continue_flag_1925;
      branch_instance: BranchBase -- 
        generic map( name => "do_while_stmt_1884_branch", condition_width => 1,  bypass_flag => true)
        port map( -- 
          condition => condition_sig,
          req => do_while_stmt_1884_branch_req_0,
          ack0 => do_while_stmt_1884_branch_ack_0,
          ack1 => do_while_stmt_1884_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    -- flow through binary operator AND_u1_u1_1905_inst
    read_next_1906 <= (NEQ_u8_u1_1901_wire and NEQ_u8_u1_1904_wire);
    -- flow through binary operator EQ_u2_u1_1910_inst
    process(state_1886) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(state_1886, R_GET_PC_1909_wire_constant, tmp_var);
      load_pc_1911 <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u2_u1_1915_inst
    process(state_1886) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(state_1886, R_GET_NPC_1914_wire_constant, tmp_var);
      load_npc_1916 <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u2_u1_1920_inst
    process(state_1886) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(state_1886, R_GET_PSR_1919_wire_constant, tmp_var);
      load_psr_1921 <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u2_u1_1929_inst
    process(state_1886) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(state_1886, R_SKIP_CMD_1928_wire_constant, tmp_var);
      EQ_u2_u1_1929_wire <= tmp_var; --
    end process;
    -- flow through binary operator NEQ_u8_u1_1901_inst
    process(op_code_1897) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntNe_proc(op_code_1897, R_GDB_DBG_CONTINUE_1900_wire_constant, tmp_var);
      NEQ_u8_u1_1901_wire <= tmp_var; --
    end process;
    -- flow through binary operator NEQ_u8_u1_1904_inst
    process(op_code_1897) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntNe_proc(op_code_1897, R_GDB_DBG_DETACH_1903_wire_constant, tmp_var);
      NEQ_u8_u1_1904_wire <= tmp_var; --
    end process;
    -- unary operator NOT_u1_u1_1924_inst
    process(load_psr_1921) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", load_psr_1921, tmp_var);
      continue_flag_1925 <= tmp_var; -- 
    end process;
    -- flow through binary operator OR_u2_u2_1940_inst
    OR_u2_u2_1940_wire <= (MUX_1935_wire or MUX_1939_wire);
    -- flow through binary operator OR_u2_u2_1945_inst
    nstate_1946 <= (OR_u2_u2_1940_wire or MUX_1944_wire);
    -- shared inport operator group (0) : RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_inst 
    InportGroup_0: Block -- 
      signal data_out: std_logic_vector(31 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 0 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_inst_req_0;
      RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_inst_req_1;
      RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      RPIPE_ccu_debug_daemon_to_ccu_daemon_1892_wire <= data_out(31 downto 0);
      ccu_debug_daemon_to_ccu_daemon_read_0_gI: SplitGuardInterface generic map(name => "ccu_debug_daemon_to_ccu_daemon_read_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      ccu_debug_daemon_to_ccu_daemon_read_0: InputPortRevised -- 
        generic map ( name => "ccu_debug_daemon_to_ccu_daemon_read_0", data_width => 32,  num_reqs => 1,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => ccu_debug_daemon_to_ccu_daemon_pipe_read_req(0),
          oack => ccu_debug_daemon_to_ccu_daemon_pipe_read_ack(0),
          odata => ccu_debug_daemon_to_ccu_daemon_pipe_read_data(31 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 0
    -- 
  end Block; -- data_path
  -- 
end recv_ccu_debug_daemon_to_ccu_daemon_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity reset_dcache_icache_mmu is -- 
  generic (tag_length : integer); 
  port ( -- 
    DCACHE_to_CPU_reset_ack_pipe_read_req : out  std_logic_vector(0 downto 0);
    DCACHE_to_CPU_reset_ack_pipe_read_ack : in   std_logic_vector(0 downto 0);
    DCACHE_to_CPU_reset_ack_pipe_read_data : in   std_logic_vector(0 downto 0);
    ICACHE_to_CPU_reset_ack_pipe_read_req : out  std_logic_vector(0 downto 0);
    ICACHE_to_CPU_reset_ack_pipe_read_ack : in   std_logic_vector(0 downto 0);
    ICACHE_to_CPU_reset_ack_pipe_read_data : in   std_logic_vector(0 downto 0);
    MMU_to_CPU_reset_ack_pipe_read_req : out  std_logic_vector(0 downto 0);
    MMU_to_CPU_reset_ack_pipe_read_ack : in   std_logic_vector(0 downto 0);
    MMU_to_CPU_reset_ack_pipe_read_data : in   std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_DCACHE_reset_pipe_write_req : out  std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_DCACHE_reset_pipe_write_ack : in   std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_DCACHE_reset_pipe_write_data : out  std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_ICACHE_reset_pipe_write_req : out  std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_ICACHE_reset_pipe_write_ack : in   std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_ICACHE_reset_pipe_write_data : out  std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_MMU_reset_pipe_write_req : out  std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_MMU_reset_pipe_write_ack : in   std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_MMU_reset_pipe_write_data : out  std_logic_vector(0 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity reset_dcache_icache_mmu;
architecture reset_dcache_icache_mmu_arch of reset_dcache_icache_mmu is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  -- output port buffer signals
  signal reset_dcache_icache_mmu_CP_388_start: Boolean;
  signal reset_dcache_icache_mmu_CP_388_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_inst_ack_0 : boolean;
  signal WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_inst_req_1 : boolean;
  signal WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_inst_req_0 : boolean;
  signal WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_inst_ack_1 : boolean;
  signal RPIPE_MMU_to_CPU_reset_ack_1489_inst_req_1 : boolean;
  signal WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_inst_req_1 : boolean;
  signal RPIPE_DCACHE_to_CPU_reset_ack_1501_inst_req_1 : boolean;
  signal RPIPE_MMU_to_CPU_reset_ack_1489_inst_req_0 : boolean;
  signal WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_inst_req_0 : boolean;
  signal WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_inst_ack_0 : boolean;
  signal RPIPE_MMU_to_CPU_reset_ack_1489_inst_ack_0 : boolean;
  signal RPIPE_MMU_to_CPU_reset_ack_1489_inst_ack_1 : boolean;
  signal RPIPE_DCACHE_to_CPU_reset_ack_1501_inst_ack_1 : boolean;
  signal RPIPE_DCACHE_to_CPU_reset_ack_1501_inst_ack_0 : boolean;
  signal RPIPE_DCACHE_to_CPU_reset_ack_1501_inst_req_0 : boolean;
  signal WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_inst_ack_1 : boolean;
  signal RPIPE_ICACHE_to_CPU_reset_ack_1495_inst_ack_1 : boolean;
  signal RPIPE_ICACHE_to_CPU_reset_ack_1495_inst_req_1 : boolean;
  signal RPIPE_ICACHE_to_CPU_reset_ack_1495_inst_ack_0 : boolean;
  signal RPIPE_ICACHE_to_CPU_reset_ack_1495_inst_req_0 : boolean;
  signal WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_inst_ack_1 : boolean;
  signal WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_inst_req_1 : boolean;
  signal WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_inst_ack_0 : boolean;
  signal WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_inst_req_0 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "reset_dcache_icache_mmu_input_buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      data_width => tag_length + 0) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(tag_length-1 downto 0) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length-1 downto 0);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  reset_dcache_icache_mmu_CP_388_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "reset_dcache_icache_mmu_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 0) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(tag_length-1 downto 0) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length-1 downto 0);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= reset_dcache_icache_mmu_CP_388_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= reset_dcache_icache_mmu_CP_388_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= reset_dcache_icache_mmu_CP_388_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  reset_dcache_icache_mmu_CP_388: Block -- control-path 
    signal reset_dcache_icache_mmu_CP_388_elements: BooleanArray(13 downto 0);
    -- 
  begin -- 
    reset_dcache_icache_mmu_CP_388_elements(0) <= reset_dcache_icache_mmu_CP_388_start;
    reset_dcache_icache_mmu_CP_388_symbol <= reset_dcache_icache_mmu_CP_388_elements(13);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	3 
    -- CP-element group 0: 	5 
    -- CP-element group 0: 	7 
    -- CP-element group 0: 	9 
    -- CP-element group 0: 	11 
    -- CP-element group 0:  members (20) 
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/$entry
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_DCACHE_to_CPU_reset_ack_1501_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_MMU_to_CPU_reset_ack_1489_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_Sample/req
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_MMU_to_CPU_reset_ack_1489_Sample/rr
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_Sample/req
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_DCACHE_to_CPU_reset_ack_1501_sample_start_
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_MMU_to_CPU_reset_ack_1489_sample_start_
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_sample_start_
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_DCACHE_to_CPU_reset_ack_1501_Sample/rr
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_sample_start_
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_sample_start_
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_ICACHE_to_CPU_reset_ack_1495_Sample/rr
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_ICACHE_to_CPU_reset_ack_1495_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_ICACHE_to_CPU_reset_ack_1495_sample_start_
      -- CP-element group 0: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_Sample/req
      -- 
    req_401_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_401_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_dcache_icache_mmu_CP_388_elements(0), ack => WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_inst_req_0); -- 
    rr_415_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_415_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_dcache_icache_mmu_CP_388_elements(0), ack => RPIPE_MMU_to_CPU_reset_ack_1489_inst_req_0); -- 
    req_429_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_429_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_dcache_icache_mmu_CP_388_elements(0), ack => WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_inst_req_0); -- 
    rr_443_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_443_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_dcache_icache_mmu_CP_388_elements(0), ack => RPIPE_ICACHE_to_CPU_reset_ack_1495_inst_req_0); -- 
    req_457_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_457_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_dcache_icache_mmu_CP_388_elements(0), ack => WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_inst_req_0); -- 
    rr_471_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_471_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_dcache_icache_mmu_CP_388_elements(0), ack => RPIPE_DCACHE_to_CPU_reset_ack_1501_inst_req_0); -- 
    -- CP-element group 1:  transition  input  output  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1: 	2 
    -- CP-element group 1:  members (6) 
      -- CP-element group 1: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_sample_completed_
      -- CP-element group 1: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_Sample/ack
      -- CP-element group 1: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_update_start_
      -- CP-element group 1: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_Update/req
      -- CP-element group 1: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_Update/$entry
      -- 
    ack_402_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_inst_ack_0, ack => reset_dcache_icache_mmu_CP_388_elements(1)); -- 
    req_406_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_406_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_dcache_icache_mmu_CP_388_elements(1), ack => WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_inst_req_1); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	1 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	13 
    -- CP-element group 2:  members (3) 
      -- CP-element group 2: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_update_completed_
      -- CP-element group 2: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_Update/ack
      -- CP-element group 2: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_Update/$exit
      -- 
    ack_407_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_inst_ack_1, ack => reset_dcache_icache_mmu_CP_388_elements(2)); -- 
    -- CP-element group 3:  transition  input  output  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	0 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	4 
    -- CP-element group 3:  members (6) 
      -- CP-element group 3: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_MMU_to_CPU_reset_ack_1489_Update/$entry
      -- CP-element group 3: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_MMU_to_CPU_reset_ack_1489_Update/cr
      -- CP-element group 3: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_MMU_to_CPU_reset_ack_1489_Sample/ra
      -- CP-element group 3: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_MMU_to_CPU_reset_ack_1489_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_MMU_to_CPU_reset_ack_1489_sample_completed_
      -- CP-element group 3: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_MMU_to_CPU_reset_ack_1489_update_start_
      -- 
    ra_416_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_MMU_to_CPU_reset_ack_1489_inst_ack_0, ack => reset_dcache_icache_mmu_CP_388_elements(3)); -- 
    cr_420_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_420_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_dcache_icache_mmu_CP_388_elements(3), ack => RPIPE_MMU_to_CPU_reset_ack_1489_inst_req_1); -- 
    -- CP-element group 4:  transition  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	3 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	13 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_MMU_to_CPU_reset_ack_1489_Update/ca
      -- CP-element group 4: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_MMU_to_CPU_reset_ack_1489_Update/$exit
      -- CP-element group 4: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_MMU_to_CPU_reset_ack_1489_update_completed_
      -- 
    ca_421_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_MMU_to_CPU_reset_ack_1489_inst_ack_1, ack => reset_dcache_icache_mmu_CP_388_elements(4)); -- 
    -- CP-element group 5:  transition  input  output  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	0 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	6 
    -- CP-element group 5:  members (6) 
      -- CP-element group 5: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_Sample/$exit
      -- CP-element group 5: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_update_start_
      -- CP-element group 5: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_sample_completed_
      -- CP-element group 5: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_Update/req
      -- CP-element group 5: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_Update/$entry
      -- CP-element group 5: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_Sample/ack
      -- 
    ack_430_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_inst_ack_0, ack => reset_dcache_icache_mmu_CP_388_elements(5)); -- 
    req_434_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_434_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_dcache_icache_mmu_CP_388_elements(5), ack => WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_inst_req_1); -- 
    -- CP-element group 6:  transition  input  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	5 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	13 
    -- CP-element group 6:  members (3) 
      -- CP-element group 6: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_update_completed_
      -- CP-element group 6: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_Update/ack
      -- CP-element group 6: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_Update/$exit
      -- 
    ack_435_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_inst_ack_1, ack => reset_dcache_icache_mmu_CP_388_elements(6)); -- 
    -- CP-element group 7:  transition  input  output  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	0 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	8 
    -- CP-element group 7:  members (6) 
      -- CP-element group 7: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_ICACHE_to_CPU_reset_ack_1495_Update/cr
      -- CP-element group 7: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_ICACHE_to_CPU_reset_ack_1495_Update/$entry
      -- CP-element group 7: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_ICACHE_to_CPU_reset_ack_1495_Sample/ra
      -- CP-element group 7: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_ICACHE_to_CPU_reset_ack_1495_Sample/$exit
      -- CP-element group 7: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_ICACHE_to_CPU_reset_ack_1495_update_start_
      -- CP-element group 7: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_ICACHE_to_CPU_reset_ack_1495_sample_completed_
      -- 
    ra_444_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_ICACHE_to_CPU_reset_ack_1495_inst_ack_0, ack => reset_dcache_icache_mmu_CP_388_elements(7)); -- 
    cr_448_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_448_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_dcache_icache_mmu_CP_388_elements(7), ack => RPIPE_ICACHE_to_CPU_reset_ack_1495_inst_req_1); -- 
    -- CP-element group 8:  transition  input  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	7 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	13 
    -- CP-element group 8:  members (3) 
      -- CP-element group 8: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_ICACHE_to_CPU_reset_ack_1495_Update/ca
      -- CP-element group 8: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_ICACHE_to_CPU_reset_ack_1495_Update/$exit
      -- CP-element group 8: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_ICACHE_to_CPU_reset_ack_1495_update_completed_
      -- 
    ca_449_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_ICACHE_to_CPU_reset_ack_1495_inst_ack_1, ack => reset_dcache_icache_mmu_CP_388_elements(8)); -- 
    -- CP-element group 9:  transition  input  output  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	0 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	10 
    -- CP-element group 9:  members (6) 
      -- CP-element group 9: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_Update/req
      -- CP-element group 9: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_Update/$entry
      -- CP-element group 9: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_Sample/$exit
      -- CP-element group 9: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_Sample/ack
      -- CP-element group 9: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_update_start_
      -- CP-element group 9: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_sample_completed_
      -- 
    ack_458_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_inst_ack_0, ack => reset_dcache_icache_mmu_CP_388_elements(9)); -- 
    req_462_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_462_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_dcache_icache_mmu_CP_388_elements(9), ack => WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_inst_req_1); -- 
    -- CP-element group 10:  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	9 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	13 
    -- CP-element group 10:  members (3) 
      -- CP-element group 10: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_Update/$exit
      -- CP-element group 10: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_Update/ack
      -- CP-element group 10: 	 assign_stmt_1487_to_assign_stmt_1502/WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_update_completed_
      -- 
    ack_463_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_inst_ack_1, ack => reset_dcache_icache_mmu_CP_388_elements(10)); -- 
    -- CP-element group 11:  transition  input  output  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	0 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	12 
    -- CP-element group 11:  members (6) 
      -- CP-element group 11: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_DCACHE_to_CPU_reset_ack_1501_Sample/$exit
      -- CP-element group 11: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_DCACHE_to_CPU_reset_ack_1501_Update/cr
      -- CP-element group 11: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_DCACHE_to_CPU_reset_ack_1501_update_start_
      -- CP-element group 11: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_DCACHE_to_CPU_reset_ack_1501_sample_completed_
      -- CP-element group 11: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_DCACHE_to_CPU_reset_ack_1501_Update/$entry
      -- CP-element group 11: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_DCACHE_to_CPU_reset_ack_1501_Sample/ra
      -- 
    ra_472_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_DCACHE_to_CPU_reset_ack_1501_inst_ack_0, ack => reset_dcache_icache_mmu_CP_388_elements(11)); -- 
    cr_476_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_476_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_dcache_icache_mmu_CP_388_elements(11), ack => RPIPE_DCACHE_to_CPU_reset_ack_1501_inst_req_1); -- 
    -- CP-element group 12:  transition  input  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	11 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	13 
    -- CP-element group 12:  members (3) 
      -- CP-element group 12: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_DCACHE_to_CPU_reset_ack_1501_update_completed_
      -- CP-element group 12: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_DCACHE_to_CPU_reset_ack_1501_Update/$exit
      -- CP-element group 12: 	 assign_stmt_1487_to_assign_stmt_1502/RPIPE_DCACHE_to_CPU_reset_ack_1501_Update/ca
      -- 
    ca_477_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => RPIPE_DCACHE_to_CPU_reset_ack_1501_inst_ack_1, ack => reset_dcache_icache_mmu_CP_388_elements(12)); -- 
    -- CP-element group 13:  join  transition  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	2 
    -- CP-element group 13: 	4 
    -- CP-element group 13: 	6 
    -- CP-element group 13: 	8 
    -- CP-element group 13: 	10 
    -- CP-element group 13: 	12 
    -- CP-element group 13: successors 
    -- CP-element group 13:  members (2) 
      -- CP-element group 13: 	 assign_stmt_1487_to_assign_stmt_1502/$exit
      -- CP-element group 13: 	 $exit
      -- 
    reset_dcache_icache_mmu_cp_element_group_13: block -- 
      constant place_capacities: IntegerArray(0 to 5) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1);
      constant place_markings: IntegerArray(0 to 5)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0);
      constant place_delays: IntegerArray(0 to 5) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0);
      constant joinName: string(1 to 43) := "reset_dcache_icache_mmu_cp_element_group_13"; 
      signal preds: BooleanArray(1 to 6); -- 
    begin -- 
      preds <= reset_dcache_icache_mmu_CP_388_elements(2) & reset_dcache_icache_mmu_CP_388_elements(4) & reset_dcache_icache_mmu_CP_388_elements(6) & reset_dcache_icache_mmu_CP_388_elements(8) & reset_dcache_icache_mmu_CP_388_elements(10) & reset_dcache_icache_mmu_CP_388_elements(12);
      gj_reset_dcache_icache_mmu_cp_element_group_13 : generic_join generic map(name => joinName, number_of_predecessors => 6, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => reset_dcache_icache_mmu_CP_388_elements(13), clk => clk, reset => reset); --
    end block;
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal R_ONE_1_1486_wire_constant : std_logic_vector(0 downto 0);
    signal R_ONE_1_1492_wire_constant : std_logic_vector(0 downto 0);
    signal R_ONE_1_1498_wire_constant : std_logic_vector(0 downto 0);
    signal dcache_ok_1502 : std_logic_vector(0 downto 0);
    signal icache_ok_1496 : std_logic_vector(0 downto 0);
    signal mmu_ok_1490 : std_logic_vector(0 downto 0);
    -- 
  begin -- 
    R_ONE_1_1486_wire_constant <= "1";
    R_ONE_1_1492_wire_constant <= "1";
    R_ONE_1_1498_wire_constant <= "1";
    -- shared inport operator group (0) : RPIPE_DCACHE_to_CPU_reset_ack_1501_inst 
    InportGroup_0: Block -- 
      signal data_out: std_logic_vector(0 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 0 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= RPIPE_DCACHE_to_CPU_reset_ack_1501_inst_req_0;
      RPIPE_DCACHE_to_CPU_reset_ack_1501_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= RPIPE_DCACHE_to_CPU_reset_ack_1501_inst_req_1;
      RPIPE_DCACHE_to_CPU_reset_ack_1501_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      dcache_ok_1502 <= data_out(0 downto 0);
      DCACHE_to_CPU_reset_ack_read_0_gI: SplitGuardInterface generic map(name => "DCACHE_to_CPU_reset_ack_read_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      DCACHE_to_CPU_reset_ack_read_0: InputPortRevised -- 
        generic map ( name => "DCACHE_to_CPU_reset_ack_read_0", data_width => 1,  num_reqs => 1,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => DCACHE_to_CPU_reset_ack_pipe_read_req(0),
          oack => DCACHE_to_CPU_reset_ack_pipe_read_ack(0),
          odata => DCACHE_to_CPU_reset_ack_pipe_read_data(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 0
    -- shared inport operator group (1) : RPIPE_ICACHE_to_CPU_reset_ack_1495_inst 
    InportGroup_1: Block -- 
      signal data_out: std_logic_vector(0 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 0 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= RPIPE_ICACHE_to_CPU_reset_ack_1495_inst_req_0;
      RPIPE_ICACHE_to_CPU_reset_ack_1495_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= RPIPE_ICACHE_to_CPU_reset_ack_1495_inst_req_1;
      RPIPE_ICACHE_to_CPU_reset_ack_1495_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      icache_ok_1496 <= data_out(0 downto 0);
      ICACHE_to_CPU_reset_ack_read_1_gI: SplitGuardInterface generic map(name => "ICACHE_to_CPU_reset_ack_read_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      ICACHE_to_CPU_reset_ack_read_1: InputPortRevised -- 
        generic map ( name => "ICACHE_to_CPU_reset_ack_read_1", data_width => 1,  num_reqs => 1,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => ICACHE_to_CPU_reset_ack_pipe_read_req(0),
          oack => ICACHE_to_CPU_reset_ack_pipe_read_ack(0),
          odata => ICACHE_to_CPU_reset_ack_pipe_read_data(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 1
    -- shared inport operator group (2) : RPIPE_MMU_to_CPU_reset_ack_1489_inst 
    InportGroup_2: Block -- 
      signal data_out: std_logic_vector(0 downto 0);
      signal reqL, ackL, reqR, ackR : BooleanArray( 0 downto 0);
      signal reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= RPIPE_MMU_to_CPU_reset_ack_1489_inst_req_0;
      RPIPE_MMU_to_CPU_reset_ack_1489_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= RPIPE_MMU_to_CPU_reset_ack_1489_inst_req_1;
      RPIPE_MMU_to_CPU_reset_ack_1489_inst_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      mmu_ok_1490 <= data_out(0 downto 0);
      MMU_to_CPU_reset_ack_read_2_gI: SplitGuardInterface generic map(name => "MMU_to_CPU_reset_ack_read_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => true) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      MMU_to_CPU_reset_ack_read_2: InputPortRevised -- 
        generic map ( name => "MMU_to_CPU_reset_ack_read_2", data_width => 1,  num_reqs => 1,  output_buffering => outBUFs,   nonblocking_read_flag => False,  no_arbitration => false)
        port map (-- 
          sample_req => reqL , 
          sample_ack => ackL, 
          update_req => reqR, 
          update_ack => ackR, 
          data => data_out, 
          oreq => MMU_to_CPU_reset_ack_pipe_read_req(0),
          oack => MMU_to_CPU_reset_ack_pipe_read_ack(0),
          odata => MMU_to_CPU_reset_ack_pipe_read_data(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      -- 
    end Block; -- inport group 2
    -- shared outport operator group (0) : WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_inst 
    OutportGroup_0: Block -- 
      signal data_in: std_logic_vector(0 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_inst_req_0;
      WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_inst_req_1;
      WPIPE_NOBLOCK_CPU_to_DCACHE_reset_1497_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= R_ONE_1_1498_wire_constant;
      NOBLOCK_CPU_to_DCACHE_reset_write_0_gI: SplitGuardInterface generic map(name => "NOBLOCK_CPU_to_DCACHE_reset_write_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      NOBLOCK_CPU_to_DCACHE_reset_write_0: OutputPortRevised -- 
        generic map ( name => "NOBLOCK_CPU_to_DCACHE_reset", data_width => 1, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => NOBLOCK_CPU_to_DCACHE_reset_pipe_write_req(0),
          oack => NOBLOCK_CPU_to_DCACHE_reset_pipe_write_ack(0),
          odata => NOBLOCK_CPU_to_DCACHE_reset_pipe_write_data(0 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 0
    -- shared outport operator group (1) : WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_inst 
    OutportGroup_1: Block -- 
      signal data_in: std_logic_vector(0 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_inst_req_0;
      WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_inst_req_1;
      WPIPE_NOBLOCK_CPU_to_ICACHE_reset_1491_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= R_ONE_1_1492_wire_constant;
      NOBLOCK_CPU_to_ICACHE_reset_write_1_gI: SplitGuardInterface generic map(name => "NOBLOCK_CPU_to_ICACHE_reset_write_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      NOBLOCK_CPU_to_ICACHE_reset_write_1: OutputPortRevised -- 
        generic map ( name => "NOBLOCK_CPU_to_ICACHE_reset", data_width => 1, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => NOBLOCK_CPU_to_ICACHE_reset_pipe_write_req(0),
          oack => NOBLOCK_CPU_to_ICACHE_reset_pipe_write_ack(0),
          odata => NOBLOCK_CPU_to_ICACHE_reset_pipe_write_data(0 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 1
    -- shared outport operator group (2) : WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_inst 
    OutportGroup_2: Block -- 
      signal data_in: std_logic_vector(0 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_inst_req_0;
      WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_inst_req_1;
      WPIPE_NOBLOCK_CPU_to_MMU_reset_1485_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= R_ONE_1_1486_wire_constant;
      NOBLOCK_CPU_to_MMU_reset_write_2_gI: SplitGuardInterface generic map(name => "NOBLOCK_CPU_to_MMU_reset_write_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      NOBLOCK_CPU_to_MMU_reset_write_2: OutputPortRevised -- 
        generic map ( name => "NOBLOCK_CPU_to_MMU_reset", data_width => 1, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => NOBLOCK_CPU_to_MMU_reset_pipe_write_req(0),
          oack => NOBLOCK_CPU_to_MMU_reset_pipe_write_ack(0),
          odata => NOBLOCK_CPU_to_MMU_reset_pipe_write_data(0 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 2
    -- 
  end Block; -- data_path
  -- 
end reset_dcache_icache_mmu_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity reset_replicator_daemon is -- 
  generic (tag_length : integer); 
  port ( -- 
    DBG_TO_CCU_RESET_SIG : in std_logic_vector(4 downto 0);
    ENV_to_AJIT_reset : in std_logic_vector(7 downto 0);
    ccu_start_pipe_write_req : out  std_logic_vector(0 downto 0);
    ccu_start_pipe_write_ack : in   std_logic_vector(0 downto 0);
    ccu_start_pipe_write_data : out  std_logic_vector(0 downto 0);
    ccu_to_ccu_reset_pipe_write_req : out  std_logic_vector(0 downto 0);
    ccu_to_ccu_reset_pipe_write_ack : in   std_logic_vector(0 downto 0);
    ccu_to_ccu_reset_pipe_write_data : out  std_logic_vector(7 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity reset_replicator_daemon;
architecture reset_replicator_daemon_arch of reset_replicator_daemon is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  -- output port buffer signals
  signal reset_replicator_daemon_CP_3001_start: Boolean;
  signal reset_replicator_daemon_CP_3001_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal WPIPE_ccu_to_ccu_reset_4948_inst_req_0 : boolean;
  signal WPIPE_ccu_to_ccu_reset_4948_inst_ack_0 : boolean;
  signal WPIPE_ccu_to_ccu_reset_4948_inst_req_1 : boolean;
  signal WPIPE_ccu_to_ccu_reset_4948_inst_ack_1 : boolean;
  signal W_s_env_rst_4953_inst_req_0 : boolean;
  signal W_s_env_rst_4953_inst_ack_0 : boolean;
  signal W_s_env_rst_4953_inst_req_1 : boolean;
  signal W_s_env_rst_4953_inst_ack_1 : boolean;
  signal W_s_dbg_rst_4956_inst_req_0 : boolean;
  signal W_s_dbg_rst_4956_inst_ack_0 : boolean;
  signal W_s_dbg_rst_4956_inst_req_1 : boolean;
  signal W_s_dbg_rst_4956_inst_ack_1 : boolean;
  signal if_stmt_4966_branch_req_0 : boolean;
  signal if_stmt_4966_branch_ack_1 : boolean;
  signal if_stmt_4966_branch_ack_0 : boolean;
  signal WPIPE_ccu_start_4974_inst_req_0 : boolean;
  signal WPIPE_ccu_start_4974_inst_ack_0 : boolean;
  signal WPIPE_ccu_start_4974_inst_req_1 : boolean;
  signal WPIPE_ccu_start_4974_inst_ack_1 : boolean;
  signal W_s_env_rst_again_4979_inst_req_0 : boolean;
  signal W_s_env_rst_again_4979_inst_ack_0 : boolean;
  signal W_s_env_rst_again_4979_inst_req_1 : boolean;
  signal W_s_env_rst_again_4979_inst_ack_1 : boolean;
  signal W_s_dbg_rst_again_4982_inst_req_0 : boolean;
  signal W_s_dbg_rst_again_4982_inst_ack_0 : boolean;
  signal W_s_dbg_rst_again_4982_inst_req_1 : boolean;
  signal W_s_dbg_rst_again_4982_inst_ack_1 : boolean;
  signal WPIPE_ccu_to_ccu_reset_4992_inst_req_0 : boolean;
  signal WPIPE_ccu_to_ccu_reset_4992_inst_ack_0 : boolean;
  signal WPIPE_ccu_to_ccu_reset_4992_inst_req_1 : boolean;
  signal WPIPE_ccu_to_ccu_reset_4992_inst_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "reset_replicator_daemon_input_buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      data_width => tag_length + 0) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(tag_length-1 downto 0) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length-1 downto 0);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  reset_replicator_daemon_CP_3001_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "reset_replicator_daemon_out_buffer", -- 
      buffer_size => 1,
      full_rate => false,
      data_width => tag_length + 0) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(tag_length-1 downto 0) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length-1 downto 0);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= reset_replicator_daemon_CP_3001_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= reset_replicator_daemon_CP_3001_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= reset_replicator_daemon_CP_3001_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  reset_replicator_daemon_CP_3001: Block -- control-path 
    signal reset_replicator_daemon_CP_3001_elements: BooleanArray(21 downto 0);
    -- 
  begin -- 
    reset_replicator_daemon_CP_3001_elements(0) <= reset_replicator_daemon_CP_3001_start;
    reset_replicator_daemon_CP_3001_symbol <= reset_replicator_daemon_CP_3001_elements(3);
    -- CP-element group 0:  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0:  members (5) 
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_4950/$entry
      -- CP-element group 0: 	 assign_stmt_4950/WPIPE_ccu_to_ccu_reset_4948_sample_start_
      -- CP-element group 0: 	 assign_stmt_4950/WPIPE_ccu_to_ccu_reset_4948_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_4950/WPIPE_ccu_to_ccu_reset_4948_Sample/req
      -- 
    req_3014_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3014_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_replicator_daemon_CP_3001_elements(0), ack => WPIPE_ccu_to_ccu_reset_4948_inst_req_0); -- 
    -- CP-element group 1:  transition  input  output  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1: 	2 
    -- CP-element group 1:  members (6) 
      -- CP-element group 1: 	 assign_stmt_4950/WPIPE_ccu_to_ccu_reset_4948_sample_completed_
      -- CP-element group 1: 	 assign_stmt_4950/WPIPE_ccu_to_ccu_reset_4948_update_start_
      -- CP-element group 1: 	 assign_stmt_4950/WPIPE_ccu_to_ccu_reset_4948_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_4950/WPIPE_ccu_to_ccu_reset_4948_Sample/ack
      -- CP-element group 1: 	 assign_stmt_4950/WPIPE_ccu_to_ccu_reset_4948_Update/$entry
      -- CP-element group 1: 	 assign_stmt_4950/WPIPE_ccu_to_ccu_reset_4948_Update/req
      -- 
    ack_3015_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_ccu_reset_4948_inst_ack_0, ack => reset_replicator_daemon_CP_3001_elements(1)); -- 
    req_3019_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3019_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_replicator_daemon_CP_3001_elements(1), ack => WPIPE_ccu_to_ccu_reset_4948_inst_req_1); -- 
    -- CP-element group 2:  branch  transition  place  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	1 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	20 
    -- CP-element group 2:  members (10) 
      -- CP-element group 2: 	 branch_block_stmt_4951/branch_block_stmt_4951__entry__
      -- CP-element group 2: 	 branch_block_stmt_4951/merge_stmt_4952__entry__
      -- CP-element group 2: 	 assign_stmt_4950/$exit
      -- CP-element group 2: 	 assign_stmt_4950/WPIPE_ccu_to_ccu_reset_4948_update_completed_
      -- CP-element group 2: 	 assign_stmt_4950/WPIPE_ccu_to_ccu_reset_4948_Update/$exit
      -- CP-element group 2: 	 assign_stmt_4950/WPIPE_ccu_to_ccu_reset_4948_Update/ack
      -- CP-element group 2: 	 branch_block_stmt_4951/$entry
      -- CP-element group 2: 	 branch_block_stmt_4951/merge_stmt_4952_dead_link/$entry
      -- CP-element group 2: 	 branch_block_stmt_4951/merge_stmt_4952__entry___PhiReq/$entry
      -- CP-element group 2: 	 branch_block_stmt_4951/merge_stmt_4952__entry___PhiReq/$exit
      -- 
    ack_3020_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_ccu_reset_4948_inst_ack_1, ack => reset_replicator_daemon_CP_3001_elements(2)); -- 
    -- CP-element group 3:  transition  place  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: successors 
    -- CP-element group 3:  members (3) 
      -- CP-element group 3: 	 branch_block_stmt_4951/branch_block_stmt_4951__exit__
      -- CP-element group 3: 	 $exit
      -- CP-element group 3: 	 branch_block_stmt_4951/$exit
      -- 
    reset_replicator_daemon_CP_3001_elements(3) <= false; 
    -- CP-element group 4:  transition  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	20 
    -- CP-element group 4: successors 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4955_sample_completed_
      -- CP-element group 4: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4955_Sample/$exit
      -- CP-element group 4: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4955_Sample/ack
      -- 
    ack_3050_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_s_env_rst_4953_inst_ack_0, ack => reset_replicator_daemon_CP_3001_elements(4)); -- 
    -- CP-element group 5:  transition  input  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	20 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	8 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4955_update_completed_
      -- CP-element group 5: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4955_Update/$exit
      -- CP-element group 5: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4955_Update/ack
      -- 
    ack_3055_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_s_env_rst_4953_inst_ack_1, ack => reset_replicator_daemon_CP_3001_elements(5)); -- 
    -- CP-element group 6:  transition  input  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	20 
    -- CP-element group 6: successors 
    -- CP-element group 6:  members (3) 
      -- CP-element group 6: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4958_sample_completed_
      -- CP-element group 6: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4958_Sample/$exit
      -- CP-element group 6: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4958_Sample/ack
      -- 
    ack_3064_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_s_dbg_rst_4956_inst_ack_0, ack => reset_replicator_daemon_CP_3001_elements(6)); -- 
    -- CP-element group 7:  transition  input  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	20 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	8 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4958_update_completed_
      -- CP-element group 7: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4958_Update/$exit
      -- CP-element group 7: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4958_Update/ack
      -- 
    ack_3069_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 7_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_s_dbg_rst_4956_inst_ack_1, ack => reset_replicator_daemon_CP_3001_elements(7)); -- 
    -- CP-element group 8:  branch  join  transition  place  output  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	5 
    -- CP-element group 8: 	7 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	10 
    -- CP-element group 8: 	9 
    -- CP-element group 8:  members (38) 
      -- CP-element group 8: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965__exit__
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966__entry__
      -- CP-element group 8: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/$exit
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_dead_link/$entry
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/$entry
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/$exit
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/$entry
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/$exit
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/EQ_u8_u1_4971_inputs/$entry
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/EQ_u8_u1_4971_inputs/$exit
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/EQ_u8_u1_4971_inputs/AND_u8_u8_4969/$entry
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/EQ_u8_u1_4971_inputs/AND_u8_u8_4969/$exit
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/EQ_u8_u1_4971_inputs/AND_u8_u8_4969/AND_u8_u8_4969_inputs/$entry
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/EQ_u8_u1_4971_inputs/AND_u8_u8_4969/AND_u8_u8_4969_inputs/$exit
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/EQ_u8_u1_4971_inputs/AND_u8_u8_4969/SplitProtocol/$entry
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/EQ_u8_u1_4971_inputs/AND_u8_u8_4969/SplitProtocol/$exit
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/EQ_u8_u1_4971_inputs/AND_u8_u8_4969/SplitProtocol/Sample/$entry
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/EQ_u8_u1_4971_inputs/AND_u8_u8_4969/SplitProtocol/Sample/$exit
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/EQ_u8_u1_4971_inputs/AND_u8_u8_4969/SplitProtocol/Sample/rr
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/EQ_u8_u1_4971_inputs/AND_u8_u8_4969/SplitProtocol/Sample/ra
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/EQ_u8_u1_4971_inputs/AND_u8_u8_4969/SplitProtocol/Update/$entry
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/EQ_u8_u1_4971_inputs/AND_u8_u8_4969/SplitProtocol/Update/$exit
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/EQ_u8_u1_4971_inputs/AND_u8_u8_4969/SplitProtocol/Update/cr
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/EQ_u8_u1_4971_inputs/AND_u8_u8_4969/SplitProtocol/Update/ca
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/SplitProtocol/$entry
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/SplitProtocol/$exit
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/SplitProtocol/Sample/$entry
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/SplitProtocol/Sample/$exit
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/SplitProtocol/Sample/rr
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/SplitProtocol/Sample/ra
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/SplitProtocol/Update/$entry
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/SplitProtocol/Update/$exit
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/SplitProtocol/Update/cr
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/EQ_u8_u1_4971/SplitProtocol/Update/ca
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_eval_test/branch_req
      -- CP-element group 8: 	 branch_block_stmt_4951/EQ_u8_u1_4971_place
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_if_link/$entry
      -- CP-element group 8: 	 branch_block_stmt_4951/if_stmt_4966_else_link/$entry
      -- 
    branch_req_3115_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " branch_req_3115_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_replicator_daemon_CP_3001_elements(8), ack => if_stmt_4966_branch_req_0); -- 
    reset_replicator_daemon_cp_element_group_8: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 42) := "reset_replicator_daemon_cp_element_group_8"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= reset_replicator_daemon_CP_3001_elements(5) & reset_replicator_daemon_CP_3001_elements(7);
      gj_reset_replicator_daemon_cp_element_group_8 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => reset_replicator_daemon_CP_3001_elements(8), clk => clk, reset => reset); --
    end block;
    -- CP-element group 9:  transition  place  input  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	8 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	20 
    -- CP-element group 9:  members (5) 
      -- CP-element group 9: 	 branch_block_stmt_4951/if_stmt_4966_if_link/$exit
      -- CP-element group 9: 	 branch_block_stmt_4951/if_stmt_4966_if_link/if_choice_transition
      -- CP-element group 9: 	 branch_block_stmt_4951/wait_for_hard_reset
      -- CP-element group 9: 	 branch_block_stmt_4951/wait_for_hard_reset_PhiReq/$entry
      -- CP-element group 9: 	 branch_block_stmt_4951/wait_for_hard_reset_PhiReq/$exit
      -- 
    if_choice_transition_3120_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4966_branch_ack_1, ack => reset_replicator_daemon_CP_3001_elements(9)); -- 
    -- CP-element group 10:  merge  transition  place  input  output  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	8 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	11 
    -- CP-element group 10:  members (8) 
      -- CP-element group 10: 	 branch_block_stmt_4951/if_stmt_4966__exit__
      -- CP-element group 10: 	 branch_block_stmt_4951/assign_stmt_4976__entry__
      -- CP-element group 10: 	 branch_block_stmt_4951/if_stmt_4966_else_link/$exit
      -- CP-element group 10: 	 branch_block_stmt_4951/if_stmt_4966_else_link/else_choice_transition
      -- CP-element group 10: 	 branch_block_stmt_4951/assign_stmt_4976/$entry
      -- CP-element group 10: 	 branch_block_stmt_4951/assign_stmt_4976/WPIPE_ccu_start_4974_sample_start_
      -- CP-element group 10: 	 branch_block_stmt_4951/assign_stmt_4976/WPIPE_ccu_start_4974_Sample/$entry
      -- CP-element group 10: 	 branch_block_stmt_4951/assign_stmt_4976/WPIPE_ccu_start_4974_Sample/req
      -- 
    else_choice_transition_3124_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => if_stmt_4966_branch_ack_0, ack => reset_replicator_daemon_CP_3001_elements(10)); -- 
    req_3136_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3136_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_replicator_daemon_CP_3001_elements(10), ack => WPIPE_ccu_start_4974_inst_req_0); -- 
    -- CP-element group 11:  transition  input  output  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	10 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	12 
    -- CP-element group 11:  members (6) 
      -- CP-element group 11: 	 branch_block_stmt_4951/assign_stmt_4976/WPIPE_ccu_start_4974_sample_completed_
      -- CP-element group 11: 	 branch_block_stmt_4951/assign_stmt_4976/WPIPE_ccu_start_4974_update_start_
      -- CP-element group 11: 	 branch_block_stmt_4951/assign_stmt_4976/WPIPE_ccu_start_4974_Sample/$exit
      -- CP-element group 11: 	 branch_block_stmt_4951/assign_stmt_4976/WPIPE_ccu_start_4974_Sample/ack
      -- CP-element group 11: 	 branch_block_stmt_4951/assign_stmt_4976/WPIPE_ccu_start_4974_Update/$entry
      -- CP-element group 11: 	 branch_block_stmt_4951/assign_stmt_4976/WPIPE_ccu_start_4974_Update/req
      -- 
    ack_3137_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_start_4974_inst_ack_0, ack => reset_replicator_daemon_CP_3001_elements(11)); -- 
    req_3141_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3141_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_replicator_daemon_CP_3001_elements(11), ack => WPIPE_ccu_start_4974_inst_req_1); -- 
    -- CP-element group 12:  branch  transition  place  input  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	11 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	21 
    -- CP-element group 12:  members (9) 
      -- CP-element group 12: 	 branch_block_stmt_4951/assign_stmt_4976__exit__
      -- CP-element group 12: 	 branch_block_stmt_4951/merge_stmt_4978__entry__
      -- CP-element group 12: 	 branch_block_stmt_4951/assign_stmt_4976/$exit
      -- CP-element group 12: 	 branch_block_stmt_4951/assign_stmt_4976/WPIPE_ccu_start_4974_update_completed_
      -- CP-element group 12: 	 branch_block_stmt_4951/assign_stmt_4976/WPIPE_ccu_start_4974_Update/$exit
      -- CP-element group 12: 	 branch_block_stmt_4951/assign_stmt_4976/WPIPE_ccu_start_4974_Update/ack
      -- CP-element group 12: 	 branch_block_stmt_4951/merge_stmt_4978_dead_link/$entry
      -- CP-element group 12: 	 branch_block_stmt_4951/merge_stmt_4978__entry___PhiReq/$entry
      -- CP-element group 12: 	 branch_block_stmt_4951/merge_stmt_4978__entry___PhiReq/$exit
      -- 
    ack_3142_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 12_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_start_4974_inst_ack_1, ack => reset_replicator_daemon_CP_3001_elements(12)); -- 
    -- CP-element group 13:  transition  input  bypass 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	21 
    -- CP-element group 13: successors 
    -- CP-element group 13:  members (3) 
      -- CP-element group 13: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4981_sample_completed_
      -- CP-element group 13: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4981_Sample/$exit
      -- CP-element group 13: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4981_Sample/ack
      -- 
    ack_3154_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 13_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_s_env_rst_again_4979_inst_ack_0, ack => reset_replicator_daemon_CP_3001_elements(13)); -- 
    -- CP-element group 14:  transition  input  bypass 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	21 
    -- CP-element group 14: successors 
    -- CP-element group 14: 	17 
    -- CP-element group 14:  members (3) 
      -- CP-element group 14: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4981_update_completed_
      -- CP-element group 14: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4981_Update/$exit
      -- CP-element group 14: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4981_Update/ack
      -- 
    ack_3159_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 14_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_s_env_rst_again_4979_inst_ack_1, ack => reset_replicator_daemon_CP_3001_elements(14)); -- 
    -- CP-element group 15:  transition  input  bypass 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: 	21 
    -- CP-element group 15: successors 
    -- CP-element group 15:  members (3) 
      -- CP-element group 15: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4984_sample_completed_
      -- CP-element group 15: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4984_Sample/$exit
      -- CP-element group 15: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4984_Sample/ack
      -- 
    ack_3168_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 15_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_s_dbg_rst_again_4982_inst_ack_0, ack => reset_replicator_daemon_CP_3001_elements(15)); -- 
    -- CP-element group 16:  transition  input  bypass 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: 	21 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	17 
    -- CP-element group 16:  members (3) 
      -- CP-element group 16: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4984_update_completed_
      -- CP-element group 16: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4984_Update/$exit
      -- CP-element group 16: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4984_Update/ack
      -- 
    ack_3173_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 16_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_s_dbg_rst_again_4982_inst_ack_1, ack => reset_replicator_daemon_CP_3001_elements(16)); -- 
    -- CP-element group 17:  join  transition  output  bypass 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	14 
    -- CP-element group 17: 	16 
    -- CP-element group 17: successors 
    -- CP-element group 17: 	18 
    -- CP-element group 17:  members (3) 
      -- CP-element group 17: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/WPIPE_ccu_to_ccu_reset_4992_sample_start_
      -- CP-element group 17: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/WPIPE_ccu_to_ccu_reset_4992_Sample/$entry
      -- CP-element group 17: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/WPIPE_ccu_to_ccu_reset_4992_Sample/req
      -- 
    req_3181_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3181_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_replicator_daemon_CP_3001_elements(17), ack => WPIPE_ccu_to_ccu_reset_4992_inst_req_0); -- 
    reset_replicator_daemon_cp_element_group_17: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 43) := "reset_replicator_daemon_cp_element_group_17"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= reset_replicator_daemon_CP_3001_elements(14) & reset_replicator_daemon_CP_3001_elements(16);
      gj_reset_replicator_daemon_cp_element_group_17 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => reset_replicator_daemon_CP_3001_elements(17), clk => clk, reset => reset); --
    end block;
    -- CP-element group 18:  transition  input  output  bypass 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: 	17 
    -- CP-element group 18: successors 
    -- CP-element group 18: 	19 
    -- CP-element group 18:  members (6) 
      -- CP-element group 18: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/WPIPE_ccu_to_ccu_reset_4992_sample_completed_
      -- CP-element group 18: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/WPIPE_ccu_to_ccu_reset_4992_update_start_
      -- CP-element group 18: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/WPIPE_ccu_to_ccu_reset_4992_Sample/$exit
      -- CP-element group 18: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/WPIPE_ccu_to_ccu_reset_4992_Sample/ack
      -- CP-element group 18: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/WPIPE_ccu_to_ccu_reset_4992_Update/$entry
      -- CP-element group 18: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/WPIPE_ccu_to_ccu_reset_4992_Update/req
      -- 
    ack_3182_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 18_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_ccu_reset_4992_inst_ack_0, ack => reset_replicator_daemon_CP_3001_elements(18)); -- 
    req_3186_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3186_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_replicator_daemon_CP_3001_elements(18), ack => WPIPE_ccu_to_ccu_reset_4992_inst_req_1); -- 
    -- CP-element group 19:  transition  place  input  bypass 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	18 
    -- CP-element group 19: successors 
    -- CP-element group 19: 	21 
    -- CP-element group 19:  members (8) 
      -- CP-element group 19: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994__exit__
      -- CP-element group 19: 	 branch_block_stmt_4951/loopback
      -- CP-element group 19: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/$exit
      -- CP-element group 19: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/WPIPE_ccu_to_ccu_reset_4992_update_completed_
      -- CP-element group 19: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/WPIPE_ccu_to_ccu_reset_4992_Update/$exit
      -- CP-element group 19: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/WPIPE_ccu_to_ccu_reset_4992_Update/ack
      -- CP-element group 19: 	 branch_block_stmt_4951/loopback_PhiReq/$entry
      -- CP-element group 19: 	 branch_block_stmt_4951/loopback_PhiReq/$exit
      -- 
    ack_3187_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 19_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_to_ccu_reset_4992_inst_ack_1, ack => reset_replicator_daemon_CP_3001_elements(19)); -- 
    -- CP-element group 20:  merge  fork  transition  place  output  bypass 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: 	9 
    -- CP-element group 20: 	2 
    -- CP-element group 20: successors 
    -- CP-element group 20: 	5 
    -- CP-element group 20: 	7 
    -- CP-element group 20: 	6 
    -- CP-element group 20: 	4 
    -- CP-element group 20:  members (19) 
      -- CP-element group 20: 	 branch_block_stmt_4951/merge_stmt_4952__exit__
      -- CP-element group 20: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965__entry__
      -- CP-element group 20: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/$entry
      -- CP-element group 20: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4955_sample_start_
      -- CP-element group 20: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4955_update_start_
      -- CP-element group 20: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4955_Sample/$entry
      -- CP-element group 20: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4955_Sample/req
      -- CP-element group 20: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4955_Update/$entry
      -- CP-element group 20: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4955_Update/req
      -- CP-element group 20: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4958_sample_start_
      -- CP-element group 20: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4958_update_start_
      -- CP-element group 20: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4958_Sample/$entry
      -- CP-element group 20: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4958_Sample/req
      -- CP-element group 20: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4958_Update/$entry
      -- CP-element group 20: 	 branch_block_stmt_4951/assign_stmt_4955_to_assign_stmt_4965/assign_stmt_4958_Update/req
      -- CP-element group 20: 	 branch_block_stmt_4951/merge_stmt_4952_PhiReqMerge
      -- CP-element group 20: 	 branch_block_stmt_4951/merge_stmt_4952_PhiAck/$entry
      -- CP-element group 20: 	 branch_block_stmt_4951/merge_stmt_4952_PhiAck/$exit
      -- CP-element group 20: 	 branch_block_stmt_4951/merge_stmt_4952_PhiAck/dummy
      -- 
    req_3049_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3049_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_replicator_daemon_CP_3001_elements(20), ack => W_s_env_rst_4953_inst_req_0); -- 
    req_3054_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3054_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_replicator_daemon_CP_3001_elements(20), ack => W_s_env_rst_4953_inst_req_1); -- 
    req_3063_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3063_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_replicator_daemon_CP_3001_elements(20), ack => W_s_dbg_rst_4956_inst_req_0); -- 
    req_3068_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3068_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_replicator_daemon_CP_3001_elements(20), ack => W_s_dbg_rst_4956_inst_req_1); -- 
    reset_replicator_daemon_CP_3001_elements(20) <= OrReduce(reset_replicator_daemon_CP_3001_elements(9) & reset_replicator_daemon_CP_3001_elements(2));
    -- CP-element group 21:  merge  fork  transition  place  output  bypass 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: 	19 
    -- CP-element group 21: 	12 
    -- CP-element group 21: successors 
    -- CP-element group 21: 	13 
    -- CP-element group 21: 	14 
    -- CP-element group 21: 	15 
    -- CP-element group 21: 	16 
    -- CP-element group 21:  members (19) 
      -- CP-element group 21: 	 branch_block_stmt_4951/merge_stmt_4978__exit__
      -- CP-element group 21: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994__entry__
      -- CP-element group 21: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/$entry
      -- CP-element group 21: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4981_sample_start_
      -- CP-element group 21: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4981_update_start_
      -- CP-element group 21: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4981_Sample/$entry
      -- CP-element group 21: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4981_Sample/req
      -- CP-element group 21: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4981_Update/$entry
      -- CP-element group 21: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4981_Update/req
      -- CP-element group 21: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4984_sample_start_
      -- CP-element group 21: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4984_update_start_
      -- CP-element group 21: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4984_Sample/$entry
      -- CP-element group 21: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4984_Sample/req
      -- CP-element group 21: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4984_Update/$entry
      -- CP-element group 21: 	 branch_block_stmt_4951/assign_stmt_4981_to_assign_stmt_4994/assign_stmt_4984_Update/req
      -- CP-element group 21: 	 branch_block_stmt_4951/merge_stmt_4978_PhiReqMerge
      -- CP-element group 21: 	 branch_block_stmt_4951/merge_stmt_4978_PhiAck/$entry
      -- CP-element group 21: 	 branch_block_stmt_4951/merge_stmt_4978_PhiAck/$exit
      -- CP-element group 21: 	 branch_block_stmt_4951/merge_stmt_4978_PhiAck/dummy
      -- 
    req_3153_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3153_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_replicator_daemon_CP_3001_elements(21), ack => W_s_env_rst_again_4979_inst_req_0); -- 
    req_3158_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3158_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_replicator_daemon_CP_3001_elements(21), ack => W_s_env_rst_again_4979_inst_req_1); -- 
    req_3167_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3167_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_replicator_daemon_CP_3001_elements(21), ack => W_s_dbg_rst_again_4982_inst_req_0); -- 
    req_3172_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_3172_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => reset_replicator_daemon_CP_3001_elements(21), ack => W_s_dbg_rst_again_4982_inst_req_1); -- 
    reset_replicator_daemon_CP_3001_elements(21) <= OrReduce(reset_replicator_daemon_CP_3001_elements(19) & reset_replicator_daemon_CP_3001_elements(12));
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal AND_u8_u8_4969_wire : std_logic_vector(7 downto 0);
    signal CONCAT_u3_u8_4963_wire : std_logic_vector(7 downto 0);
    signal CONCAT_u3_u8_4989_wire : std_logic_vector(7 downto 0);
    signal EQ_u8_u1_4971_wire : std_logic_vector(0 downto 0);
    signal RPIPE_DBG_TO_CCU_RESET_SIG_4957_wire : std_logic_vector(4 downto 0);
    signal RPIPE_DBG_TO_CCU_RESET_SIG_4983_wire : std_logic_vector(4 downto 0);
    signal RPIPE_ENV_to_AJIT_reset_4954_wire : std_logic_vector(7 downto 0);
    signal RPIPE_ENV_to_AJIT_reset_4980_wire : std_logic_vector(7 downto 0);
    signal R_HARD_RESET_MASK_4968_wire_constant : std_logic_vector(7 downto 0);
    signal R_ZERO_3_4961_wire_constant : std_logic_vector(2 downto 0);
    signal R_ZERO_3_4987_wire_constant : std_logic_vector(2 downto 0);
    signal env_rst_code_4991 : std_logic_vector(7 downto 0);
    signal initial_rst_4965 : std_logic_vector(7 downto 0);
    signal konst_4949_wire_constant : std_logic_vector(7 downto 0);
    signal konst_4970_wire_constant : std_logic_vector(7 downto 0);
    signal konst_4975_wire_constant : std_logic_vector(0 downto 0);
    signal s_dbg_rst_4958 : std_logic_vector(4 downto 0);
    signal s_dbg_rst_again_4984 : std_logic_vector(4 downto 0);
    signal s_env_rst_4955 : std_logic_vector(7 downto 0);
    signal s_env_rst_again_4981 : std_logic_vector(7 downto 0);
    -- 
  begin -- 
    R_HARD_RESET_MASK_4968_wire_constant <= "00000001";
    R_ZERO_3_4961_wire_constant <= "000";
    R_ZERO_3_4987_wire_constant <= "000";
    konst_4949_wire_constant <= "00000001";
    konst_4970_wire_constant <= "00000000";
    konst_4975_wire_constant <= "1";
    W_s_dbg_rst_4956_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_s_dbg_rst_4956_inst_req_0;
      W_s_dbg_rst_4956_inst_ack_0<= wack(0);
      rreq(0) <= W_s_dbg_rst_4956_inst_req_1;
      W_s_dbg_rst_4956_inst_ack_1<= rack(0);
      W_s_dbg_rst_4956_inst : InterlockBuffer generic map ( -- 
        name => "W_s_dbg_rst_4956_inst",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 5,
        out_data_width => 5,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => RPIPE_DBG_TO_CCU_RESET_SIG_4957_wire,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => s_dbg_rst_4958,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_s_dbg_rst_again_4982_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_s_dbg_rst_again_4982_inst_req_0;
      W_s_dbg_rst_again_4982_inst_ack_0<= wack(0);
      rreq(0) <= W_s_dbg_rst_again_4982_inst_req_1;
      W_s_dbg_rst_again_4982_inst_ack_1<= rack(0);
      W_s_dbg_rst_again_4982_inst : InterlockBuffer generic map ( -- 
        name => "W_s_dbg_rst_again_4982_inst",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 5,
        out_data_width => 5,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => RPIPE_DBG_TO_CCU_RESET_SIG_4983_wire,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => s_dbg_rst_again_4984,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_s_env_rst_4953_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_s_env_rst_4953_inst_req_0;
      W_s_env_rst_4953_inst_ack_0<= wack(0);
      rreq(0) <= W_s_env_rst_4953_inst_req_1;
      W_s_env_rst_4953_inst_ack_1<= rack(0);
      W_s_env_rst_4953_inst : InterlockBuffer generic map ( -- 
        name => "W_s_env_rst_4953_inst",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => RPIPE_ENV_to_AJIT_reset_4954_wire,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => s_env_rst_4955,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_s_env_rst_again_4979_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_s_env_rst_again_4979_inst_req_0;
      W_s_env_rst_again_4979_inst_ack_0<= wack(0);
      rreq(0) <= W_s_env_rst_again_4979_inst_req_1;
      W_s_env_rst_again_4979_inst_ack_1<= rack(0);
      W_s_env_rst_again_4979_inst : InterlockBuffer generic map ( -- 
        name => "W_s_env_rst_again_4979_inst",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 8,
        out_data_width => 8,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => RPIPE_ENV_to_AJIT_reset_4980_wire,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => s_env_rst_again_4981,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    if_stmt_4966_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= EQ_u8_u1_4971_wire;
      branch_instance: BranchBase -- 
        generic map( name => "if_stmt_4966_branch", condition_width => 1,  bypass_flag => false)
        port map( -- 
          condition => condition_sig,
          req => if_stmt_4966_branch_req_0,
          ack0 => if_stmt_4966_branch_ack_0,
          ack1 => if_stmt_4966_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    -- flow through binary operator AND_u8_u8_4969_inst
    AND_u8_u8_4969_wire <= (initial_rst_4965 and R_HARD_RESET_MASK_4968_wire_constant);
    -- flow through binary operator CONCAT_u3_u8_4963_inst
    process(R_ZERO_3_4961_wire_constant, s_dbg_rst_4958) -- 
      variable tmp_var : std_logic_vector(7 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ZERO_3_4961_wire_constant, s_dbg_rst_4958, tmp_var);
      CONCAT_u3_u8_4963_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u3_u8_4989_inst
    process(R_ZERO_3_4987_wire_constant, s_dbg_rst_again_4984) -- 
      variable tmp_var : std_logic_vector(7 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ZERO_3_4987_wire_constant, s_dbg_rst_again_4984, tmp_var);
      CONCAT_u3_u8_4989_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u8_u1_4971_inst
    process(AND_u8_u8_4969_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(AND_u8_u8_4969_wire, konst_4970_wire_constant, tmp_var);
      EQ_u8_u1_4971_wire <= tmp_var; --
    end process;
    -- flow through binary operator OR_u8_u8_4964_inst
    initial_rst_4965 <= (s_env_rst_4955 or CONCAT_u3_u8_4963_wire);
    -- flow through binary operator OR_u8_u8_4990_inst
    env_rst_code_4991 <= (s_env_rst_again_4981 or CONCAT_u3_u8_4989_wire);
    -- read from input-signal DBG_TO_CCU_RESET_SIG
    RPIPE_DBG_TO_CCU_RESET_SIG_4983_wire <= DBG_TO_CCU_RESET_SIG;
    RPIPE_DBG_TO_CCU_RESET_SIG_4957_wire <= DBG_TO_CCU_RESET_SIG;
    -- read from input-signal ENV_to_AJIT_reset
    RPIPE_ENV_to_AJIT_reset_4954_wire <= ENV_to_AJIT_reset;
    RPIPE_ENV_to_AJIT_reset_4980_wire <= ENV_to_AJIT_reset;
    -- shared outport operator group (0) : WPIPE_ccu_start_4974_inst 
    OutportGroup_0: Block -- 
      signal data_in: std_logic_vector(0 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_ccu_start_4974_inst_req_0;
      WPIPE_ccu_start_4974_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_ccu_start_4974_inst_req_1;
      WPIPE_ccu_start_4974_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= konst_4975_wire_constant;
      ccu_start_write_0_gI: SplitGuardInterface generic map(name => "ccu_start_write_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      ccu_start_write_0: OutputPortRevised -- 
        generic map ( name => "ccu_start", data_width => 1, num_reqs => 1, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => ccu_start_pipe_write_req(0),
          oack => ccu_start_pipe_write_ack(0),
          odata => ccu_start_pipe_write_data(0 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 0
    -- shared outport operator group (1) : WPIPE_ccu_to_ccu_reset_4992_inst WPIPE_ccu_to_ccu_reset_4948_inst 
    OutportGroup_1: Block -- 
      signal data_in: std_logic_vector(15 downto 0);
      signal sample_req, sample_ack : BooleanArray( 1 downto 0);
      signal update_req, update_ack : BooleanArray( 1 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 1 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 1 downto 0);
      signal guard_vector : std_logic_vector( 1 downto 0);
      constant inBUFs : IntegerArray(1 downto 0) := (1 => 0, 0 => 0);
      constant guardFlags : BooleanArray(1 downto 0) := (0 => false, 1 => false);
      constant guardBuffering: IntegerArray(1 downto 0)  := (0 => 2, 1 => 2);
      -- 
    begin -- 
      sample_req_unguarded(1) <= WPIPE_ccu_to_ccu_reset_4992_inst_req_0;
      sample_req_unguarded(0) <= WPIPE_ccu_to_ccu_reset_4948_inst_req_0;
      WPIPE_ccu_to_ccu_reset_4992_inst_ack_0 <= sample_ack_unguarded(1);
      WPIPE_ccu_to_ccu_reset_4948_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(1) <= WPIPE_ccu_to_ccu_reset_4992_inst_req_1;
      update_req_unguarded(0) <= WPIPE_ccu_to_ccu_reset_4948_inst_req_1;
      WPIPE_ccu_to_ccu_reset_4992_inst_ack_1 <= update_ack_unguarded(1);
      WPIPE_ccu_to_ccu_reset_4948_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      guard_vector(1)  <=  '1';
      data_in <= env_rst_code_4991 & konst_4949_wire_constant;
      ccu_to_ccu_reset_write_1_gI: SplitGuardInterface generic map(name => "ccu_to_ccu_reset_write_1_gI", nreqs => 2, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      ccu_to_ccu_reset_write_1: OutputPortRevised -- 
        generic map ( name => "ccu_to_ccu_reset", data_width => 8, num_reqs => 2, input_buffering => inBUFs, full_rate => false,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => ccu_to_ccu_reset_pipe_write_req(0),
          oack => ccu_to_ccu_reset_pipe_write_ack(0),
          odata => ccu_to_ccu_reset_pipe_write_data(7 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 1
    -- 
  end Block; -- data_path
  -- 
end reset_replicator_daemon_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity selectTrap_Operator is -- 
  port ( -- 
    sample_req: in boolean;
    sample_ack: out boolean;
    update_req: in boolean;
    update_ack: out boolean;
    iTV : in  std_logic_vector(31 downto 0);
    iTBR : in  std_logic_vector(31 downto 0);
    iET : in  std_logic_vector(0 downto 0);
    iPMODE : in  std_logic_vector(1 downto 0);
    iILVL : in  std_logic_vector(3 downto 0);
    iTICC_TRAP_TYPE : in  std_logic_vector(6 downto 0);
    oTV : out  std_logic_vector(31 downto 0);
    oTBR : out  std_logic_vector(31 downto 0);
    oPMODE : out  std_logic_vector(1 downto 0);
    clk, reset: in std_logic
    -- 
  );
  -- 
end entity selectTrap_Operator;
architecture selectTrap_Operator_arch of selectTrap_Operator is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal update_ack_symbol: Boolean;
  signal default_zero_sig: std_logic;
  -- input port buffer signals
  signal iTV_buffer :  std_logic_vector(31 downto 0);
  signal iTV_update_enable: Boolean;
  signal iTV_update_enable_unmarked: Boolean;
  signal iTBR_buffer :  std_logic_vector(31 downto 0);
  signal iTBR_update_enable: Boolean;
  signal iTBR_update_enable_unmarked: Boolean;
  signal iET_buffer :  std_logic_vector(0 downto 0);
  signal iET_update_enable: Boolean;
  signal iET_update_enable_unmarked: Boolean;
  signal iPMODE_buffer :  std_logic_vector(1 downto 0);
  signal iPMODE_update_enable: Boolean;
  signal iPMODE_update_enable_unmarked: Boolean;
  signal iILVL_buffer :  std_logic_vector(3 downto 0);
  signal iILVL_update_enable: Boolean;
  signal iILVL_update_enable_unmarked: Boolean;
  signal iTICC_TRAP_TYPE_buffer :  std_logic_vector(6 downto 0);
  signal iTICC_TRAP_TYPE_update_enable: Boolean;
  signal iTICC_TRAP_TYPE_update_enable_unmarked: Boolean;
  -- output port buffer signals
  signal oTV_buffer :  std_logic_vector(31 downto 0);
  signal oTV_update_enable: Boolean;
  signal oTBR_buffer :  std_logic_vector(31 downto 0);
  signal oTBR_update_enable: Boolean;
  signal oPMODE_buffer :  std_logic_vector(1 downto 0);
  signal oPMODE_update_enable: Boolean;
  signal selectTrap_CP_481_start: Boolean;
  signal selectTrap_CP_481_symbol: Boolean;
  signal cp_all_inputs_sampled: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal W_oTV_1779_inst_ack_1 : boolean;
  signal MUX_1688_inst_req_1 : boolean;
  signal MUX_1688_inst_ack_1 : boolean;
  signal W_oTV_1779_inst_req_1 : boolean;
  signal W_iTV_d_1690_inst_ack_0 : boolean;
  signal W_iTV_d_1690_inst_req_0 : boolean;
  signal OR_u32_u32_1790_inst_ack_0 : boolean;
  signal OR_u32_u32_1790_inst_req_1 : boolean;
  signal OR_u32_u32_1790_inst_ack_1 : boolean;
  signal W_oPMODE_1792_inst_ack_1 : boolean;
  signal W_oPMODE_1792_inst_req_1 : boolean;
  signal W_oPMODE_1792_inst_ack_0 : boolean;
  signal W_oPMODE_1792_inst_req_0 : boolean;
  signal OR_u32_u32_1790_inst_req_0 : boolean;
  signal W_oTV_1779_inst_ack_0 : boolean;
  signal MUX_1688_inst_ack_0 : boolean;
  signal MUX_1688_inst_req_0 : boolean;
  signal W_oTV_1779_inst_req_0 : boolean;
  signal W_iTV_d_1690_inst_ack_1 : boolean;
  signal W_iTV_d_1690_inst_req_1 : boolean;
  -- 
begin --  
  sample_ack <= selectTrap_CP_481_symbol;
  -- input handling ------------------------------------------------
  iTV_buffer <= iTV;
  iTBR_buffer <= iTBR;
  iET_buffer <= iET;
  iPMODE_buffer <= iPMODE;
  iILVL_buffer <= iILVL;
  iTICC_TRAP_TYPE_buffer <= iTICC_TRAP_TYPE;
  -- join of sample-req and update-req.. used to trigger CP.
  selectTrap_CP_481_start_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
    constant joinName: string(1 to 28) := "selectTrap_CP_481_start_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= sample_req & update_req;
    gj_selectTrap_CP_481_start_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => selectTrap_CP_481_start, clk => clk, reset => reset); --
  end block;
  -- output handling  -------------------------------------------------------
  oTV <= oTV_buffer;
  oTV_update_enable <= update_req;
  oTBR <= oTBR_buffer;
  oTBR_update_enable <= update_req;
  oPMODE <= oPMODE_buffer;
  oPMODE_update_enable <= update_req;
  update_ack_symbol <= selectTrap_CP_481_symbol;
  update_ack <= update_ack_symbol;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  selectTrap_CP_481: Block -- control-path 
    signal selectTrap_CP_481_elements: BooleanArray(12 downto 0);
    -- 
  begin -- 
    selectTrap_CP_481_elements(0) <= selectTrap_CP_481_start;
    selectTrap_CP_481_symbol <= selectTrap_CP_481_elements(12);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	6 
    -- CP-element group 0: 	3 
    -- CP-element group 0: 	4 
    -- CP-element group 0: 	5 
    -- CP-element group 0: 	11 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0: 	9 
    -- CP-element group 0: 	10 
    -- CP-element group 0:  members (29) 
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/OR_u32_u32_1790_update_start_
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1781_update_start_
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/OR_u32_u32_1790_Update/$entry
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/MUX_1688_sample_start_
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/MUX_1688_complete/req
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1781_sample_start_
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/MUX_1688_complete/$entry
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1781_Update/req
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1781_Update/$entry
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1692_Sample/req
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1692_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1692_Update/$entry
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/$entry
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1692_update_start_
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/OR_u32_u32_1790_Update/cr
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/MUX_1688_update_start_
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1692_sample_start_
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1794_Update/req
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1794_Update/$entry
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1794_Sample/req
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/MUX_1688_start/req
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1794_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1781_Sample/req
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1794_update_start_
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1781_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/MUX_1688_start/$entry
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1794_sample_start_
      -- CP-element group 0: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1692_Update/req
      -- 
    cr_541_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_541_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => selectTrap_CP_481_elements(0), ack => OR_u32_u32_1790_inst_req_1); -- 
    req_513_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_513_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => selectTrap_CP_481_elements(0), ack => W_iTV_d_1690_inst_req_1); -- 
    req_522_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_522_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => selectTrap_CP_481_elements(0), ack => W_oTV_1779_inst_req_0); -- 
    req_527_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_527_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => selectTrap_CP_481_elements(0), ack => W_oTV_1779_inst_req_1); -- 
    req_494_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_494_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => selectTrap_CP_481_elements(0), ack => MUX_1688_inst_req_0); -- 
    req_499_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_499_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => selectTrap_CP_481_elements(0), ack => MUX_1688_inst_req_1); -- 
    req_508_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_508_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => selectTrap_CP_481_elements(0), ack => W_iTV_d_1690_inst_req_0); -- 
    req_550_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_550_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => selectTrap_CP_481_elements(0), ack => W_oPMODE_1792_inst_req_0); -- 
    req_555_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_555_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => selectTrap_CP_481_elements(0), ack => W_oPMODE_1792_inst_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_1576_to_assign_stmt_1794/MUX_1688_sample_completed_
      -- CP-element group 1: 	 assign_stmt_1576_to_assign_stmt_1794/MUX_1688_start/ack
      -- CP-element group 1: 	 assign_stmt_1576_to_assign_stmt_1794/MUX_1688_start/$exit
      -- 
    ack_495_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => MUX_1688_inst_ack_0, ack => selectTrap_CP_481_elements(1)); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	7 
    -- CP-element group 2:  members (3) 
      -- CP-element group 2: 	 assign_stmt_1576_to_assign_stmt_1794/MUX_1688_complete/ack
      -- CP-element group 2: 	 assign_stmt_1576_to_assign_stmt_1794/MUX_1688_complete/$exit
      -- CP-element group 2: 	 assign_stmt_1576_to_assign_stmt_1794/MUX_1688_update_completed_
      -- 
    ack_500_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => MUX_1688_inst_ack_1, ack => selectTrap_CP_481_elements(2)); -- 
    -- CP-element group 3:  transition  input  bypass 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: 	0 
    -- CP-element group 3: successors 
    -- CP-element group 3:  members (3) 
      -- CP-element group 3: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1692_Sample/ack
      -- CP-element group 3: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1692_Sample/$exit
      -- CP-element group 3: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1692_sample_completed_
      -- 
    ack_509_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 3_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_iTV_d_1690_inst_ack_0, ack => selectTrap_CP_481_elements(3)); -- 
    -- CP-element group 4:  transition  input  bypass 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: 	0 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	7 
    -- CP-element group 4:  members (3) 
      -- CP-element group 4: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1692_update_completed_
      -- CP-element group 4: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1692_Update/$exit
      -- CP-element group 4: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1692_Update/ack
      -- 
    ack_514_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 4_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_iTV_d_1690_inst_ack_1, ack => selectTrap_CP_481_elements(4)); -- 
    -- CP-element group 5:  transition  input  bypass 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	0 
    -- CP-element group 5: successors 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1781_sample_completed_
      -- CP-element group 5: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1781_Sample/ack
      -- CP-element group 5: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1781_Sample/$exit
      -- 
    ack_523_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 5_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_oTV_1779_inst_ack_0, ack => selectTrap_CP_481_elements(5)); -- 
    -- CP-element group 6:  transition  input  bypass 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	0 
    -- CP-element group 6: successors 
    -- CP-element group 6: 	12 
    -- CP-element group 6:  members (3) 
      -- CP-element group 6: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1781_Update/ack
      -- CP-element group 6: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1781_Update/$exit
      -- CP-element group 6: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1781_update_completed_
      -- 
    ack_528_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 6_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_oTV_1779_inst_ack_1, ack => selectTrap_CP_481_elements(6)); -- 
    -- CP-element group 7:  join  transition  output  bypass 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	4 
    -- CP-element group 7: 	2 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	8 
    -- CP-element group 7:  members (3) 
      -- CP-element group 7: 	 assign_stmt_1576_to_assign_stmt_1794/OR_u32_u32_1790_sample_start_
      -- CP-element group 7: 	 assign_stmt_1576_to_assign_stmt_1794/OR_u32_u32_1790_Sample/rr
      -- CP-element group 7: 	 assign_stmt_1576_to_assign_stmt_1794/OR_u32_u32_1790_Sample/$entry
      -- 
    rr_536_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_536_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => selectTrap_CP_481_elements(7), ack => OR_u32_u32_1790_inst_req_0); -- 
    selectTrap_cp_element_group_7: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 29) := "selectTrap_cp_element_group_7"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= selectTrap_CP_481_elements(4) & selectTrap_CP_481_elements(2);
      gj_selectTrap_cp_element_group_7 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => selectTrap_CP_481_elements(7), clk => clk, reset => reset); --
    end block;
    -- CP-element group 8:  transition  input  bypass 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	7 
    -- CP-element group 8: successors 
    -- CP-element group 8:  members (3) 
      -- CP-element group 8: 	 assign_stmt_1576_to_assign_stmt_1794/OR_u32_u32_1790_sample_completed_
      -- CP-element group 8: 	 assign_stmt_1576_to_assign_stmt_1794/OR_u32_u32_1790_Sample/ra
      -- CP-element group 8: 	 assign_stmt_1576_to_assign_stmt_1794/OR_u32_u32_1790_Sample/$exit
      -- 
    ra_537_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 8_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => OR_u32_u32_1790_inst_ack_0, ack => selectTrap_CP_481_elements(8)); -- 
    -- CP-element group 9:  transition  input  bypass 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: 	0 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	12 
    -- CP-element group 9:  members (3) 
      -- CP-element group 9: 	 assign_stmt_1576_to_assign_stmt_1794/OR_u32_u32_1790_Update/$exit
      -- CP-element group 9: 	 assign_stmt_1576_to_assign_stmt_1794/OR_u32_u32_1790_Update/ca
      -- CP-element group 9: 	 assign_stmt_1576_to_assign_stmt_1794/OR_u32_u32_1790_update_completed_
      -- 
    ca_542_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 9_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => OR_u32_u32_1790_inst_ack_1, ack => selectTrap_CP_481_elements(9)); -- 
    -- CP-element group 10:  transition  input  bypass 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	0 
    -- CP-element group 10: successors 
    -- CP-element group 10:  members (3) 
      -- CP-element group 10: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1794_Sample/ack
      -- CP-element group 10: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1794_Sample/$exit
      -- CP-element group 10: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1794_sample_completed_
      -- 
    ack_551_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 10_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_oPMODE_1792_inst_ack_0, ack => selectTrap_CP_481_elements(10)); -- 
    -- CP-element group 11:  transition  input  bypass 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	0 
    -- CP-element group 11: successors 
    -- CP-element group 11: 	12 
    -- CP-element group 11:  members (3) 
      -- CP-element group 11: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1794_Update/ack
      -- CP-element group 11: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1794_Update/$exit
      -- CP-element group 11: 	 assign_stmt_1576_to_assign_stmt_1794/assign_stmt_1794_update_completed_
      -- 
    ack_556_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 11_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => W_oPMODE_1792_inst_ack_1, ack => selectTrap_CP_481_elements(11)); -- 
    -- CP-element group 12:  join  transition  bypass 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	6 
    -- CP-element group 12: 	11 
    -- CP-element group 12: 	9 
    -- CP-element group 12: successors 
    -- CP-element group 12:  members (2) 
      -- CP-element group 12: 	 assign_stmt_1576_to_assign_stmt_1794/$exit
      -- CP-element group 12: 	 $exit
      -- 
    selectTrap_cp_element_group_12: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 0);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 30) := "selectTrap_cp_element_group_12"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= selectTrap_CP_481_elements(6) & selectTrap_CP_481_elements(11) & selectTrap_CP_481_elements(9);
      gj_selectTrap_cp_element_group_12 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => selectTrap_CP_481_elements(12), clk => clk, reset => reset); --
    end block;
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal AND_u32_u32_1785_wire : std_logic_vector(31 downto 0);
    signal BITSEL_u32_u1_1619_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1629_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1637_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1645_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1653_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1661_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1669_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1677_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1685_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1696_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1704_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1712_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1720_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1728_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1736_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1744_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1752_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1760_wire : std_logic_vector(0 downto 0);
    signal BITSEL_u32_u1_1768_wire : std_logic_vector(0 downto 0);
    signal CONCAT_u1_u8_1622_wire : std_logic_vector(7 downto 0);
    signal CONCAT_u4_u8_1612_wire : std_logic_vector(7 downto 0);
    signal NEQ_u4_u1_1609_wire : std_logic_vector(0 downto 0);
    signal NOT_u1_u1_1594_wire : std_logic_vector(0 downto 0);
    signal OR_u1_u1_1593_wire : std_logic_vector(0 downto 0);
    signal R_CP_DISABLED_TRAP_INDEX_1711_wire_constant : std_logic_vector(31 downto 0);
    signal R_CP_EXCEPTION_TRAP_INDEX_1660_wire_constant : std_logic_vector(31 downto 0);
    signal R_DATA_ACCESS_ERROR_TRAP_INDEX_1652_wire_constant : std_logic_vector(31 downto 0);
    signal R_DATA_ACCESS_EXCEPTION_TRAP_INDEX_1644_wire_constant : std_logic_vector(31 downto 0);
    signal R_DATA_STORE_ERROR_TRAP_INDEX_1767_wire_constant : std_logic_vector(31 downto 0);
    signal R_DIVISION_BY_ZERO_TRAP_INDEX_1628_wire_constant : std_logic_vector(31 downto 0);
    signal R_FP_DISABLED_TRAP_INDEX_1719_wire_constant : std_logic_vector(31 downto 0);
    signal R_FP_EXCEPTION_TRAP_INDEX_1668_wire_constant : std_logic_vector(31 downto 0);
    signal R_ILLEGAL_INSTRUCTION_TRAP_INDEX_1727_wire_constant : std_logic_vector(31 downto 0);
    signal R_INSTRUCTION_ACCESS_ERROR_TRAP_INDEX_1759_wire_constant : std_logic_vector(31 downto 0);
    signal R_INSTRUCTION_ACCESS_EXCEPTION_TRAP_INDEX_1743_wire_constant : std_logic_vector(31 downto 0);
    signal R_MEM_ADDRESS_NOT_ALIGNED_TRAP_INDEX_1676_wire_constant : std_logic_vector(31 downto 0);
    signal R_ONE_1_1620_wire_constant : std_logic_vector(0 downto 0);
    signal R_ONE_4_1610_wire_constant : std_logic_vector(3 downto 0);
    signal R_PRIVILEGED_INSTRUCTION_TRAP_INDEX_1735_wire_constant : std_logic_vector(31 downto 0);
    signal R_PROCESSOR_ERROR_MODE_1595_wire_constant : std_logic_vector(1 downto 0);
    signal R_PROCESSOR_ERROR_MODE_1601_wire_constant : std_logic_vector(1 downto 0);
    signal R_RESET_TRAP_TRAP_INDEX_1587_wire_constant : std_logic_vector(31 downto 0);
    signal R_R_REGISTER_ACCESS_ERROR_TRAP_INDEX_1751_wire_constant : std_logic_vector(31 downto 0);
    signal R_TAG_OVERFLOW_TRAP_INDEX_1636_wire_constant : std_logic_vector(31 downto 0);
    signal R_TRAP_INSTRUCTION_TRAP_INDEX_1618_wire_constant : std_logic_vector(31 downto 0);
    signal R_TT_MASK_1784_wire_constant : std_logic_vector(31 downto 0);
    signal R_UNIMPLEMENTED_FLUSH_TRAP_INDEX_1703_wire_constant : std_logic_vector(31 downto 0);
    signal R_WINDOW_OVERFLOW_TRAP_INDEX_1695_wire_constant : std_logic_vector(31 downto 0);
    signal R_WINDOW_UNDERFLOW_TRAP_INDEX_1684_wire_constant : std_logic_vector(31 downto 0);
    signal R_tt_21_1613_wire_constant : std_logic_vector(7 downto 0);
    signal R_tt_21_1775_wire_constant : std_logic_vector(7 downto 0);
    signal SHL_u32_u32_1789_wire : std_logic_vector(31 downto 0);
    signal iTV_d_1692 : std_logic_vector(31 downto 0);
    signal in_error_1603 : std_logic_vector(0 downto 0);
    signal konst_1608_wire_constant : std_logic_vector(3 downto 0);
    signal konst_1630_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1638_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1646_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1654_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1662_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1670_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1678_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1686_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1697_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1705_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1713_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1721_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1729_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1737_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1745_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1753_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1761_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1769_wire_constant : std_logic_vector(7 downto 0);
    signal konst_1788_wire_constant : std_logic_vector(31 downto 0);
    signal oPMODE_v_1598 : std_logic_vector(1 downto 0);
    signal reset_trap_1589 : std_logic_vector(0 downto 0);
    signal trace_on_flag_1576 : std_logic_vector(0 downto 0);
    signal tt_10_1700 : std_logic_vector(7 downto 0);
    signal tt_11_1689 : std_logic_vector(7 downto 0);
    signal tt_12_1681 : std_logic_vector(7 downto 0);
    signal tt_13_1673 : std_logic_vector(7 downto 0);
    signal tt_14_1665 : std_logic_vector(7 downto 0);
    signal tt_15_1657 : std_logic_vector(7 downto 0);
    signal tt_16_1649 : std_logic_vector(7 downto 0);
    signal tt_17_1641 : std_logic_vector(7 downto 0);
    signal tt_18_1633 : std_logic_vector(7 downto 0);
    signal tt_19_1625 : std_logic_vector(7 downto 0);
    signal tt_1_1772 : std_logic_vector(7 downto 0);
    signal tt_20_1615 : std_logic_vector(7 downto 0);
    signal tt_2_1764 : std_logic_vector(7 downto 0);
    signal tt_3_1756 : std_logic_vector(7 downto 0);
    signal tt_4_1748 : std_logic_vector(7 downto 0);
    signal tt_5_1740 : std_logic_vector(7 downto 0);
    signal tt_6_1732 : std_logic_vector(7 downto 0);
    signal tt_7_1724 : std_logic_vector(7 downto 0);
    signal tt_8_1716 : std_logic_vector(7 downto 0);
    signal tt_9_1708 : std_logic_vector(7 downto 0);
    signal tt_final_1778 : std_logic_vector(7 downto 0);
    signal type_cast_1787_wire : std_logic_vector(31 downto 0);
    -- 
  begin -- 
    R_CP_DISABLED_TRAP_INDEX_1711_wire_constant <= "00000000000000000000000000001100";
    R_CP_EXCEPTION_TRAP_INDEX_1660_wire_constant <= "00000000000000000000000000010010";
    R_DATA_ACCESS_ERROR_TRAP_INDEX_1652_wire_constant <= "00000000000000000000000000010011";
    R_DATA_ACCESS_EXCEPTION_TRAP_INDEX_1644_wire_constant <= "00000000000000000000000000010100";
    R_DATA_STORE_ERROR_TRAP_INDEX_1767_wire_constant <= "00000000000000000000000000000101";
    R_DIVISION_BY_ZERO_TRAP_INDEX_1628_wire_constant <= "00000000000000000000000000010110";
    R_FP_DISABLED_TRAP_INDEX_1719_wire_constant <= "00000000000000000000000000001011";
    R_FP_EXCEPTION_TRAP_INDEX_1668_wire_constant <= "00000000000000000000000000010001";
    R_ILLEGAL_INSTRUCTION_TRAP_INDEX_1727_wire_constant <= "00000000000000000000000000001001";
    R_INSTRUCTION_ACCESS_ERROR_TRAP_INDEX_1759_wire_constant <= "00000000000000000000000000000110";
    R_INSTRUCTION_ACCESS_EXCEPTION_TRAP_INDEX_1743_wire_constant <= "00000000000000000000000000000100";
    R_MEM_ADDRESS_NOT_ALIGNED_TRAP_INDEX_1676_wire_constant <= "00000000000000000000000000010000";
    R_ONE_1_1620_wire_constant <= "1";
    R_ONE_4_1610_wire_constant <= "0001";
    R_PRIVILEGED_INSTRUCTION_TRAP_INDEX_1735_wire_constant <= "00000000000000000000000000001000";
    R_PROCESSOR_ERROR_MODE_1595_wire_constant <= "11";
    R_PROCESSOR_ERROR_MODE_1601_wire_constant <= "11";
    R_RESET_TRAP_TRAP_INDEX_1587_wire_constant <= "00000000000000000000000000000001";
    R_R_REGISTER_ACCESS_ERROR_TRAP_INDEX_1751_wire_constant <= "00000000000000000000000000000111";
    R_TAG_OVERFLOW_TRAP_INDEX_1636_wire_constant <= "00000000000000000000000000010101";
    R_TRAP_INSTRUCTION_TRAP_INDEX_1618_wire_constant <= "00000000000000000000000000010111";
    R_TT_MASK_1784_wire_constant <= "11111111111111111111000000001111";
    R_UNIMPLEMENTED_FLUSH_TRAP_INDEX_1703_wire_constant <= "00000000000000000000000000001101";
    R_WINDOW_OVERFLOW_TRAP_INDEX_1695_wire_constant <= "00000000000000000000000000001110";
    R_WINDOW_UNDERFLOW_TRAP_INDEX_1684_wire_constant <= "00000000000000000000000000001111";
    R_tt_21_1613_wire_constant <= "00000000";
    R_tt_21_1775_wire_constant <= "00000000";
    konst_1608_wire_constant <= "0000";
    konst_1630_wire_constant <= "00101010";
    konst_1638_wire_constant <= "00001010";
    konst_1646_wire_constant <= "00001001";
    konst_1654_wire_constant <= "00101001";
    konst_1662_wire_constant <= "00101000";
    konst_1670_wire_constant <= "00001000";
    konst_1678_wire_constant <= "00000111";
    konst_1686_wire_constant <= "00000110";
    konst_1697_wire_constant <= "00000101";
    konst_1705_wire_constant <= "00100101";
    konst_1713_wire_constant <= "00100100";
    konst_1721_wire_constant <= "00000100";
    konst_1729_wire_constant <= "00000010";
    konst_1737_wire_constant <= "00000011";
    konst_1745_wire_constant <= "00000001";
    konst_1753_wire_constant <= "00100000";
    konst_1761_wire_constant <= "00100001";
    konst_1769_wire_constant <= "00101011";
    konst_1788_wire_constant <= "00000000000000000000000000000100";
    trace_on_flag_1576 <= "1";
    -- flow-through select operator MUX_1597_inst
    oPMODE_v_1598 <= R_PROCESSOR_ERROR_MODE_1595_wire_constant when (NOT_u1_u1_1594_wire(0) /=  '0') else iPMODE_buffer;
    -- flow-through select operator MUX_1614_inst
    tt_20_1615 <= CONCAT_u4_u8_1612_wire when (NEQ_u4_u1_1609_wire(0) /=  '0') else R_tt_21_1613_wire_constant;
    -- flow-through select operator MUX_1624_inst
    tt_19_1625 <= CONCAT_u1_u8_1622_wire when (BITSEL_u32_u1_1619_wire(0) /=  '0') else tt_20_1615;
    -- flow-through select operator MUX_1632_inst
    tt_18_1633 <= konst_1630_wire_constant when (BITSEL_u32_u1_1629_wire(0) /=  '0') else tt_19_1625;
    -- flow-through select operator MUX_1640_inst
    tt_17_1641 <= konst_1638_wire_constant when (BITSEL_u32_u1_1637_wire(0) /=  '0') else tt_18_1633;
    -- flow-through select operator MUX_1648_inst
    tt_16_1649 <= konst_1646_wire_constant when (BITSEL_u32_u1_1645_wire(0) /=  '0') else tt_17_1641;
    -- flow-through select operator MUX_1656_inst
    tt_15_1657 <= konst_1654_wire_constant when (BITSEL_u32_u1_1653_wire(0) /=  '0') else tt_16_1649;
    -- flow-through select operator MUX_1664_inst
    tt_14_1665 <= konst_1662_wire_constant when (BITSEL_u32_u1_1661_wire(0) /=  '0') else tt_15_1657;
    -- flow-through select operator MUX_1672_inst
    tt_13_1673 <= konst_1670_wire_constant when (BITSEL_u32_u1_1669_wire(0) /=  '0') else tt_14_1665;
    -- flow-through select operator MUX_1680_inst
    tt_12_1681 <= konst_1678_wire_constant when (BITSEL_u32_u1_1677_wire(0) /=  '0') else tt_13_1673;
    MUX_1688_inst_block : block -- 
      signal sample_req, sample_ack, update_req, update_ack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      sample_req(0) <= MUX_1688_inst_req_0;
      MUX_1688_inst_ack_0<= sample_ack(0);
      update_req(0) <= MUX_1688_inst_req_1;
      MUX_1688_inst_ack_1<= update_ack(0);
      MUX_1688_inst: SelectSplitProtocol generic map(name => "MUX_1688_inst", data_width => 8, buffering => 1, flow_through => false, full_rate => false) -- 
        port map( x => konst_1686_wire_constant, y => tt_12_1681, sel => BITSEL_u32_u1_1685_wire, z => tt_11_1689, sample_req => sample_req(0), sample_ack => sample_ack(0), update_req => update_req(0), update_ack => update_ack(0), clk => clk, reset => reset); -- 
      -- 
    end block;
    -- flow-through select operator MUX_1699_inst
    tt_10_1700 <= konst_1697_wire_constant when (BITSEL_u32_u1_1696_wire(0) /=  '0') else tt_11_1689;
    -- flow-through select operator MUX_1707_inst
    tt_9_1708 <= konst_1705_wire_constant when (BITSEL_u32_u1_1704_wire(0) /=  '0') else tt_10_1700;
    -- flow-through select operator MUX_1715_inst
    tt_8_1716 <= konst_1713_wire_constant when (BITSEL_u32_u1_1712_wire(0) /=  '0') else tt_9_1708;
    -- flow-through select operator MUX_1723_inst
    tt_7_1724 <= konst_1721_wire_constant when (BITSEL_u32_u1_1720_wire(0) /=  '0') else tt_8_1716;
    -- flow-through select operator MUX_1731_inst
    tt_6_1732 <= konst_1729_wire_constant when (BITSEL_u32_u1_1728_wire(0) /=  '0') else tt_7_1724;
    -- flow-through select operator MUX_1739_inst
    tt_5_1740 <= konst_1737_wire_constant when (BITSEL_u32_u1_1736_wire(0) /=  '0') else tt_6_1732;
    -- flow-through select operator MUX_1747_inst
    tt_4_1748 <= konst_1745_wire_constant when (BITSEL_u32_u1_1744_wire(0) /=  '0') else tt_5_1740;
    -- flow-through select operator MUX_1755_inst
    tt_3_1756 <= konst_1753_wire_constant when (BITSEL_u32_u1_1752_wire(0) /=  '0') else tt_4_1748;
    -- flow-through select operator MUX_1763_inst
    tt_2_1764 <= konst_1761_wire_constant when (BITSEL_u32_u1_1760_wire(0) /=  '0') else tt_3_1756;
    -- flow-through select operator MUX_1771_inst
    tt_1_1772 <= konst_1769_wire_constant when (BITSEL_u32_u1_1768_wire(0) /=  '0') else tt_2_1764;
    -- flow-through select operator MUX_1777_inst
    tt_final_1778 <= R_tt_21_1775_wire_constant when (reset_trap_1589(0) /=  '0') else tt_1_1772;
    W_iTV_d_1690_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_iTV_d_1690_inst_req_0;
      W_iTV_d_1690_inst_ack_0<= wack(0);
      rreq(0) <= W_iTV_d_1690_inst_req_1;
      W_iTV_d_1690_inst_ack_1<= rack(0);
      W_iTV_d_1690_inst : InterlockBuffer generic map ( -- 
        name => "W_iTV_d_1690_inst",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => iTV_buffer,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => iTV_d_1692,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_oPMODE_1792_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_oPMODE_1792_inst_req_0;
      W_oPMODE_1792_inst_ack_0<= wack(0);
      rreq(0) <= W_oPMODE_1792_inst_req_1;
      W_oPMODE_1792_inst_ack_1<= rack(0);
      W_oPMODE_1792_inst : InterlockBuffer generic map ( -- 
        name => "W_oPMODE_1792_inst",
        buffer_size => 2,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 2,
        out_data_width => 2,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => oPMODE_v_1598,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => oPMODE_buffer,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    W_oTV_1779_inst_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= W_oTV_1779_inst_req_0;
      W_oTV_1779_inst_ack_0<= wack(0);
      rreq(0) <= W_oTV_1779_inst_req_1;
      W_oTV_1779_inst_ack_1<= rack(0);
      W_oTV_1779_inst : InterlockBuffer generic map ( -- 
        name => "W_oTV_1779_inst",
        buffer_size => 2,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 32,
        out_data_width => 32,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => iTV_buffer,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => oTV_buffer,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    -- interlock type_cast_1787_inst
    process(tt_final_1778) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      tmp_var := (others => '0'); 
      tmp_var( 7 downto 0) := tt_final_1778(7 downto 0);
      type_cast_1787_wire <= tmp_var; -- 
    end process;
    -- flow through binary operator AND_u32_u32_1785_inst
    AND_u32_u32_1785_wire <= (iTBR_buffer and R_TT_MASK_1784_wire_constant);
    -- flow through binary operator BITSEL_u32_u1_1588_inst
    process(iTV_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_buffer, R_RESET_TRAP_TRAP_INDEX_1587_wire_constant, tmp_var);
      reset_trap_1589 <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1619_inst
    process(iTV_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_buffer, R_TRAP_INSTRUCTION_TRAP_INDEX_1618_wire_constant, tmp_var);
      BITSEL_u32_u1_1619_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1629_inst
    process(iTV_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_buffer, R_DIVISION_BY_ZERO_TRAP_INDEX_1628_wire_constant, tmp_var);
      BITSEL_u32_u1_1629_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1637_inst
    process(iTV_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_buffer, R_TAG_OVERFLOW_TRAP_INDEX_1636_wire_constant, tmp_var);
      BITSEL_u32_u1_1637_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1645_inst
    process(iTV_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_buffer, R_DATA_ACCESS_EXCEPTION_TRAP_INDEX_1644_wire_constant, tmp_var);
      BITSEL_u32_u1_1645_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1653_inst
    process(iTV_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_buffer, R_DATA_ACCESS_ERROR_TRAP_INDEX_1652_wire_constant, tmp_var);
      BITSEL_u32_u1_1653_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1661_inst
    process(iTV_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_buffer, R_CP_EXCEPTION_TRAP_INDEX_1660_wire_constant, tmp_var);
      BITSEL_u32_u1_1661_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1669_inst
    process(iTV_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_buffer, R_FP_EXCEPTION_TRAP_INDEX_1668_wire_constant, tmp_var);
      BITSEL_u32_u1_1669_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1677_inst
    process(iTV_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_buffer, R_MEM_ADDRESS_NOT_ALIGNED_TRAP_INDEX_1676_wire_constant, tmp_var);
      BITSEL_u32_u1_1677_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1685_inst
    process(iTV_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_buffer, R_WINDOW_UNDERFLOW_TRAP_INDEX_1684_wire_constant, tmp_var);
      BITSEL_u32_u1_1685_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1696_inst
    process(iTV_d_1692) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_d_1692, R_WINDOW_OVERFLOW_TRAP_INDEX_1695_wire_constant, tmp_var);
      BITSEL_u32_u1_1696_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1704_inst
    process(iTV_d_1692) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_d_1692, R_UNIMPLEMENTED_FLUSH_TRAP_INDEX_1703_wire_constant, tmp_var);
      BITSEL_u32_u1_1704_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1712_inst
    process(iTV_d_1692) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_d_1692, R_CP_DISABLED_TRAP_INDEX_1711_wire_constant, tmp_var);
      BITSEL_u32_u1_1712_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1720_inst
    process(iTV_d_1692) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_d_1692, R_FP_DISABLED_TRAP_INDEX_1719_wire_constant, tmp_var);
      BITSEL_u32_u1_1720_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1728_inst
    process(iTV_d_1692) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_d_1692, R_ILLEGAL_INSTRUCTION_TRAP_INDEX_1727_wire_constant, tmp_var);
      BITSEL_u32_u1_1728_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1736_inst
    process(iTV_d_1692) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_d_1692, R_PRIVILEGED_INSTRUCTION_TRAP_INDEX_1735_wire_constant, tmp_var);
      BITSEL_u32_u1_1736_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1744_inst
    process(iTV_d_1692) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_d_1692, R_INSTRUCTION_ACCESS_EXCEPTION_TRAP_INDEX_1743_wire_constant, tmp_var);
      BITSEL_u32_u1_1744_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1752_inst
    process(iTV_d_1692) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_d_1692, R_R_REGISTER_ACCESS_ERROR_TRAP_INDEX_1751_wire_constant, tmp_var);
      BITSEL_u32_u1_1752_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1760_inst
    process(iTV_d_1692) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_d_1692, R_INSTRUCTION_ACCESS_ERROR_TRAP_INDEX_1759_wire_constant, tmp_var);
      BITSEL_u32_u1_1760_wire <= tmp_var; --
    end process;
    -- flow through binary operator BITSEL_u32_u1_1768_inst
    process(iTV_d_1692) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(iTV_d_1692, R_DATA_STORE_ERROR_TRAP_INDEX_1767_wire_constant, tmp_var);
      BITSEL_u32_u1_1768_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u1_u8_1622_inst
    process(R_ONE_1_1620_wire_constant, iTICC_TRAP_TYPE_buffer) -- 
      variable tmp_var : std_logic_vector(7 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ONE_1_1620_wire_constant, iTICC_TRAP_TYPE_buffer, tmp_var);
      CONCAT_u1_u8_1622_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u4_u8_1612_inst
    process(R_ONE_4_1610_wire_constant, iILVL_buffer) -- 
      variable tmp_var : std_logic_vector(7 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ONE_4_1610_wire_constant, iILVL_buffer, tmp_var);
      CONCAT_u4_u8_1612_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u2_u1_1602_inst
    process(oPMODE_v_1598) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(oPMODE_v_1598, R_PROCESSOR_ERROR_MODE_1601_wire_constant, tmp_var);
      in_error_1603 <= tmp_var; --
    end process;
    -- flow through binary operator NEQ_u4_u1_1609_inst
    process(iILVL_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntNe_proc(iILVL_buffer, konst_1608_wire_constant, tmp_var);
      NEQ_u4_u1_1609_wire <= tmp_var; --
    end process;
    -- unary operator NOT_u1_u1_1594_inst
    process(OR_u1_u1_1593_wire) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      SingleInputOperation("ApIntNot", OR_u1_u1_1593_wire, tmp_var);
      NOT_u1_u1_1594_wire <= tmp_var; -- 
    end process;
    -- flow through binary operator OR_u1_u1_1593_inst
    OR_u1_u1_1593_wire <= (reset_trap_1589 or iET_buffer);
    -- shared split operator group (27) : OR_u32_u32_1790_inst 
    ApIntOr_group_27: Block -- 
      signal data_in: std_logic_vector(63 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 2);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= AND_u32_u32_1785_wire & SHL_u32_u32_1789_wire;
      oTBR_buffer <= data_out(31 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= OR_u32_u32_1790_inst_req_0;
      OR_u32_u32_1790_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= OR_u32_u32_1790_inst_req_1;
      OR_u32_u32_1790_inst_ack_1 <= ackR_unguarded(0);
      ApIntOr_group_27_gI: SplitGuardInterface generic map(name => "ApIntOr_group_27_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApIntOr",
          name => "ApIntOr_group_27",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 32,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 32,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 2,
          flow_through => false,
          full_rate  => false,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 27
    -- flow through binary operator SHL_u32_u32_1789_inst
    process(type_cast_1787_wire) -- 
      variable tmp_var : std_logic_vector(31 downto 0); -- 
    begin -- 
      ApIntSHL_proc(type_cast_1787_wire, konst_1788_wire_constant, tmp_var);
      SHL_u32_u32_1789_wire <= tmp_var; --
    end process;
    -- 
  end Block; -- data_path
  -- 
end selectTrap_Operator_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity send_ccu_daemon_to_ccu_debug_daemon is -- 
  generic (tag_length : integer); 
  port ( -- 
    command : in  std_logic_vector(31 downto 0);
    pc : in  std_logic_vector(31 downto 0);
    npc : in  std_logic_vector(31 downto 0);
    psr : in  std_logic_vector(31 downto 0);
    ccu_daemon_to_ccu_debug_daemon_pipe_write_req : out  std_logic_vector(0 downto 0);
    ccu_daemon_to_ccu_debug_daemon_pipe_write_ack : in   std_logic_vector(0 downto 0);
    ccu_daemon_to_ccu_debug_daemon_pipe_write_data : out  std_logic_vector(32 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity send_ccu_daemon_to_ccu_debug_daemon;
architecture send_ccu_daemon_to_ccu_debug_daemon_arch of send_ccu_daemon_to_ccu_debug_daemon is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 128)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 0)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal command_buffer :  std_logic_vector(31 downto 0);
  signal command_update_enable: Boolean;
  signal pc_buffer :  std_logic_vector(31 downto 0);
  signal pc_update_enable: Boolean;
  signal npc_buffer :  std_logic_vector(31 downto 0);
  signal npc_update_enable: Boolean;
  signal psr_buffer :  std_logic_vector(31 downto 0);
  signal psr_update_enable: Boolean;
  -- output port buffer signals
  signal send_ccu_daemon_to_ccu_debug_daemon_CP_557_start: Boolean;
  signal send_ccu_daemon_to_ccu_debug_daemon_CP_557_symbol: Boolean;
  -- volatile/operator module components. 
  -- links between control-path and data-path
  signal do_while_stmt_1808_branch_req_0 : boolean;
  signal phi_stmt_1810_req_0 : boolean;
  signal phi_stmt_1810_req_1 : boolean;
  signal phi_stmt_1810_ack_0 : boolean;
  signal nI_1820_1812_buf_req_0 : boolean;
  signal nI_1820_1812_buf_ack_0 : boolean;
  signal nI_1820_1812_buf_req_1 : boolean;
  signal nI_1820_1812_buf_ack_1 : boolean;
  signal CONCAT_u1_u33_1824_inst_req_0 : boolean;
  signal CONCAT_u1_u33_1824_inst_ack_0 : boolean;
  signal CONCAT_u1_u33_1824_inst_req_1 : boolean;
  signal CONCAT_u1_u33_1824_inst_ack_1 : boolean;
  signal CONCAT_u1_u33_1829_inst_req_0 : boolean;
  signal CONCAT_u1_u33_1829_inst_ack_0 : boolean;
  signal CONCAT_u1_u33_1829_inst_req_1 : boolean;
  signal CONCAT_u1_u33_1829_inst_ack_1 : boolean;
  signal CONCAT_u1_u33_1834_inst_req_0 : boolean;
  signal CONCAT_u1_u33_1834_inst_ack_0 : boolean;
  signal CONCAT_u1_u33_1834_inst_req_1 : boolean;
  signal CONCAT_u1_u33_1834_inst_ack_1 : boolean;
  signal CONCAT_u1_u33_1839_inst_req_0 : boolean;
  signal CONCAT_u1_u33_1839_inst_ack_0 : boolean;
  signal CONCAT_u1_u33_1839_inst_req_1 : boolean;
  signal CONCAT_u1_u33_1839_inst_ack_1 : boolean;
  signal WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_inst_req_0 : boolean;
  signal WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_inst_ack_0 : boolean;
  signal WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_inst_req_1 : boolean;
  signal WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_inst_ack_1 : boolean;
  signal do_while_stmt_1808_branch_ack_0 : boolean;
  signal do_while_stmt_1808_branch_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "send_ccu_daemon_to_ccu_debug_daemon_input_buffer", -- 
      buffer_size => 0,
      bypass_flag => true,
      data_width => tag_length + 128) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(31 downto 0) <= command;
  command_buffer <= in_buffer_data_out(31 downto 0);
  in_buffer_data_in(63 downto 32) <= pc;
  pc_buffer <= in_buffer_data_out(63 downto 32);
  in_buffer_data_in(95 downto 64) <= npc;
  npc_buffer <= in_buffer_data_out(95 downto 64);
  in_buffer_data_in(127 downto 96) <= psr;
  psr_buffer <= in_buffer_data_out(127 downto 96);
  in_buffer_data_in(tag_length + 127 downto 128) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 127 downto 128);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  send_ccu_daemon_to_ccu_debug_daemon_CP_557_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "send_ccu_daemon_to_ccu_debug_daemon_out_buffer", -- 
      buffer_size => 0,
      full_rate => false,
      data_width => tag_length + 0) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(tag_length-1 downto 0) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length-1 downto 0);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  send_ccu_daemon_to_ccu_debug_daemon_CP_557: Block -- control-path 
    signal send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements: BooleanArray(53 downto 0);
    -- 
  begin -- 
    send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(0) <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_start;
    send_ccu_daemon_to_ccu_debug_daemon_CP_557_symbol <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(1);
    -- CP-element group 0:  transition  place  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	2 
    -- CP-element group 0:  members (4) 
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 branch_block_stmt_1807/$entry
      -- CP-element group 0: 	 branch_block_stmt_1807/branch_block_stmt_1807__entry__
      -- CP-element group 0: 	 branch_block_stmt_1807/do_while_stmt_1808__entry__
      -- 
    -- CP-element group 1:  transition  place  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	53 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (4) 
      -- CP-element group 1: 	 $exit
      -- CP-element group 1: 	 branch_block_stmt_1807/$exit
      -- CP-element group 1: 	 branch_block_stmt_1807/branch_block_stmt_1807__exit__
      -- CP-element group 1: 	 branch_block_stmt_1807/do_while_stmt_1808__exit__
      -- 
    send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(1) <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(53);
    -- CP-element group 2:  transition  place  bypass  pipeline-parent 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2: 	8 
    -- CP-element group 2:  members (2) 
      -- CP-element group 2: 	 branch_block_stmt_1807/do_while_stmt_1808/$entry
      -- CP-element group 2: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808__entry__
      -- 
    send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(2) <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(0);
    -- CP-element group 3:  merge  place  bypass  pipeline-parent 
    -- CP-element group 3: predecessors 
    -- CP-element group 3: successors 
    -- CP-element group 3: 	53 
    -- CP-element group 3:  members (1) 
      -- CP-element group 3: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808__exit__
      -- 
    -- Element group send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(3) is bound as output of CP function.
    -- CP-element group 4:  merge  place  bypass  pipeline-parent 
    -- CP-element group 4: predecessors 
    -- CP-element group 4: successors 
    -- CP-element group 4: 	7 
    -- CP-element group 4:  members (1) 
      -- CP-element group 4: 	 branch_block_stmt_1807/do_while_stmt_1808/loop_back
      -- 
    -- Element group send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(4) is bound as output of CP function.
    -- CP-element group 5:  branch  transition  place  bypass  pipeline-parent 
    -- CP-element group 5: predecessors 
    -- CP-element group 5: 	10 
    -- CP-element group 5: successors 
    -- CP-element group 5: 	52 
    -- CP-element group 5: 	51 
    -- CP-element group 5:  members (3) 
      -- CP-element group 5: 	 branch_block_stmt_1807/do_while_stmt_1808/condition_done
      -- CP-element group 5: 	 branch_block_stmt_1807/do_while_stmt_1808/loop_exit/$entry
      -- CP-element group 5: 	 branch_block_stmt_1807/do_while_stmt_1808/loop_taken/$entry
      -- 
    send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(5) <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(10);
    -- CP-element group 6:  branch  place  bypass  pipeline-parent 
    -- CP-element group 6: predecessors 
    -- CP-element group 6: 	50 
    -- CP-element group 6: successors 
    -- CP-element group 6:  members (1) 
      -- CP-element group 6: 	 branch_block_stmt_1807/do_while_stmt_1808/loop_body_done
      -- 
    send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(6) <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(50);
    -- CP-element group 7:  transition  bypass  pipeline-parent 
    -- CP-element group 7: predecessors 
    -- CP-element group 7: 	4 
    -- CP-element group 7: successors 
    -- CP-element group 7: 	17 
    -- CP-element group 7:  members (1) 
      -- CP-element group 7: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/back_edge_to_loop_body
      -- 
    send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(7) <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(4);
    -- CP-element group 8:  transition  bypass  pipeline-parent 
    -- CP-element group 8: predecessors 
    -- CP-element group 8: 	2 
    -- CP-element group 8: successors 
    -- CP-element group 8: 	19 
    -- CP-element group 8:  members (1) 
      -- CP-element group 8: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/first_time_through_loop_body
      -- 
    send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(8) <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(2);
    -- CP-element group 9:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 9: predecessors 
    -- CP-element group 9: successors 
    -- CP-element group 9: 	49 
    -- CP-element group 9: 	13 
    -- CP-element group 9: 	14 
    -- CP-element group 9: 	30 
    -- CP-element group 9: 	34 
    -- CP-element group 9: 	38 
    -- CP-element group 9: 	42 
    -- CP-element group 9:  members (2) 
      -- CP-element group 9: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/$entry
      -- CP-element group 9: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/loop_body_start
      -- 
    -- Element group send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(9) is bound as output of CP function.
    -- CP-element group 10:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 10: predecessors 
    -- CP-element group 10: 	49 
    -- CP-element group 10: 	12 
    -- CP-element group 10: 	16 
    -- CP-element group 10: successors 
    -- CP-element group 10: 	5 
    -- CP-element group 10:  members (1) 
      -- CP-element group 10: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/condition_evaluated
      -- 
    condition_evaluated_581_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " condition_evaluated_581_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(10), ack => do_while_stmt_1808_branch_req_0); -- 
    send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_10: block -- 
      constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
      constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 0,2 => 0);
      constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
      constant joinName: string(1 to 55) := "send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_10"; 
      signal preds: BooleanArray(1 to 3); -- 
    begin -- 
      preds <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(49) & send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(12) & send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(16);
      gj_send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_10 : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(10), clk => clk, reset => reset); --
    end block;
    -- CP-element group 11:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 11: predecessors 
    -- CP-element group 11: 	13 
    -- CP-element group 11: marked-predecessors 
    -- CP-element group 11: 	16 
    -- CP-element group 11: successors 
    -- CP-element group 11:  members (2) 
      -- CP-element group 11: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/aggregated_phi_sample_req
      -- CP-element group 11: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/phi_stmt_1810_sample_start__ps
      -- 
    send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_11: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 55) := "send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_11"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(13) & send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(16);
      gj_send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_11 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(11), clk => clk, reset => reset); --
    end block;
    -- CP-element group 12:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 12: predecessors 
    -- CP-element group 12: 	15 
    -- CP-element group 12: successors 
    -- CP-element group 12: 	10 
    -- CP-element group 12:  members (1) 
      -- CP-element group 12: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/aggregated_phi_sample_ack_d
      -- 
    -- Element group send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(12) is a control-delay.
    cp_element_12_delay: control_delay_element  generic map(name => " 12_delay", delay_value => 1)  port map(req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(15), ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(12), clk => clk, reset =>reset);
    -- CP-element group 13:  join  transition  bypass  pipeline-parent 
    -- CP-element group 13: predecessors 
    -- CP-element group 13: 	9 
    -- CP-element group 13: marked-predecessors 
    -- CP-element group 13: 	15 
    -- CP-element group 13: successors 
    -- CP-element group 13: 	11 
    -- CP-element group 13:  members (1) 
      -- CP-element group 13: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/phi_stmt_1810_sample_start_
      -- 
    send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_13: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 55) := "send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_13"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(9) & send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(15);
      gj_send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_13 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(13), clk => clk, reset => reset); --
    end block;
    -- CP-element group 14:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 14: predecessors 
    -- CP-element group 14: 	9 
    -- CP-element group 14: marked-predecessors 
    -- CP-element group 14: 	47 
    -- CP-element group 14: successors 
    -- CP-element group 14:  members (3) 
      -- CP-element group 14: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/aggregated_phi_update_req
      -- CP-element group 14: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/phi_stmt_1810_update_start_
      -- CP-element group 14: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/phi_stmt_1810_update_start__ps
      -- 
    send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_14: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 55) := "send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_14"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(9) & send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(47);
      gj_send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_14 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(14), clk => clk, reset => reset); --
    end block;
    -- CP-element group 15:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 15: predecessors 
    -- CP-element group 15: successors 
    -- CP-element group 15: 	50 
    -- CP-element group 15: 	12 
    -- CP-element group 15: marked-successors 
    -- CP-element group 15: 	13 
    -- CP-element group 15:  members (3) 
      -- CP-element group 15: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/aggregated_phi_sample_ack
      -- CP-element group 15: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/phi_stmt_1810_sample_completed_
      -- CP-element group 15: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/phi_stmt_1810_sample_completed__ps
      -- 
    -- Element group send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(15) is bound as output of CP function.
    -- CP-element group 16:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 16: predecessors 
    -- CP-element group 16: successors 
    -- CP-element group 16: 	46 
    -- CP-element group 16: 	10 
    -- CP-element group 16: marked-successors 
    -- CP-element group 16: 	11 
    -- CP-element group 16:  members (3) 
      -- CP-element group 16: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/aggregated_phi_update_ack
      -- CP-element group 16: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/phi_stmt_1810_update_completed_
      -- CP-element group 16: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/phi_stmt_1810_update_completed__ps
      -- 
    -- Element group send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(16) is bound as output of CP function.
    -- CP-element group 17:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 17: predecessors 
    -- CP-element group 17: 	7 
    -- CP-element group 17: successors 
    -- CP-element group 17:  members (1) 
      -- CP-element group 17: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/phi_stmt_1810_loopback_trigger
      -- 
    send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(17) <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(7);
    -- CP-element group 18:  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 18: predecessors 
    -- CP-element group 18: successors 
    -- CP-element group 18:  members (2) 
      -- CP-element group 18: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/phi_stmt_1810_loopback_sample_req
      -- CP-element group 18: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/phi_stmt_1810_loopback_sample_req_ps
      -- 
    phi_stmt_1810_loopback_sample_req_597_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1810_loopback_sample_req_597_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(18), ack => phi_stmt_1810_req_0); -- 
    -- Element group send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(18) is bound as output of CP function.
    -- CP-element group 19:  fork  transition  bypass  pipeline-parent 
    -- CP-element group 19: predecessors 
    -- CP-element group 19: 	8 
    -- CP-element group 19: successors 
    -- CP-element group 19:  members (1) 
      -- CP-element group 19: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/phi_stmt_1810_entry_trigger
      -- 
    send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(19) <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(8);
    -- CP-element group 20:  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 20: predecessors 
    -- CP-element group 20: successors 
    -- CP-element group 20:  members (2) 
      -- CP-element group 20: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/phi_stmt_1810_entry_sample_req
      -- CP-element group 20: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/phi_stmt_1810_entry_sample_req_ps
      -- 
    phi_stmt_1810_entry_sample_req_600_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " phi_stmt_1810_entry_sample_req_600_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(20), ack => phi_stmt_1810_req_1); -- 
    -- Element group send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(20) is bound as output of CP function.
    -- CP-element group 21:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 21: predecessors 
    -- CP-element group 21: successors 
    -- CP-element group 21:  members (2) 
      -- CP-element group 21: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/phi_stmt_1810_phi_mux_ack
      -- CP-element group 21: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/phi_stmt_1810_phi_mux_ack_ps
      -- 
    phi_stmt_1810_phi_mux_ack_603_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 21_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => phi_stmt_1810_ack_0, ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(21)); -- 
    -- CP-element group 22:  join  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 22: predecessors 
    -- CP-element group 22: successors 
    -- CP-element group 22: 	24 
    -- CP-element group 22:  members (4) 
      -- CP-element group 22: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/R_nI_1812_sample_start__ps
      -- CP-element group 22: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/R_nI_1812_sample_start_
      -- CP-element group 22: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/R_nI_1812_Sample/$entry
      -- CP-element group 22: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/R_nI_1812_Sample/req
      -- 
    req_616_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_616_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(22), ack => nI_1820_1812_buf_req_0); -- 
    -- Element group send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(22) is bound as output of CP function.
    -- CP-element group 23:  join  fork  transition  output  bypass  pipeline-parent 
    -- CP-element group 23: predecessors 
    -- CP-element group 23: successors 
    -- CP-element group 23: 	25 
    -- CP-element group 23:  members (4) 
      -- CP-element group 23: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/R_nI_1812_update_start__ps
      -- CP-element group 23: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/R_nI_1812_update_start_
      -- CP-element group 23: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/R_nI_1812_Update/$entry
      -- CP-element group 23: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/R_nI_1812_Update/req
      -- 
    req_621_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_621_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(23), ack => nI_1820_1812_buf_req_1); -- 
    -- Element group send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(23) is bound as output of CP function.
    -- CP-element group 24:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 24: predecessors 
    -- CP-element group 24: 	22 
    -- CP-element group 24: successors 
    -- CP-element group 24:  members (4) 
      -- CP-element group 24: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/R_nI_1812_sample_completed__ps
      -- CP-element group 24: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/R_nI_1812_sample_completed_
      -- CP-element group 24: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/R_nI_1812_Sample/$exit
      -- CP-element group 24: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/R_nI_1812_Sample/ack
      -- 
    ack_617_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 24_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nI_1820_1812_buf_ack_0, ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(24)); -- 
    -- CP-element group 25:  join  transition  input  bypass  pipeline-parent 
    -- CP-element group 25: predecessors 
    -- CP-element group 25: 	23 
    -- CP-element group 25: successors 
    -- CP-element group 25:  members (4) 
      -- CP-element group 25: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/R_nI_1812_update_completed__ps
      -- CP-element group 25: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/R_nI_1812_update_completed_
      -- CP-element group 25: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/R_nI_1812_Update/$exit
      -- CP-element group 25: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/R_nI_1812_Update/ack
      -- 
    ack_622_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 25_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => nI_1820_1812_buf_ack_1, ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(25)); -- 
    -- CP-element group 26:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 26: predecessors 
    -- CP-element group 26: successors 
    -- CP-element group 26:  members (4) 
      -- CP-element group 26: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/type_cast_1814_sample_start__ps
      -- CP-element group 26: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/type_cast_1814_sample_completed__ps
      -- CP-element group 26: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/type_cast_1814_sample_start_
      -- CP-element group 26: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/type_cast_1814_sample_completed_
      -- 
    -- Element group send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(26) is bound as output of CP function.
    -- CP-element group 27:  join  fork  transition  bypass  pipeline-parent 
    -- CP-element group 27: predecessors 
    -- CP-element group 27: successors 
    -- CP-element group 27: 	29 
    -- CP-element group 27:  members (2) 
      -- CP-element group 27: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/type_cast_1814_update_start__ps
      -- CP-element group 27: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/type_cast_1814_update_start_
      -- 
    -- Element group send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(27) is bound as output of CP function.
    -- CP-element group 28:  join  transition  bypass  pipeline-parent 
    -- CP-element group 28: predecessors 
    -- CP-element group 28: 	29 
    -- CP-element group 28: successors 
    -- CP-element group 28:  members (1) 
      -- CP-element group 28: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/type_cast_1814_update_completed__ps
      -- 
    send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(28) <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(29);
    -- CP-element group 29:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 29: predecessors 
    -- CP-element group 29: 	27 
    -- CP-element group 29: successors 
    -- CP-element group 29: 	28 
    -- CP-element group 29:  members (1) 
      -- CP-element group 29: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/type_cast_1814_update_completed_
      -- 
    -- Element group send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(29) is a control-delay.
    cp_element_29_delay: control_delay_element  generic map(name => " 29_delay", delay_value => 1)  port map(req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(27), ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(29), clk => clk, reset =>reset);
    -- CP-element group 30:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 30: predecessors 
    -- CP-element group 30: 	9 
    -- CP-element group 30: marked-predecessors 
    -- CP-element group 30: 	32 
    -- CP-element group 30: successors 
    -- CP-element group 30: 	32 
    -- CP-element group 30:  members (3) 
      -- CP-element group 30: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1824_sample_start_
      -- CP-element group 30: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1824_Sample/$entry
      -- CP-element group 30: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1824_Sample/rr
      -- 
    rr_639_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_639_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(30), ack => CONCAT_u1_u33_1824_inst_req_0); -- 
    send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_30: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 55) := "send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_30"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(9) & send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(32);
      gj_send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_30 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(30), clk => clk, reset => reset); --
    end block;
    -- CP-element group 31:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 31: predecessors 
    -- CP-element group 31: marked-predecessors 
    -- CP-element group 31: 	47 
    -- CP-element group 31: successors 
    -- CP-element group 31: 	33 
    -- CP-element group 31:  members (3) 
      -- CP-element group 31: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1824_update_start_
      -- CP-element group 31: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1824_Update/$entry
      -- CP-element group 31: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1824_Update/cr
      -- 
    cr_644_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_644_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(31), ack => CONCAT_u1_u33_1824_inst_req_1); -- 
    send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_31: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 55) := "send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_31"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(47);
      gj_send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_31 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(31), clk => clk, reset => reset); --
    end block;
    -- CP-element group 32:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 32: predecessors 
    -- CP-element group 32: 	30 
    -- CP-element group 32: successors 
    -- CP-element group 32: marked-successors 
    -- CP-element group 32: 	30 
    -- CP-element group 32:  members (3) 
      -- CP-element group 32: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1824_sample_completed_
      -- CP-element group 32: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1824_Sample/$exit
      -- CP-element group 32: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1824_Sample/ra
      -- 
    ra_640_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 32_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u33_1824_inst_ack_0, ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(32)); -- 
    -- CP-element group 33:  transition  input  bypass  pipeline-parent 
    -- CP-element group 33: predecessors 
    -- CP-element group 33: 	31 
    -- CP-element group 33: successors 
    -- CP-element group 33: 	46 
    -- CP-element group 33:  members (3) 
      -- CP-element group 33: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1824_update_completed_
      -- CP-element group 33: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1824_Update/$exit
      -- CP-element group 33: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1824_Update/ca
      -- 
    ca_645_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 33_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u33_1824_inst_ack_1, ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(33)); -- 
    -- CP-element group 34:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 34: predecessors 
    -- CP-element group 34: 	9 
    -- CP-element group 34: marked-predecessors 
    -- CP-element group 34: 	36 
    -- CP-element group 34: successors 
    -- CP-element group 34: 	36 
    -- CP-element group 34:  members (3) 
      -- CP-element group 34: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1829_sample_start_
      -- CP-element group 34: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1829_Sample/$entry
      -- CP-element group 34: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1829_Sample/rr
      -- 
    rr_653_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_653_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(34), ack => CONCAT_u1_u33_1829_inst_req_0); -- 
    send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_34: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 55) := "send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_34"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(9) & send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(36);
      gj_send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_34 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(34), clk => clk, reset => reset); --
    end block;
    -- CP-element group 35:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 35: predecessors 
    -- CP-element group 35: marked-predecessors 
    -- CP-element group 35: 	47 
    -- CP-element group 35: successors 
    -- CP-element group 35: 	37 
    -- CP-element group 35:  members (3) 
      -- CP-element group 35: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1829_update_start_
      -- CP-element group 35: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1829_Update/$entry
      -- CP-element group 35: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1829_Update/cr
      -- 
    cr_658_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_658_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(35), ack => CONCAT_u1_u33_1829_inst_req_1); -- 
    send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_35: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 55) := "send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_35"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(47);
      gj_send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_35 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(35), clk => clk, reset => reset); --
    end block;
    -- CP-element group 36:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 36: predecessors 
    -- CP-element group 36: 	34 
    -- CP-element group 36: successors 
    -- CP-element group 36: marked-successors 
    -- CP-element group 36: 	34 
    -- CP-element group 36:  members (3) 
      -- CP-element group 36: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1829_sample_completed_
      -- CP-element group 36: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1829_Sample/$exit
      -- CP-element group 36: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1829_Sample/ra
      -- 
    ra_654_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 36_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u33_1829_inst_ack_0, ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(36)); -- 
    -- CP-element group 37:  transition  input  bypass  pipeline-parent 
    -- CP-element group 37: predecessors 
    -- CP-element group 37: 	35 
    -- CP-element group 37: successors 
    -- CP-element group 37: 	46 
    -- CP-element group 37:  members (3) 
      -- CP-element group 37: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1829_update_completed_
      -- CP-element group 37: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1829_Update/$exit
      -- CP-element group 37: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1829_Update/ca
      -- 
    ca_659_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 37_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u33_1829_inst_ack_1, ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(37)); -- 
    -- CP-element group 38:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 38: predecessors 
    -- CP-element group 38: 	9 
    -- CP-element group 38: marked-predecessors 
    -- CP-element group 38: 	40 
    -- CP-element group 38: successors 
    -- CP-element group 38: 	40 
    -- CP-element group 38:  members (3) 
      -- CP-element group 38: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1834_sample_start_
      -- CP-element group 38: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1834_Sample/$entry
      -- CP-element group 38: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1834_Sample/rr
      -- 
    rr_667_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_667_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(38), ack => CONCAT_u1_u33_1834_inst_req_0); -- 
    send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_38: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 55) := "send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_38"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(9) & send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(40);
      gj_send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_38 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(38), clk => clk, reset => reset); --
    end block;
    -- CP-element group 39:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 39: predecessors 
    -- CP-element group 39: marked-predecessors 
    -- CP-element group 39: 	47 
    -- CP-element group 39: successors 
    -- CP-element group 39: 	41 
    -- CP-element group 39:  members (3) 
      -- CP-element group 39: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1834_update_start_
      -- CP-element group 39: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1834_Update/$entry
      -- CP-element group 39: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1834_Update/cr
      -- 
    cr_672_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_672_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(39), ack => CONCAT_u1_u33_1834_inst_req_1); -- 
    send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_39: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 55) := "send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_39"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(47);
      gj_send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_39 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(39), clk => clk, reset => reset); --
    end block;
    -- CP-element group 40:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 40: predecessors 
    -- CP-element group 40: 	38 
    -- CP-element group 40: successors 
    -- CP-element group 40: marked-successors 
    -- CP-element group 40: 	38 
    -- CP-element group 40:  members (3) 
      -- CP-element group 40: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1834_sample_completed_
      -- CP-element group 40: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1834_Sample/$exit
      -- CP-element group 40: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1834_Sample/ra
      -- 
    ra_668_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 40_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u33_1834_inst_ack_0, ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(40)); -- 
    -- CP-element group 41:  transition  input  bypass  pipeline-parent 
    -- CP-element group 41: predecessors 
    -- CP-element group 41: 	39 
    -- CP-element group 41: successors 
    -- CP-element group 41: 	46 
    -- CP-element group 41:  members (3) 
      -- CP-element group 41: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1834_update_completed_
      -- CP-element group 41: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1834_Update/$exit
      -- CP-element group 41: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1834_Update/ca
      -- 
    ca_673_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 41_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u33_1834_inst_ack_1, ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(41)); -- 
    -- CP-element group 42:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 42: predecessors 
    -- CP-element group 42: 	9 
    -- CP-element group 42: marked-predecessors 
    -- CP-element group 42: 	44 
    -- CP-element group 42: successors 
    -- CP-element group 42: 	44 
    -- CP-element group 42:  members (3) 
      -- CP-element group 42: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1839_sample_start_
      -- CP-element group 42: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1839_Sample/$entry
      -- CP-element group 42: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1839_Sample/rr
      -- 
    rr_681_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " rr_681_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(42), ack => CONCAT_u1_u33_1839_inst_req_0); -- 
    send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_42: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 1);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
      constant joinName: string(1 to 55) := "send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_42"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(9) & send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(44);
      gj_send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_42 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(42), clk => clk, reset => reset); --
    end block;
    -- CP-element group 43:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 43: predecessors 
    -- CP-element group 43: marked-predecessors 
    -- CP-element group 43: 	47 
    -- CP-element group 43: successors 
    -- CP-element group 43: 	45 
    -- CP-element group 43:  members (3) 
      -- CP-element group 43: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1839_update_start_
      -- CP-element group 43: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1839_Update/$entry
      -- CP-element group 43: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1839_Update/cr
      -- 
    cr_686_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " cr_686_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(43), ack => CONCAT_u1_u33_1839_inst_req_1); -- 
    send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_43: block -- 
      constant place_capacities: IntegerArray(0 to 0) := (0 => 1);
      constant place_markings: IntegerArray(0 to 0)  := (0 => 1);
      constant place_delays: IntegerArray(0 to 0) := (0 => 0);
      constant joinName: string(1 to 55) := "send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_43"; 
      signal preds: BooleanArray(1 to 1); -- 
    begin -- 
      preds(1) <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(47);
      gj_send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_43 : generic_join generic map(name => joinName, number_of_predecessors => 1, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(43), clk => clk, reset => reset); --
    end block;
    -- CP-element group 44:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 44: predecessors 
    -- CP-element group 44: 	42 
    -- CP-element group 44: successors 
    -- CP-element group 44: marked-successors 
    -- CP-element group 44: 	42 
    -- CP-element group 44:  members (3) 
      -- CP-element group 44: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1839_sample_completed_
      -- CP-element group 44: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1839_Sample/$exit
      -- CP-element group 44: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1839_Sample/ra
      -- 
    ra_682_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 44_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u33_1839_inst_ack_0, ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(44)); -- 
    -- CP-element group 45:  transition  input  bypass  pipeline-parent 
    -- CP-element group 45: predecessors 
    -- CP-element group 45: 	43 
    -- CP-element group 45: successors 
    -- CP-element group 45: 	46 
    -- CP-element group 45:  members (3) 
      -- CP-element group 45: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1839_update_completed_
      -- CP-element group 45: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1839_Update/$exit
      -- CP-element group 45: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/CONCAT_u1_u33_1839_Update/ca
      -- 
    ca_687_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 45_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => CONCAT_u1_u33_1839_inst_ack_1, ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(45)); -- 
    -- CP-element group 46:  join  transition  output  bypass  pipeline-parent 
    -- CP-element group 46: predecessors 
    -- CP-element group 46: 	45 
    -- CP-element group 46: 	16 
    -- CP-element group 46: 	33 
    -- CP-element group 46: 	37 
    -- CP-element group 46: 	41 
    -- CP-element group 46: marked-predecessors 
    -- CP-element group 46: 	48 
    -- CP-element group 46: successors 
    -- CP-element group 46: 	47 
    -- CP-element group 46:  members (3) 
      -- CP-element group 46: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_sample_start_
      -- CP-element group 46: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_Sample/$entry
      -- CP-element group 46: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_Sample/req
      -- 
    req_695_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_695_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(46), ack => WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_inst_req_0); -- 
    send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_46: block -- 
      constant place_capacities: IntegerArray(0 to 5) := (0 => 1,1 => 1,2 => 1,3 => 1,4 => 1,5 => 1);
      constant place_markings: IntegerArray(0 to 5)  := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 1);
      constant place_delays: IntegerArray(0 to 5) := (0 => 0,1 => 0,2 => 0,3 => 0,4 => 0,5 => 0);
      constant joinName: string(1 to 55) := "send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_46"; 
      signal preds: BooleanArray(1 to 6); -- 
    begin -- 
      preds <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(45) & send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(16) & send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(33) & send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(37) & send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(41) & send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(48);
      gj_send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_46 : generic_join generic map(name => joinName, number_of_predecessors => 6, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(46), clk => clk, reset => reset); --
    end block;
    -- CP-element group 47:  fork  transition  input  output  bypass  pipeline-parent 
    -- CP-element group 47: predecessors 
    -- CP-element group 47: 	46 
    -- CP-element group 47: successors 
    -- CP-element group 47: 	48 
    -- CP-element group 47: marked-successors 
    -- CP-element group 47: 	14 
    -- CP-element group 47: 	31 
    -- CP-element group 47: 	35 
    -- CP-element group 47: 	39 
    -- CP-element group 47: 	43 
    -- CP-element group 47:  members (6) 
      -- CP-element group 47: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_sample_completed_
      -- CP-element group 47: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_update_start_
      -- CP-element group 47: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_Sample/$exit
      -- CP-element group 47: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_Sample/ack
      -- CP-element group 47: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_Update/$entry
      -- CP-element group 47: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_Update/req
      -- 
    ack_696_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 47_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_inst_ack_0, ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(47)); -- 
    req_700_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " req_700_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(47), ack => WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_inst_req_1); -- 
    -- CP-element group 48:  fork  transition  input  bypass  pipeline-parent 
    -- CP-element group 48: predecessors 
    -- CP-element group 48: 	47 
    -- CP-element group 48: successors 
    -- CP-element group 48: 	50 
    -- CP-element group 48: marked-successors 
    -- CP-element group 48: 	46 
    -- CP-element group 48:  members (3) 
      -- CP-element group 48: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_update_completed_
      -- CP-element group 48: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_Update/$exit
      -- CP-element group 48: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_Update/ack
      -- 
    ack_701_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 48_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_inst_ack_1, ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(48)); -- 
    -- CP-element group 49:  transition  delay-element  bypass  pipeline-parent 
    -- CP-element group 49: predecessors 
    -- CP-element group 49: 	9 
    -- CP-element group 49: successors 
    -- CP-element group 49: 	10 
    -- CP-element group 49:  members (1) 
      -- CP-element group 49: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/loop_body_delay_to_condition_start
      -- 
    -- Element group send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(49) is a control-delay.
    cp_element_49_delay: control_delay_element  generic map(name => " 49_delay", delay_value => 1)  port map(req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(9), ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(49), clk => clk, reset =>reset);
    -- CP-element group 50:  join  transition  bypass  pipeline-parent 
    -- CP-element group 50: predecessors 
    -- CP-element group 50: 	48 
    -- CP-element group 50: 	15 
    -- CP-element group 50: successors 
    -- CP-element group 50: 	6 
    -- CP-element group 50:  members (1) 
      -- CP-element group 50: 	 branch_block_stmt_1807/do_while_stmt_1808/do_while_stmt_1808_loop_body/$exit
      -- 
    send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_50: block -- 
      constant place_capacities: IntegerArray(0 to 1) := (0 => 7,1 => 7);
      constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 0);
      constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 0);
      constant joinName: string(1 to 55) := "send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_50"; 
      signal preds: BooleanArray(1 to 2); -- 
    begin -- 
      preds <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(48) & send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(15);
      gj_send_ccu_daemon_to_ccu_debug_daemon_cp_element_group_50 : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
        port map(preds => preds, symbol_out => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(50), clk => clk, reset => reset); --
    end block;
    -- CP-element group 51:  transition  input  bypass  pipeline-parent 
    -- CP-element group 51: predecessors 
    -- CP-element group 51: 	5 
    -- CP-element group 51: successors 
    -- CP-element group 51:  members (2) 
      -- CP-element group 51: 	 branch_block_stmt_1807/do_while_stmt_1808/loop_exit/$exit
      -- CP-element group 51: 	 branch_block_stmt_1807/do_while_stmt_1808/loop_exit/ack
      -- 
    ack_706_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 51_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => do_while_stmt_1808_branch_ack_0, ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(51)); -- 
    -- CP-element group 52:  transition  input  bypass  pipeline-parent 
    -- CP-element group 52: predecessors 
    -- CP-element group 52: 	5 
    -- CP-element group 52: successors 
    -- CP-element group 52:  members (2) 
      -- CP-element group 52: 	 branch_block_stmt_1807/do_while_stmt_1808/loop_taken/$exit
      -- CP-element group 52: 	 branch_block_stmt_1807/do_while_stmt_1808/loop_taken/ack
      -- 
    ack_710_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 52_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => do_while_stmt_1808_branch_ack_1, ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(52)); -- 
    -- CP-element group 53:  transition  bypass  pipeline-parent 
    -- CP-element group 53: predecessors 
    -- CP-element group 53: 	3 
    -- CP-element group 53: successors 
    -- CP-element group 53: 	1 
    -- CP-element group 53:  members (1) 
      -- CP-element group 53: 	 branch_block_stmt_1807/do_while_stmt_1808/$exit
      -- 
    send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(53) <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(3);
    send_ccu_daemon_to_ccu_debug_daemon_do_while_stmt_1808_terminator_711: loop_terminator -- 
      generic map (name => " send_ccu_daemon_to_ccu_debug_daemon_do_while_stmt_1808_terminator_711", max_iterations_in_flight =>7) 
      port map(loop_body_exit => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(6),loop_continue => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(52),loop_terminate => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(51),loop_back => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(4),loop_exit => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(3),clk => clk, reset => reset); -- 
    phi_stmt_1810_phi_seq_631_block : block -- 
      signal triggers, src_sample_reqs, src_sample_acks, src_update_reqs, src_update_acks : BooleanArray(0 to 1);
      signal phi_mux_reqs : BooleanArray(0 to 1); -- 
    begin -- 
      triggers(0)  <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(17);
      send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(22)<= src_sample_reqs(0);
      src_sample_acks(0)  <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(24);
      send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(23)<= src_update_reqs(0);
      src_update_acks(0)  <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(25);
      send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(18) <= phi_mux_reqs(0);
      triggers(1)  <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(19);
      send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(26)<= src_sample_reqs(1);
      src_sample_acks(1)  <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(26);
      send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(27)<= src_update_reqs(1);
      src_update_acks(1)  <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(28);
      send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(20) <= phi_mux_reqs(1);
      phi_stmt_1810_phi_seq_631 : phi_sequencer_v2-- 
        generic map (place_capacity => 7, ntriggers => 2, name => "phi_stmt_1810_phi_seq_631") 
        port map ( -- 
          triggers => triggers, src_sample_starts => src_sample_reqs, 
          src_sample_completes => src_sample_acks, src_update_starts => src_update_reqs, 
          src_update_completes => src_update_acks,
          phi_mux_select_reqs => phi_mux_reqs, 
          phi_sample_req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(11), 
          phi_sample_ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(15), 
          phi_update_req => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(14), 
          phi_update_ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(16), 
          phi_mux_ack => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(21), 
          clk => clk, reset => reset -- 
        );
        -- 
    end block;
    entry_tmerge_582_block : block -- 
      signal preds : BooleanArray(0 to 1);
      begin -- 
        preds(0)  <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(7);
        preds(1)  <= send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(8);
        entry_tmerge_582 : transition_merge -- 
          generic map(name => " entry_tmerge_582")
          port map (preds => preds, symbol_out => send_ccu_daemon_to_ccu_debug_daemon_CP_557_elements(9));
          -- 
    end block;
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal CONCAT_u1_u33_1869_1869_delayed_1_0_1835 : std_logic_vector(32 downto 0);
    signal CONCAT_u1_u33_1877_1877_delayed_1_0_1830 : std_logic_vector(32 downto 0);
    signal CONCAT_u1_u33_1886_1886_delayed_1_0_1840 : std_logic_vector(32 downto 0);
    signal CONCAT_u1_u33_1894_1894_delayed_1_0_1825 : std_logic_vector(32 downto 0);
    signal EQ_u2_u1_1844_wire : std_logic_vector(0 downto 0);
    signal EQ_u2_u1_1850_wire : std_logic_vector(0 downto 0);
    signal EQ_u2_u1_1857_wire : std_logic_vector(0 downto 0);
    signal EQ_u2_u1_1863_wire : std_logic_vector(0 downto 0);
    signal I_1810 : std_logic_vector(1 downto 0);
    signal MUX_1847_wire : std_logic_vector(32 downto 0);
    signal MUX_1853_wire : std_logic_vector(32 downto 0);
    signal MUX_1860_wire : std_logic_vector(32 downto 0);
    signal MUX_1866_wire : std_logic_vector(32 downto 0);
    signal OR_u33_u33_1854_wire : std_logic_vector(32 downto 0);
    signal OR_u33_u33_1867_wire : std_logic_vector(32 downto 0);
    signal R_ONE_1_1822_wire_constant : std_logic_vector(0 downto 0);
    signal R_ONE_1_1827_wire_constant : std_logic_vector(0 downto 0);
    signal R_ONE_1_1832_wire_constant : std_logic_vector(0 downto 0);
    signal R_ONE_1_1837_wire_constant : std_logic_vector(0 downto 0);
    signal ULT_u2_u1_1876_wire : std_logic_vector(0 downto 0);
    signal konst_1818_wire_constant : std_logic_vector(1 downto 0);
    signal konst_1843_wire_constant : std_logic_vector(1 downto 0);
    signal konst_1846_wire_constant : std_logic_vector(32 downto 0);
    signal konst_1849_wire_constant : std_logic_vector(1 downto 0);
    signal konst_1852_wire_constant : std_logic_vector(32 downto 0);
    signal konst_1856_wire_constant : std_logic_vector(1 downto 0);
    signal konst_1859_wire_constant : std_logic_vector(32 downto 0);
    signal konst_1862_wire_constant : std_logic_vector(1 downto 0);
    signal konst_1865_wire_constant : std_logic_vector(32 downto 0);
    signal konst_1875_wire_constant : std_logic_vector(1 downto 0);
    signal message_1869 : std_logic_vector(32 downto 0);
    signal nI_1820 : std_logic_vector(1 downto 0);
    signal nI_1820_1812_buffered : std_logic_vector(1 downto 0);
    signal type_cast_1814_wire_constant : std_logic_vector(1 downto 0);
    -- 
  begin -- 
    R_ONE_1_1822_wire_constant <= "1";
    R_ONE_1_1827_wire_constant <= "1";
    R_ONE_1_1832_wire_constant <= "1";
    R_ONE_1_1837_wire_constant <= "1";
    konst_1818_wire_constant <= "01";
    konst_1843_wire_constant <= "00";
    konst_1846_wire_constant <= "000000000000000000000000000000000";
    konst_1849_wire_constant <= "01";
    konst_1852_wire_constant <= "000000000000000000000000000000000";
    konst_1856_wire_constant <= "10";
    konst_1859_wire_constant <= "000000000000000000000000000000000";
    konst_1862_wire_constant <= "11";
    konst_1865_wire_constant <= "000000000000000000000000000000000";
    konst_1875_wire_constant <= "11";
    type_cast_1814_wire_constant <= "00";
    phi_stmt_1810: Block -- phi operator 
      signal idata: std_logic_vector(3 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= nI_1820_1812_buffered & type_cast_1814_wire_constant;
      req <= phi_stmt_1810_req_0 & phi_stmt_1810_req_1;
      phi: PhiBase -- 
        generic map( -- 
          name => "phi_stmt_1810",
          num_reqs => 2,
          bypass_flag => true,
          data_width => 2) -- 
        port map( -- 
          req => req, 
          ack => phi_stmt_1810_ack_0,
          idata => idata,
          odata => I_1810,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_1810
    -- flow-through select operator MUX_1847_inst
    MUX_1847_wire <= CONCAT_u1_u33_1869_1869_delayed_1_0_1835 when (EQ_u2_u1_1844_wire(0) /=  '0') else konst_1846_wire_constant;
    -- flow-through select operator MUX_1853_inst
    MUX_1853_wire <= CONCAT_u1_u33_1877_1877_delayed_1_0_1830 when (EQ_u2_u1_1850_wire(0) /=  '0') else konst_1852_wire_constant;
    -- flow-through select operator MUX_1860_inst
    MUX_1860_wire <= CONCAT_u1_u33_1886_1886_delayed_1_0_1840 when (EQ_u2_u1_1857_wire(0) /=  '0') else konst_1859_wire_constant;
    -- flow-through select operator MUX_1866_inst
    MUX_1866_wire <= CONCAT_u1_u33_1894_1894_delayed_1_0_1825 when (EQ_u2_u1_1863_wire(0) /=  '0') else konst_1865_wire_constant;
    nI_1820_1812_buf_block: block -- 
      signal wreq, wack, rreq, rack: BooleanArray(0 downto 0); 
      -- 
    begin -- 
      wreq(0) <= nI_1820_1812_buf_req_0;
      nI_1820_1812_buf_ack_0<= wack(0);
      rreq(0) <= nI_1820_1812_buf_req_1;
      nI_1820_1812_buf_ack_1<= rack(0);
      nI_1820_1812_buf : InterlockBuffer generic map ( -- 
        name => "nI_1820_1812_buf",
        buffer_size => 1,
        flow_through =>  false ,
        cut_through =>  false ,
        in_data_width => 2,
        out_data_width => 2,
        bypass_flag =>  false 
        -- 
      )port map ( -- 
        write_req => wreq(0), 
        write_ack => wack(0), 
        write_data => nI_1820,
        read_req => rreq(0),  
        read_ack => rack(0), 
        read_data => nI_1820_1812_buffered,
        clk => clk, reset => reset
        -- 
      );
      end block; -- 
    do_while_stmt_1808_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= ULT_u2_u1_1876_wire;
      branch_instance: BranchBase -- 
        generic map( name => "do_while_stmt_1808_branch", condition_width => 1,  bypass_flag => true)
        port map( -- 
          condition => condition_sig,
          req => do_while_stmt_1808_branch_req_0,
          ack0 => do_while_stmt_1808_branch_ack_0,
          ack1 => do_while_stmt_1808_branch_ack_1,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    -- flow through binary operator ADD_u2_u2_1819_inst
    nI_1820 <= std_logic_vector(unsigned(I_1810) + unsigned(konst_1818_wire_constant));
    -- shared split operator group (1) : CONCAT_u1_u33_1824_inst 
    ApConcat_group_1: Block -- 
      signal data_in: std_logic_vector(32 downto 0);
      signal data_out: std_logic_vector(32 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= R_ONE_1_1822_wire_constant & psr_buffer;
      CONCAT_u1_u33_1894_1894_delayed_1_0_1825 <= data_out(32 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u1_u33_1824_inst_req_0;
      CONCAT_u1_u33_1824_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u1_u33_1824_inst_req_1;
      CONCAT_u1_u33_1824_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_1_gI: SplitGuardInterface generic map(name => "ApConcat_group_1_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_1",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 33,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => true,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 1
    -- shared split operator group (2) : CONCAT_u1_u33_1829_inst 
    ApConcat_group_2: Block -- 
      signal data_in: std_logic_vector(32 downto 0);
      signal data_out: std_logic_vector(32 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= R_ONE_1_1827_wire_constant & pc_buffer;
      CONCAT_u1_u33_1877_1877_delayed_1_0_1830 <= data_out(32 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u1_u33_1829_inst_req_0;
      CONCAT_u1_u33_1829_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u1_u33_1829_inst_req_1;
      CONCAT_u1_u33_1829_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_2_gI: SplitGuardInterface generic map(name => "ApConcat_group_2_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_2",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 33,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => true,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 2
    -- shared split operator group (3) : CONCAT_u1_u33_1834_inst 
    ApConcat_group_3: Block -- 
      signal data_in: std_logic_vector(32 downto 0);
      signal data_out: std_logic_vector(32 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= R_ONE_1_1832_wire_constant & command_buffer;
      CONCAT_u1_u33_1869_1869_delayed_1_0_1835 <= data_out(32 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u1_u33_1834_inst_req_0;
      CONCAT_u1_u33_1834_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u1_u33_1834_inst_req_1;
      CONCAT_u1_u33_1834_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_3_gI: SplitGuardInterface generic map(name => "ApConcat_group_3_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_3",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 33,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => true,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 3
    -- shared split operator group (4) : CONCAT_u1_u33_1839_inst 
    ApConcat_group_4: Block -- 
      signal data_in: std_logic_vector(32 downto 0);
      signal data_out: std_logic_vector(32 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      data_in <= R_ONE_1_1837_wire_constant & npc_buffer;
      CONCAT_u1_u33_1886_1886_delayed_1_0_1840 <= data_out(32 downto 0);
      guard_vector(0)  <=  '1';
      reqL_unguarded(0) <= CONCAT_u1_u33_1839_inst_req_0;
      CONCAT_u1_u33_1839_inst_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= CONCAT_u1_u33_1839_inst_req_1;
      CONCAT_u1_u33_1839_inst_ack_1 <= ackR_unguarded(0);
      ApConcat_group_4_gI: SplitGuardInterface generic map(name => "ApConcat_group_4_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL,
        sa_in => ackL,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      UnsharedOperator: UnsharedOperatorWithBuffering -- 
        generic map ( -- 
          operator_id => "ApConcat",
          name => "ApConcat_group_4",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 32, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 33,
          constant_operand => "0",
          constant_width => 1,
          buffering  => 1,
          flow_through => false,
          full_rate  => true,
          use_constant  => false
          --
        ) 
        port map ( -- 
          reqL => reqL(0),
          ackL => ackL(0),
          reqR => reqR(0),
          ackR => ackR(0),
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 4
    -- flow through binary operator EQ_u2_u1_1844_inst
    process(I_1810) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(I_1810, konst_1843_wire_constant, tmp_var);
      EQ_u2_u1_1844_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u2_u1_1850_inst
    process(I_1810) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(I_1810, konst_1849_wire_constant, tmp_var);
      EQ_u2_u1_1850_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u2_u1_1857_inst
    process(I_1810) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(I_1810, konst_1856_wire_constant, tmp_var);
      EQ_u2_u1_1857_wire <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u2_u1_1863_inst
    process(I_1810) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(I_1810, konst_1862_wire_constant, tmp_var);
      EQ_u2_u1_1863_wire <= tmp_var; --
    end process;
    -- flow through binary operator OR_u33_u33_1854_inst
    OR_u33_u33_1854_wire <= (MUX_1847_wire or MUX_1853_wire);
    -- flow through binary operator OR_u33_u33_1867_inst
    OR_u33_u33_1867_wire <= (MUX_1860_wire or MUX_1866_wire);
    -- flow through binary operator OR_u33_u33_1868_inst
    message_1869 <= (OR_u33_u33_1854_wire or OR_u33_u33_1867_wire);
    -- flow through binary operator ULT_u2_u1_1876_inst
    process(I_1810) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntUlt_proc(I_1810, konst_1875_wire_constant, tmp_var);
      ULT_u2_u1_1876_wire <= tmp_var; --
    end process;
    -- shared outport operator group (0) : WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_inst 
    OutportGroup_0: Block -- 
      signal data_in: std_logic_vector(32 downto 0);
      signal sample_req, sample_ack : BooleanArray( 0 downto 0);
      signal update_req, update_ack : BooleanArray( 0 downto 0);
      signal sample_req_unguarded, sample_ack_unguarded : BooleanArray( 0 downto 0);
      signal update_req_unguarded, update_ack_unguarded : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 0);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      sample_req_unguarded(0) <= WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_inst_req_0;
      WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_inst_ack_0 <= sample_ack_unguarded(0);
      update_req_unguarded(0) <= WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_inst_req_1;
      WPIPE_ccu_daemon_to_ccu_debug_daemon_1870_inst_ack_1 <= update_ack_unguarded(0);
      guard_vector(0)  <=  '1';
      data_in <= message_1869;
      ccu_daemon_to_ccu_debug_daemon_write_0_gI: SplitGuardInterface generic map(name => "ccu_daemon_to_ccu_debug_daemon_write_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => true,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => sample_req_unguarded,
        sr_out => sample_req,
        sa_in => sample_ack,
        sa_out => sample_ack_unguarded,
        cr_in => update_req_unguarded,
        cr_out => update_req,
        ca_in => update_ack,
        ca_out => update_ack_unguarded,
        guards => guard_vector); -- 
      ccu_daemon_to_ccu_debug_daemon_write_0: OutputPortRevised -- 
        generic map ( name => "ccu_daemon_to_ccu_debug_daemon", data_width => 33, num_reqs => 1, input_buffering => inBUFs, full_rate => true,
        no_arbitration => false)
        port map (--
          sample_req => sample_req , 
          sample_ack => sample_ack , 
          update_req => update_req , 
          update_ack => update_ack , 
          data => data_in, 
          oreq => ccu_daemon_to_ccu_debug_daemon_pipe_write_req(0),
          oack => ccu_daemon_to_ccu_debug_daemon_pipe_write_ack(0),
          odata => ccu_daemon_to_ccu_debug_daemon_pipe_write_data(32 downto 0),
          clk => clk, reset => reset -- 
        );-- 
      -- 
    end Block; -- outport group 0
    -- 
  end Block; -- data_path
  -- 
end send_ccu_daemon_to_ccu_debug_daemon_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity send_ccu_to_teu_debug is -- 
  generic (tag_length : integer); 
  port ( -- 
    opcode : in  std_logic_vector(2 downto 0);
    watch_reg_type : in  std_logic_vector(1 downto 0);
    reg_id : in  std_logic_vector(1 downto 0);
    reg_val : in  std_logic_vector(31 downto 0);
    err : out  std_logic_vector(0 downto 0);
    access_ccu_to_teu_debug_call_reqs : out  std_logic_vector(0 downto 0);
    access_ccu_to_teu_debug_call_acks : in   std_logic_vector(0 downto 0);
    access_ccu_to_teu_debug_call_data : out  std_logic_vector(39 downto 0);
    access_ccu_to_teu_debug_call_tag  :  out  std_logic_vector(0 downto 0);
    access_ccu_to_teu_debug_return_reqs : out  std_logic_vector(0 downto 0);
    access_ccu_to_teu_debug_return_acks : in   std_logic_vector(0 downto 0);
    access_ccu_to_teu_debug_return_data : in   std_logic_vector(0 downto 0);
    access_ccu_to_teu_debug_return_tag :  in   std_logic_vector(0 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity send_ccu_to_teu_debug;
architecture send_ccu_to_teu_debug_arch of send_ccu_to_teu_debug is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 39)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 1)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal opcode_buffer :  std_logic_vector(2 downto 0);
  signal opcode_update_enable: Boolean;
  signal watch_reg_type_buffer :  std_logic_vector(1 downto 0);
  signal watch_reg_type_update_enable: Boolean;
  signal reg_id_buffer :  std_logic_vector(1 downto 0);
  signal reg_id_update_enable: Boolean;
  signal reg_val_buffer :  std_logic_vector(31 downto 0);
  signal reg_val_update_enable: Boolean;
  -- output port buffer signals
  signal err_buffer :  std_logic_vector(0 downto 0);
  signal err_update_enable: Boolean;
  signal send_ccu_to_teu_debug_CP_1427_start: Boolean;
  signal send_ccu_to_teu_debug_CP_1427_symbol: Boolean;
  -- volatile/operator module components. 
  component access_ccu_to_teu_debug is -- 
    generic (tag_length : integer); 
    port ( -- 
      command : in  std_logic_vector(39 downto 0);
      response : out  std_logic_vector(0 downto 0);
      teu_debug_to_ccu_response_pipe_read_req : out  std_logic_vector(0 downto 0);
      teu_debug_to_ccu_response_pipe_read_ack : in   std_logic_vector(0 downto 0);
      teu_debug_to_ccu_response_pipe_read_data : in   std_logic_vector(0 downto 0);
      ccu_to_teu_debug_command_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_to_teu_debug_command_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_to_teu_debug_command_pipe_write_data : out  std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal call_stmt_3937_call_ack_0 : boolean;
  signal call_stmt_3937_call_req_0 : boolean;
  signal call_stmt_3937_call_req_1 : boolean;
  signal call_stmt_3937_call_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "send_ccu_to_teu_debug_input_buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      data_width => tag_length + 39) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(2 downto 0) <= opcode;
  opcode_buffer <= in_buffer_data_out(2 downto 0);
  in_buffer_data_in(4 downto 3) <= watch_reg_type;
  watch_reg_type_buffer <= in_buffer_data_out(4 downto 3);
  in_buffer_data_in(6 downto 5) <= reg_id;
  reg_id_buffer <= in_buffer_data_out(6 downto 5);
  in_buffer_data_in(38 downto 7) <= reg_val;
  reg_val_buffer <= in_buffer_data_out(38 downto 7);
  in_buffer_data_in(tag_length + 38 downto 39) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 38 downto 39);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  send_ccu_to_teu_debug_CP_1427_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "send_ccu_to_teu_debug_out_buffer", -- 
      buffer_size => 0,
      full_rate => false,
      data_width => tag_length + 1) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(0 downto 0) <= err_buffer;
  err <= out_buffer_data_out(0 downto 0);
  out_buffer_data_in(tag_length + 0 downto 1) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 0 downto 1);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= send_ccu_to_teu_debug_CP_1427_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= send_ccu_to_teu_debug_CP_1427_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= send_ccu_to_teu_debug_CP_1427_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  send_ccu_to_teu_debug_CP_1427: Block -- control-path 
    signal send_ccu_to_teu_debug_CP_1427_elements: BooleanArray(2 downto 0);
    -- 
  begin -- 
    send_ccu_to_teu_debug_CP_1427_elements(0) <= send_ccu_to_teu_debug_CP_1427_start;
    send_ccu_to_teu_debug_CP_1427_symbol <= send_ccu_to_teu_debug_CP_1427_elements(2);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0:  members (8) 
      -- CP-element group 0: 	 assign_stmt_3894_to_call_stmt_3937/call_stmt_3937_Sample/crr
      -- CP-element group 0: 	 assign_stmt_3894_to_call_stmt_3937/call_stmt_3937_Update/$entry
      -- CP-element group 0: 	 assign_stmt_3894_to_call_stmt_3937/call_stmt_3937_Update/ccr
      -- CP-element group 0: 	 assign_stmt_3894_to_call_stmt_3937/call_stmt_3937_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_3894_to_call_stmt_3937/$entry
      -- CP-element group 0: 	 assign_stmt_3894_to_call_stmt_3937/call_stmt_3937_sample_start_
      -- CP-element group 0: 	 assign_stmt_3894_to_call_stmt_3937/call_stmt_3937_update_start_
      -- CP-element group 0: 	 $entry
      -- 
    ccr_1445_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1445_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_to_teu_debug_CP_1427_elements(0), ack => call_stmt_3937_call_req_1); -- 
    crr_1440_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1440_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => send_ccu_to_teu_debug_CP_1427_elements(0), ack => call_stmt_3937_call_req_0); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_3894_to_call_stmt_3937/call_stmt_3937_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_3894_to_call_stmt_3937/call_stmt_3937_Sample/cra
      -- CP-element group 1: 	 assign_stmt_3894_to_call_stmt_3937/call_stmt_3937_sample_completed_
      -- 
    cra_1441_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_3937_call_ack_0, ack => send_ccu_to_teu_debug_CP_1427_elements(1)); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2:  members (5) 
      -- CP-element group 2: 	 assign_stmt_3894_to_call_stmt_3937/call_stmt_3937_Update/$exit
      -- CP-element group 2: 	 assign_stmt_3894_to_call_stmt_3937/call_stmt_3937_Update/cca
      -- CP-element group 2: 	 $exit
      -- CP-element group 2: 	 assign_stmt_3894_to_call_stmt_3937/$exit
      -- CP-element group 2: 	 assign_stmt_3894_to_call_stmt_3937/call_stmt_3937_update_completed_
      -- 
    cca_1446_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_3937_call_ack_1, ack => send_ccu_to_teu_debug_CP_1427_elements(2)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal CONCAT_u1_u4_3927_wire : std_logic_vector(3 downto 0);
    signal CONCAT_u2_u34_3932_wire : std_logic_vector(33 downto 0);
    signal CONCAT_u4_u6_3929_wire : std_logic_vector(5 downto 0);
    signal OR_u1_u1_3919_wire : std_logic_vector(0 downto 0);
    signal R_CCU_TEU_CLEAR_WP_3902_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCU_TEU_SET_BP_3892_wire_constant : std_logic_vector(2 downto 0);
    signal R_CCU_TEU_SET_WP_3897_wire_constant : std_logic_vector(2 downto 0);
    signal R_ONE_1_3912_wire_constant : std_logic_vector(0 downto 0);
    signal R_ZERO_1_3913_wire_constant : std_logic_vector(0 downto 0);
    signal R_ZERO_2_3921_wire_constant : std_logic_vector(1 downto 0);
    signal clr_wp_3904 : std_logic_vector(0 downto 0);
    signal command_3934 : std_logic_vector(39 downto 0);
    signal length_3915 : std_logic_vector(0 downto 0);
    signal length_five_3909 : std_logic_vector(0 downto 0);
    signal reg_type_3923 : std_logic_vector(1 downto 0);
    signal set_bp_3894 : std_logic_vector(0 downto 0);
    signal set_wp_3899 : std_logic_vector(0 downto 0);
    -- 
  begin -- 
    R_CCU_TEU_CLEAR_WP_3902_wire_constant <= "100";
    R_CCU_TEU_SET_BP_3892_wire_constant <= "001";
    R_CCU_TEU_SET_WP_3897_wire_constant <= "011";
    R_ONE_1_3912_wire_constant <= "1";
    R_ZERO_1_3913_wire_constant <= "0";
    R_ZERO_2_3921_wire_constant <= "00";
    -- flow-through select operator MUX_3914_inst
    length_3915 <= R_ONE_1_3912_wire_constant when (length_five_3909(0) /=  '0') else R_ZERO_1_3913_wire_constant;
    -- flow-through select operator MUX_3922_inst
    reg_type_3923 <= watch_reg_type_buffer when (OR_u1_u1_3919_wire(0) /=  '0') else R_ZERO_2_3921_wire_constant;
    -- flow through binary operator CONCAT_u1_u4_3927_inst
    process(length_3915, opcode_buffer) -- 
      variable tmp_var : std_logic_vector(3 downto 0); -- 
    begin -- 
      ApConcat_proc(length_3915, opcode_buffer, tmp_var);
      CONCAT_u1_u4_3927_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u2_u34_3932_inst
    process(reg_id_buffer, reg_val_buffer) -- 
      variable tmp_var : std_logic_vector(33 downto 0); -- 
    begin -- 
      ApConcat_proc(reg_id_buffer, reg_val_buffer, tmp_var);
      CONCAT_u2_u34_3932_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u4_u6_3929_inst
    process(CONCAT_u1_u4_3927_wire, reg_type_3923) -- 
      variable tmp_var : std_logic_vector(5 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u1_u4_3927_wire, reg_type_3923, tmp_var);
      CONCAT_u4_u6_3929_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u6_u40_3933_inst
    process(CONCAT_u4_u6_3929_wire, CONCAT_u2_u34_3932_wire) -- 
      variable tmp_var : std_logic_vector(39 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u4_u6_3929_wire, CONCAT_u2_u34_3932_wire, tmp_var);
      command_3934 <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_3893_inst
    process(opcode_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_buffer, R_CCU_TEU_SET_BP_3892_wire_constant, tmp_var);
      set_bp_3894 <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_3898_inst
    process(opcode_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_buffer, R_CCU_TEU_SET_WP_3897_wire_constant, tmp_var);
      set_wp_3899 <= tmp_var; --
    end process;
    -- flow through binary operator EQ_u3_u1_3903_inst
    process(opcode_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApIntEq_proc(opcode_buffer, R_CCU_TEU_CLEAR_WP_3902_wire_constant, tmp_var);
      clr_wp_3904 <= tmp_var; --
    end process;
    -- flow through binary operator OR_u1_u1_3908_inst
    length_five_3909 <= (set_bp_3894 or set_wp_3899);
    -- flow through binary operator OR_u1_u1_3919_inst
    OR_u1_u1_3919_wire <= (set_wp_3899 or clr_wp_3904);
    -- shared call operator group (0) : call_stmt_3937_call 
    access_ccu_to_teu_debug_call_group_0: Block -- 
      signal data_in: std_logic_vector(39 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_3937_call_req_0;
      call_stmt_3937_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_3937_call_req_1;
      call_stmt_3937_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      access_ccu_to_teu_debug_call_group_0_gI: SplitGuardInterface generic map(name => "access_ccu_to_teu_debug_call_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= command_3934;
      err_buffer <= data_out(0 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 40,
        owidth => 40,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => access_ccu_to_teu_debug_call_reqs(0),
          ackR => access_ccu_to_teu_debug_call_acks(0),
          dataR => access_ccu_to_teu_debug_call_data(39 downto 0),
          tagR => access_ccu_to_teu_debug_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 1,
          owidth => 1,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => access_ccu_to_teu_debug_return_acks(0), -- cross-over
          ackL => access_ccu_to_teu_debug_return_reqs(0), -- cross-over
          dataL => access_ccu_to_teu_debug_return_data(0 downto 0),
          tagL => access_ccu_to_teu_debug_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- 
  end Block; -- data_path
  -- 
end send_ccu_to_teu_debug_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity write_fpunit_register is -- 
  generic (tag_length : integer); 
  port ( -- 
    fsr_flag : in  std_logic_vector(0 downto 0);
    reg_id : in  std_logic_vector(4 downto 0);
    reg_val : in  std_logic_vector(31 downto 0);
    err : out  std_logic_vector(0 downto 0);
    access_fpunit_registers_call_reqs : out  std_logic_vector(0 downto 0);
    access_fpunit_registers_call_acks : in   std_logic_vector(0 downto 0);
    access_fpunit_registers_call_data : out  std_logic_vector(38 downto 0);
    access_fpunit_registers_call_tag  :  out  std_logic_vector(0 downto 0);
    access_fpunit_registers_return_reqs : out  std_logic_vector(0 downto 0);
    access_fpunit_registers_return_acks : in   std_logic_vector(0 downto 0);
    access_fpunit_registers_return_data : in   std_logic_vector(32 downto 0);
    access_fpunit_registers_return_tag :  in   std_logic_vector(0 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity write_fpunit_register;
architecture write_fpunit_register_arch of write_fpunit_register is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 38)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 1)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal fsr_flag_buffer :  std_logic_vector(0 downto 0);
  signal fsr_flag_update_enable: Boolean;
  signal reg_id_buffer :  std_logic_vector(4 downto 0);
  signal reg_id_update_enable: Boolean;
  signal reg_val_buffer :  std_logic_vector(31 downto 0);
  signal reg_val_update_enable: Boolean;
  -- output port buffer signals
  signal err_buffer :  std_logic_vector(0 downto 0);
  signal err_update_enable: Boolean;
  signal write_fpunit_register_CP_1364_start: Boolean;
  signal write_fpunit_register_CP_1364_symbol: Boolean;
  -- volatile/operator module components. 
  component access_fpunit_registers is -- 
    generic (tag_length : integer); 
    port ( -- 
      command : in  std_logic_vector(38 downto 0);
      response : out  std_logic_vector(32 downto 0);
      teu_to_ccu_fpunit_register_access_response_pipe_read_req : out  std_logic_vector(0 downto 0);
      teu_to_ccu_fpunit_register_access_response_pipe_read_ack : in   std_logic_vector(0 downto 0);
      teu_to_ccu_fpunit_register_access_response_pipe_read_data : in   std_logic_vector(32 downto 0);
      ccu_to_teu_fpunit_register_access_command_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_to_teu_fpunit_register_access_command_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_to_teu_fpunit_register_access_command_pipe_write_data : out  std_logic_vector(39 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal call_stmt_3601_call_req_0 : boolean;
  signal call_stmt_3601_call_ack_0 : boolean;
  signal call_stmt_3601_call_req_1 : boolean;
  signal call_stmt_3601_call_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "write_fpunit_register_input_buffer", -- 
      buffer_size => 0,
      bypass_flag => true,
      data_width => tag_length + 38) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(0 downto 0) <= fsr_flag;
  fsr_flag_buffer <= in_buffer_data_out(0 downto 0);
  in_buffer_data_in(5 downto 1) <= reg_id;
  reg_id_buffer <= in_buffer_data_out(5 downto 1);
  in_buffer_data_in(37 downto 6) <= reg_val;
  reg_val_buffer <= in_buffer_data_out(37 downto 6);
  in_buffer_data_in(tag_length + 37 downto 38) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 37 downto 38);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  write_fpunit_register_CP_1364_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "write_fpunit_register_out_buffer", -- 
      buffer_size => 0,
      full_rate => false,
      data_width => tag_length + 1) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(0 downto 0) <= err_buffer;
  err <= out_buffer_data_out(0 downto 0);
  out_buffer_data_in(tag_length + 0 downto 1) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 0 downto 1);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= write_fpunit_register_CP_1364_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= write_fpunit_register_CP_1364_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= write_fpunit_register_CP_1364_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  write_fpunit_register_CP_1364: Block -- control-path 
    signal write_fpunit_register_CP_1364_elements: BooleanArray(2 downto 0);
    -- 
  begin -- 
    write_fpunit_register_CP_1364_elements(0) <= write_fpunit_register_CP_1364_start;
    write_fpunit_register_CP_1364_symbol <= write_fpunit_register_CP_1364_elements(2);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0:  members (8) 
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_3598_to_assign_stmt_3606/$entry
      -- CP-element group 0: 	 assign_stmt_3598_to_assign_stmt_3606/call_stmt_3601_sample_start_
      -- CP-element group 0: 	 assign_stmt_3598_to_assign_stmt_3606/call_stmt_3601_update_start_
      -- CP-element group 0: 	 assign_stmt_3598_to_assign_stmt_3606/call_stmt_3601_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_3598_to_assign_stmt_3606/call_stmt_3601_Sample/crr
      -- CP-element group 0: 	 assign_stmt_3598_to_assign_stmt_3606/call_stmt_3601_Update/$entry
      -- CP-element group 0: 	 assign_stmt_3598_to_assign_stmt_3606/call_stmt_3601_Update/ccr
      -- 
    crr_1377_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1377_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => write_fpunit_register_CP_1364_elements(0), ack => call_stmt_3601_call_req_0); -- 
    ccr_1382_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1382_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => write_fpunit_register_CP_1364_elements(0), ack => call_stmt_3601_call_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_3598_to_assign_stmt_3606/call_stmt_3601_sample_completed_
      -- CP-element group 1: 	 assign_stmt_3598_to_assign_stmt_3606/call_stmt_3601_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_3598_to_assign_stmt_3606/call_stmt_3601_Sample/cra
      -- 
    cra_1378_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_3601_call_ack_0, ack => write_fpunit_register_CP_1364_elements(1)); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2:  members (5) 
      -- CP-element group 2: 	 $exit
      -- CP-element group 2: 	 assign_stmt_3598_to_assign_stmt_3606/$exit
      -- CP-element group 2: 	 assign_stmt_3598_to_assign_stmt_3606/call_stmt_3601_update_completed_
      -- CP-element group 2: 	 assign_stmt_3598_to_assign_stmt_3606/call_stmt_3601_Update/$exit
      -- CP-element group 2: 	 assign_stmt_3598_to_assign_stmt_3606/call_stmt_3601_Update/cca
      -- 
    cca_1383_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_3601_call_ack_1, ack => write_fpunit_register_CP_1364_elements(2)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal CONCAT_u1_u2_3593_wire : std_logic_vector(1 downto 0);
    signal CONCAT_u5_u37_3596_wire : std_logic_vector(36 downto 0);
    signal R_ONE_1_3591_wire_constant : std_logic_vector(0 downto 0);
    signal command_3598 : std_logic_vector(38 downto 0);
    signal konst_3604_wire_constant : std_logic_vector(32 downto 0);
    signal ret_stat_3601 : std_logic_vector(32 downto 0);
    -- 
  begin -- 
    R_ONE_1_3591_wire_constant <= "1";
    konst_3604_wire_constant <= "000000000000000000000000000100000";
    -- flow through binary operator BITSEL_u33_u1_3605_inst
    process(ret_stat_3601) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(ret_stat_3601, konst_3604_wire_constant, tmp_var);
      err_buffer <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u1_u2_3593_inst
    process(R_ONE_1_3591_wire_constant, fsr_flag_buffer) -- 
      variable tmp_var : std_logic_vector(1 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ONE_1_3591_wire_constant, fsr_flag_buffer, tmp_var);
      CONCAT_u1_u2_3593_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u2_u39_3597_inst
    process(CONCAT_u1_u2_3593_wire, CONCAT_u5_u37_3596_wire) -- 
      variable tmp_var : std_logic_vector(38 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u1_u2_3593_wire, CONCAT_u5_u37_3596_wire, tmp_var);
      command_3598 <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u5_u37_3596_inst
    process(reg_id_buffer, reg_val_buffer) -- 
      variable tmp_var : std_logic_vector(36 downto 0); -- 
    begin -- 
      ApConcat_proc(reg_id_buffer, reg_val_buffer, tmp_var);
      CONCAT_u5_u37_3596_wire <= tmp_var; --
    end process;
    -- shared call operator group (0) : call_stmt_3601_call 
    access_fpunit_registers_call_group_0: Block -- 
      signal data_in: std_logic_vector(38 downto 0);
      signal data_out: std_logic_vector(32 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_3601_call_req_0;
      call_stmt_3601_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_3601_call_req_1;
      call_stmt_3601_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      access_fpunit_registers_call_group_0_gI: SplitGuardInterface generic map(name => "access_fpunit_registers_call_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= command_3598;
      ret_stat_3601 <= data_out(32 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 39,
        owidth => 39,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => access_fpunit_registers_call_reqs(0),
          ackR => access_fpunit_registers_call_acks(0),
          dataR => access_fpunit_registers_call_data(38 downto 0),
          tagR => access_fpunit_registers_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 33,
          owidth => 33,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => access_fpunit_registers_return_acks(0), -- cross-over
          ackL => access_fpunit_registers_return_reqs(0), -- cross-over
          dataL => access_fpunit_registers_return_data(32 downto 0),
          tagL => access_fpunit_registers_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- 
  end Block; -- data_path
  -- 
end write_fpunit_register_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity write_iunit_register is -- 
  generic (tag_length : integer); 
  port ( -- 
    reg_type : in  std_logic_vector(2 downto 0);
    reg_id : in  std_logic_vector(4 downto 0);
    reg_val : in  std_logic_vector(31 downto 0);
    ignore : out  std_logic_vector(0 downto 0);
    access_iunit_registers_call_reqs : out  std_logic_vector(0 downto 0);
    access_iunit_registers_call_acks : in   std_logic_vector(0 downto 0);
    access_iunit_registers_call_data : out  std_logic_vector(40 downto 0);
    access_iunit_registers_call_tag  :  out  std_logic_vector(2 downto 0);
    access_iunit_registers_return_reqs : out  std_logic_vector(0 downto 0);
    access_iunit_registers_return_acks : in   std_logic_vector(0 downto 0);
    access_iunit_registers_return_data : in   std_logic_vector(31 downto 0);
    access_iunit_registers_return_tag :  in   std_logic_vector(2 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity write_iunit_register;
architecture write_iunit_register_arch of write_iunit_register is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 40)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 1)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal reg_type_buffer :  std_logic_vector(2 downto 0);
  signal reg_type_update_enable: Boolean;
  signal reg_id_buffer :  std_logic_vector(4 downto 0);
  signal reg_id_update_enable: Boolean;
  signal reg_val_buffer :  std_logic_vector(31 downto 0);
  signal reg_val_update_enable: Boolean;
  -- output port buffer signals
  signal ignore_buffer :  std_logic_vector(0 downto 0);
  signal ignore_update_enable: Boolean;
  signal write_iunit_register_CP_1344_start: Boolean;
  signal write_iunit_register_CP_1344_symbol: Boolean;
  -- volatile/operator module components. 
  component access_iunit_registers is -- 
    generic (tag_length : integer); 
    port ( -- 
      cmd_word : in  std_logic_vector(40 downto 0);
      response_word : out  std_logic_vector(31 downto 0);
      teu_to_ccu_iunit_register_access_response_pipe_read_req : out  std_logic_vector(0 downto 0);
      teu_to_ccu_iunit_register_access_response_pipe_read_ack : in   std_logic_vector(0 downto 0);
      teu_to_ccu_iunit_register_access_response_pipe_read_data : in   std_logic_vector(31 downto 0);
      ccu_to_teu_iunit_register_access_command_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_to_teu_iunit_register_access_command_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_to_teu_iunit_register_access_command_pipe_write_data : out  std_logic_vector(41 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal call_stmt_3578_call_req_1 : boolean;
  signal call_stmt_3578_call_ack_1 : boolean;
  signal call_stmt_3578_call_req_0 : boolean;
  signal call_stmt_3578_call_ack_0 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "write_iunit_register_input_buffer", -- 
      buffer_size => 0,
      bypass_flag => true,
      data_width => tag_length + 40) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(2 downto 0) <= reg_type;
  reg_type_buffer <= in_buffer_data_out(2 downto 0);
  in_buffer_data_in(7 downto 3) <= reg_id;
  reg_id_buffer <= in_buffer_data_out(7 downto 3);
  in_buffer_data_in(39 downto 8) <= reg_val;
  reg_val_buffer <= in_buffer_data_out(39 downto 8);
  in_buffer_data_in(tag_length + 39 downto 40) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 39 downto 40);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  write_iunit_register_CP_1344_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "write_iunit_register_out_buffer", -- 
      buffer_size => 0,
      full_rate => false,
      data_width => tag_length + 1) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(0 downto 0) <= ignore_buffer;
  ignore <= out_buffer_data_out(0 downto 0);
  out_buffer_data_in(tag_length + 0 downto 1) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 0 downto 1);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= write_iunit_register_CP_1344_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= write_iunit_register_CP_1344_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= write_iunit_register_CP_1344_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  write_iunit_register_CP_1344: Block -- control-path 
    signal write_iunit_register_CP_1344_elements: BooleanArray(2 downto 0);
    -- 
  begin -- 
    write_iunit_register_CP_1344_elements(0) <= write_iunit_register_CP_1344_start;
    write_iunit_register_CP_1344_symbol <= write_iunit_register_CP_1344_elements(2);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0:  members (8) 
      -- CP-element group 0: 	 assign_stmt_3575_to_assign_stmt_3583/call_stmt_3578_sample_start_
      -- CP-element group 0: 	 assign_stmt_3575_to_assign_stmt_3583/$entry
      -- CP-element group 0: 	 assign_stmt_3575_to_assign_stmt_3583/call_stmt_3578_Update/ccr
      -- CP-element group 0: 	 assign_stmt_3575_to_assign_stmt_3583/call_stmt_3578_Update/$entry
      -- CP-element group 0: 	 assign_stmt_3575_to_assign_stmt_3583/call_stmt_3578_Sample/crr
      -- CP-element group 0: 	 assign_stmt_3575_to_assign_stmt_3583/call_stmt_3578_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_3575_to_assign_stmt_3583/call_stmt_3578_update_start_
      -- CP-element group 0: 	 $entry
      -- 
    crr_1357_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1357_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => write_iunit_register_CP_1344_elements(0), ack => call_stmt_3578_call_req_0); -- 
    ccr_1362_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1362_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => write_iunit_register_CP_1344_elements(0), ack => call_stmt_3578_call_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_3575_to_assign_stmt_3583/call_stmt_3578_sample_completed_
      -- CP-element group 1: 	 assign_stmt_3575_to_assign_stmt_3583/call_stmt_3578_Sample/cra
      -- CP-element group 1: 	 assign_stmt_3575_to_assign_stmt_3583/call_stmt_3578_Sample/$exit
      -- 
    cra_1358_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_3578_call_ack_0, ack => write_iunit_register_CP_1344_elements(1)); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2:  members (5) 
      -- CP-element group 2: 	 assign_stmt_3575_to_assign_stmt_3583/$exit
      -- CP-element group 2: 	 assign_stmt_3575_to_assign_stmt_3583/call_stmt_3578_Update/cca
      -- CP-element group 2: 	 assign_stmt_3575_to_assign_stmt_3583/call_stmt_3578_Update/$exit
      -- CP-element group 2: 	 assign_stmt_3575_to_assign_stmt_3583/call_stmt_3578_update_completed_
      -- CP-element group 2: 	 $exit
      -- 
    cca_1363_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_3578_call_ack_1, ack => write_iunit_register_CP_1344_elements(2)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal CONCAT_u1_u4_3570_wire : std_logic_vector(3 downto 0);
    signal CONCAT_u5_u37_3573_wire : std_logic_vector(36 downto 0);
    signal R_ONE_1_3568_wire_constant : std_logic_vector(0 downto 0);
    signal command_3575 : std_logic_vector(40 downto 0);
    signal konst_3581_wire_constant : std_logic_vector(2 downto 0);
    signal sacrificial_ret_val_3578 : std_logic_vector(31 downto 0);
    -- 
  begin -- 
    R_ONE_1_3568_wire_constant <= "1";
    konst_3581_wire_constant <= "000";
    -- flow through binary operator BITSEL_u3_u1_3582_inst
    process(reg_type_buffer) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(reg_type_buffer, konst_3581_wire_constant, tmp_var);
      ignore_buffer <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u1_u4_3570_inst
    process(R_ONE_1_3568_wire_constant, reg_type_buffer) -- 
      variable tmp_var : std_logic_vector(3 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ONE_1_3568_wire_constant, reg_type_buffer, tmp_var);
      CONCAT_u1_u4_3570_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u4_u41_3574_inst
    process(CONCAT_u1_u4_3570_wire, CONCAT_u5_u37_3573_wire) -- 
      variable tmp_var : std_logic_vector(40 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u1_u4_3570_wire, CONCAT_u5_u37_3573_wire, tmp_var);
      command_3575 <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u5_u37_3573_inst
    process(reg_id_buffer, reg_val_buffer) -- 
      variable tmp_var : std_logic_vector(36 downto 0); -- 
    begin -- 
      ApConcat_proc(reg_id_buffer, reg_val_buffer, tmp_var);
      CONCAT_u5_u37_3573_wire <= tmp_var; --
    end process;
    -- shared call operator group (0) : call_stmt_3578_call 
    access_iunit_registers_call_group_0: Block -- 
      signal data_in: std_logic_vector(40 downto 0);
      signal data_out: std_logic_vector(31 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_3578_call_req_0;
      call_stmt_3578_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_3578_call_req_1;
      call_stmt_3578_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      access_iunit_registers_call_group_0_gI: SplitGuardInterface generic map(name => "access_iunit_registers_call_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= command_3575;
      sacrificial_ret_val_3578 <= data_out(31 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 41,
        owidth => 41,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 3,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => access_iunit_registers_call_reqs(0),
          ackR => access_iunit_registers_call_acks(0),
          dataR => access_iunit_registers_call_data(40 downto 0),
          tagR => access_iunit_registers_call_tag(2 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 32,
          owidth => 32,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 3,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => access_iunit_registers_return_acks(0), -- cross-over
          ackL => access_iunit_registers_return_reqs(0), -- cross-over
          dataL => access_iunit_registers_return_data(31 downto 0),
          tagL => access_iunit_registers_return_tag(2 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- 
  end Block; -- data_path
  -- 
end write_iunit_register_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity write_to_memory is -- 
  generic (tag_length : integer); 
  port ( -- 
    asi : in  std_logic_vector(7 downto 0);
    addr : in  std_logic_vector(31 downto 0);
    data : in  std_logic_vector(31 downto 0);
    err_flag : out  std_logic_vector(0 downto 0);
    access_memory_call_reqs : out  std_logic_vector(0 downto 0);
    access_memory_call_acks : in   std_logic_vector(0 downto 0);
    access_memory_call_data : out  std_logic_vector(72 downto 0);
    access_memory_call_tag  :  out  std_logic_vector(0 downto 0);
    access_memory_return_reqs : out  std_logic_vector(0 downto 0);
    access_memory_return_acks : in   std_logic_vector(0 downto 0);
    access_memory_return_data : in   std_logic_vector(32 downto 0);
    access_memory_return_tag :  in   std_logic_vector(0 downto 0);
    tag_in: in std_logic_vector(tag_length-1 downto 0);
    tag_out: out std_logic_vector(tag_length-1 downto 0) ;
    clk : in std_logic;
    reset : in std_logic;
    start_req : in std_logic;
    start_ack : out std_logic;
    fin_req : in std_logic;
    fin_ack   : out std_logic-- 
  );
  -- 
end entity write_to_memory;
architecture write_to_memory_arch of write_to_memory is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  signal in_buffer_data_in, in_buffer_data_out: std_logic_vector((tag_length + 72)-1 downto 0);
  signal default_zero_sig: std_logic;
  signal in_buffer_write_req: std_logic;
  signal in_buffer_write_ack: std_logic;
  signal in_buffer_unload_req_symbol: Boolean;
  signal in_buffer_unload_ack_symbol: Boolean;
  signal out_buffer_data_in, out_buffer_data_out: std_logic_vector((tag_length + 1)-1 downto 0);
  signal out_buffer_read_req: std_logic;
  signal out_buffer_read_ack: std_logic;
  signal out_buffer_write_req_symbol: Boolean;
  signal out_buffer_write_ack_symbol: Boolean;
  signal tag_ub_out, tag_ilock_out: std_logic_vector(tag_length-1 downto 0);
  signal tag_push_req, tag_push_ack, tag_pop_req, tag_pop_ack: std_logic;
  signal tag_unload_req_symbol, tag_unload_ack_symbol, tag_write_req_symbol, tag_write_ack_symbol: Boolean;
  signal tag_ilock_write_req_symbol, tag_ilock_write_ack_symbol, tag_ilock_read_req_symbol, tag_ilock_read_ack_symbol: Boolean;
  signal start_req_sig, fin_req_sig, start_ack_sig, fin_ack_sig: std_logic; 
  signal input_sample_reenable_symbol: Boolean;
  -- input port buffer signals
  signal asi_buffer :  std_logic_vector(7 downto 0);
  signal asi_update_enable: Boolean;
  signal addr_buffer :  std_logic_vector(31 downto 0);
  signal addr_update_enable: Boolean;
  signal data_buffer :  std_logic_vector(31 downto 0);
  signal data_update_enable: Boolean;
  -- output port buffer signals
  signal err_flag_buffer :  std_logic_vector(0 downto 0);
  signal err_flag_update_enable: Boolean;
  signal write_to_memory_CP_1404_start: Boolean;
  signal write_to_memory_CP_1404_symbol: Boolean;
  -- volatile/operator module components. 
  component access_memory is -- 
    generic (tag_length : integer); 
    port ( -- 
      command : in  std_logic_vector(72 downto 0);
      response : out  std_logic_vector(32 downto 0);
      teu_to_ccu_load_store_response_pipe_read_req : out  std_logic_vector(0 downto 0);
      teu_to_ccu_load_store_response_pipe_read_ack : in   std_logic_vector(0 downto 0);
      teu_to_ccu_load_store_response_pipe_read_data : in   std_logic_vector(32 downto 0);
      ccu_to_teu_load_store_command_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_to_teu_load_store_command_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_to_teu_load_store_command_pipe_write_data : out  std_logic_vector(72 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- links between control-path and data-path
  signal call_stmt_3656_call_req_0 : boolean;
  signal call_stmt_3656_call_ack_0 : boolean;
  signal call_stmt_3656_call_req_1 : boolean;
  signal call_stmt_3656_call_ack_1 : boolean;
  -- 
begin --  
  -- input handling ------------------------------------------------
  in_buffer: UnloadBuffer -- 
    generic map(name => "write_to_memory_input_buffer", -- 
      buffer_size => 0,
      bypass_flag => true,
      data_width => tag_length + 72) -- 
    port map(write_req => in_buffer_write_req, -- 
      write_ack => in_buffer_write_ack, 
      write_data => in_buffer_data_in,
      unload_req => in_buffer_unload_req_symbol, 
      unload_ack => in_buffer_unload_ack_symbol, 
      read_data => in_buffer_data_out,
      clk => clk, reset => reset); -- 
  in_buffer_data_in(7 downto 0) <= asi;
  asi_buffer <= in_buffer_data_out(7 downto 0);
  in_buffer_data_in(39 downto 8) <= addr;
  addr_buffer <= in_buffer_data_out(39 downto 8);
  in_buffer_data_in(71 downto 40) <= data;
  data_buffer <= in_buffer_data_out(71 downto 40);
  in_buffer_data_in(tag_length + 71 downto 72) <= tag_in;
  tag_ub_out <= in_buffer_data_out(tag_length + 71 downto 72);
  in_buffer_write_req <= start_req;
  start_ack <= in_buffer_write_ack;
  in_buffer_unload_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 1,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 32) := "in_buffer_unload_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= in_buffer_unload_ack_symbol & input_sample_reenable_symbol;
    gj_in_buffer_unload_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => in_buffer_unload_req_symbol, clk => clk, reset => reset); --
  end block;
  -- join of all unload_ack_symbols.. used to trigger CP.
  write_to_memory_CP_1404_start <= in_buffer_unload_ack_symbol;
  -- output handling  -------------------------------------------------------
  out_buffer: ReceiveBuffer -- 
    generic map(name => "write_to_memory_out_buffer", -- 
      buffer_size => 0,
      full_rate => false,
      data_width => tag_length + 1) --
    port map(write_req => out_buffer_write_req_symbol, -- 
      write_ack => out_buffer_write_ack_symbol, 
      write_data => out_buffer_data_in,
      read_req => out_buffer_read_req, 
      read_ack => out_buffer_read_ack, 
      read_data => out_buffer_data_out,
      clk => clk, reset => reset); -- 
  out_buffer_data_in(0 downto 0) <= err_flag_buffer;
  err_flag <= out_buffer_data_out(0 downto 0);
  out_buffer_data_in(tag_length + 0 downto 1) <= tag_ilock_out;
  tag_out <= out_buffer_data_out(tag_length + 0 downto 1);
  out_buffer_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 0);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 1,2 => 0);
    constant joinName: string(1 to 32) := "out_buffer_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= write_to_memory_CP_1404_symbol & out_buffer_write_ack_symbol & tag_ilock_read_ack_symbol;
    gj_out_buffer_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => out_buffer_write_req_symbol, clk => clk, reset => reset); --
  end block;
  -- write-to output-buffer produces  reenable input sampling
  input_sample_reenable_symbol <= out_buffer_write_ack_symbol;
  -- fin-req/ack level protocol..
  out_buffer_read_req <= fin_req;
  fin_ack <= out_buffer_read_ack;
  ----- tag-queue --------------------------------------------------
  -- interlock buffer for TAG.. to provide required buffering.
  tagIlock: InterlockBuffer -- 
    generic map(name => "tag-interlock-buffer", -- 
      buffer_size => 1,
      bypass_flag => false,
      in_data_width => tag_length,
      out_data_width => tag_length) -- 
    port map(write_req => tag_ilock_write_req_symbol, -- 
      write_ack => tag_ilock_write_ack_symbol, 
      write_data => tag_ub_out,
      read_req => tag_ilock_read_req_symbol, 
      read_ack => tag_ilock_read_ack_symbol, 
      read_data => tag_ilock_out, 
      clk => clk, reset => reset); -- 
  -- tag ilock-buffer control logic. 
  tag_ilock_write_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 1) := (0 => 1,1 => 1);
    constant place_markings: IntegerArray(0 to 1)  := (0 => 0,1 => 1);
    constant place_delays: IntegerArray(0 to 1) := (0 => 0,1 => 1);
    constant joinName: string(1 to 31) := "tag_ilock_write_req_symbol_join"; 
    signal preds: BooleanArray(1 to 2); -- 
  begin -- 
    preds <= write_to_memory_CP_1404_start & tag_ilock_write_ack_symbol;
    gj_tag_ilock_write_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 2, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_write_req_symbol, clk => clk, reset => reset); --
  end block;
  tag_ilock_read_req_symbol_join: block -- 
    constant place_capacities: IntegerArray(0 to 2) := (0 => 1,1 => 1,2 => 1);
    constant place_markings: IntegerArray(0 to 2)  := (0 => 0,1 => 1,2 => 1);
    constant place_delays: IntegerArray(0 to 2) := (0 => 0,1 => 0,2 => 0);
    constant joinName: string(1 to 30) := "tag_ilock_read_req_symbol_join"; 
    signal preds: BooleanArray(1 to 3); -- 
  begin -- 
    preds <= write_to_memory_CP_1404_start & tag_ilock_read_ack_symbol & out_buffer_write_ack_symbol;
    gj_tag_ilock_read_req_symbol_join : generic_join generic map(name => joinName, number_of_predecessors => 3, place_capacities => place_capacities, place_markings => place_markings, place_delays => place_delays) -- 
      port map(preds => preds, symbol_out => tag_ilock_read_req_symbol, clk => clk, reset => reset); --
  end block;
  -- the control path --------------------------------------------------
  always_true_symbol <= true; 
  default_zero_sig <= '0';
  write_to_memory_CP_1404: Block -- control-path 
    signal write_to_memory_CP_1404_elements: BooleanArray(2 downto 0);
    -- 
  begin -- 
    write_to_memory_CP_1404_elements(0) <= write_to_memory_CP_1404_start;
    write_to_memory_CP_1404_symbol <= write_to_memory_CP_1404_elements(2);
    -- CP-element group 0:  fork  transition  output  bypass 
    -- CP-element group 0: predecessors 
    -- CP-element group 0: successors 
    -- CP-element group 0: 	1 
    -- CP-element group 0: 	2 
    -- CP-element group 0:  members (8) 
      -- CP-element group 0: 	 $entry
      -- CP-element group 0: 	 assign_stmt_3653_to_assign_stmt_3661/$entry
      -- CP-element group 0: 	 assign_stmt_3653_to_assign_stmt_3661/call_stmt_3656_sample_start_
      -- CP-element group 0: 	 assign_stmt_3653_to_assign_stmt_3661/call_stmt_3656_update_start_
      -- CP-element group 0: 	 assign_stmt_3653_to_assign_stmt_3661/call_stmt_3656_Sample/$entry
      -- CP-element group 0: 	 assign_stmt_3653_to_assign_stmt_3661/call_stmt_3656_Sample/crr
      -- CP-element group 0: 	 assign_stmt_3653_to_assign_stmt_3661/call_stmt_3656_Update/$entry
      -- CP-element group 0: 	 assign_stmt_3653_to_assign_stmt_3661/call_stmt_3656_Update/ccr
      -- 
    crr_1417_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " crr_1417_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => write_to_memory_CP_1404_elements(0), ack => call_stmt_3656_call_req_0); -- 
    ccr_1422_symbol_link_to_dp: control_delay_element -- 
      generic map(name => " ccr_1422_symbol_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => write_to_memory_CP_1404_elements(0), ack => call_stmt_3656_call_req_1); -- 
    -- CP-element group 1:  transition  input  bypass 
    -- CP-element group 1: predecessors 
    -- CP-element group 1: 	0 
    -- CP-element group 1: successors 
    -- CP-element group 1:  members (3) 
      -- CP-element group 1: 	 assign_stmt_3653_to_assign_stmt_3661/call_stmt_3656_sample_completed_
      -- CP-element group 1: 	 assign_stmt_3653_to_assign_stmt_3661/call_stmt_3656_Sample/$exit
      -- CP-element group 1: 	 assign_stmt_3653_to_assign_stmt_3661/call_stmt_3656_Sample/cra
      -- 
    cra_1418_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 1_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_3656_call_ack_0, ack => write_to_memory_CP_1404_elements(1)); -- 
    -- CP-element group 2:  transition  input  bypass 
    -- CP-element group 2: predecessors 
    -- CP-element group 2: 	0 
    -- CP-element group 2: successors 
    -- CP-element group 2:  members (5) 
      -- CP-element group 2: 	 $exit
      -- CP-element group 2: 	 assign_stmt_3653_to_assign_stmt_3661/$exit
      -- CP-element group 2: 	 assign_stmt_3653_to_assign_stmt_3661/call_stmt_3656_update_completed_
      -- CP-element group 2: 	 assign_stmt_3653_to_assign_stmt_3661/call_stmt_3656_Update/$exit
      -- CP-element group 2: 	 assign_stmt_3653_to_assign_stmt_3661/call_stmt_3656_Update/cca
      -- 
    cca_1423_symbol_link_from_dp: control_delay_element -- 
      generic map(name => " 2_delay",delay_value => 0)
      port map(clk => clk, reset => reset, req => call_stmt_3656_call_ack_1, ack => write_to_memory_CP_1404_elements(2)); -- 
    --  hookup: inputs to control-path 
    -- hookup: output from control-path 
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal CONCAT_u1_u9_3648_wire : std_logic_vector(8 downto 0);
    signal CONCAT_u32_u64_3651_wire : std_logic_vector(63 downto 0);
    signal R_ZERO_1_3646_wire_constant : std_logic_vector(0 downto 0);
    signal command_3653 : std_logic_vector(72 downto 0);
    signal konst_3659_wire_constant : std_logic_vector(32 downto 0);
    signal ret_stat_3656 : std_logic_vector(32 downto 0);
    -- 
  begin -- 
    R_ZERO_1_3646_wire_constant <= "0";
    konst_3659_wire_constant <= "000000000000000000000000000100000";
    -- flow through binary operator BITSEL_u33_u1_3660_inst
    process(ret_stat_3656) -- 
      variable tmp_var : std_logic_vector(0 downto 0); -- 
    begin -- 
      ApBitsel_proc(ret_stat_3656, konst_3659_wire_constant, tmp_var);
      err_flag_buffer <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u1_u9_3648_inst
    process(R_ZERO_1_3646_wire_constant, asi_buffer) -- 
      variable tmp_var : std_logic_vector(8 downto 0); -- 
    begin -- 
      ApConcat_proc(R_ZERO_1_3646_wire_constant, asi_buffer, tmp_var);
      CONCAT_u1_u9_3648_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u32_u64_3651_inst
    process(addr_buffer, data_buffer) -- 
      variable tmp_var : std_logic_vector(63 downto 0); -- 
    begin -- 
      ApConcat_proc(addr_buffer, data_buffer, tmp_var);
      CONCAT_u32_u64_3651_wire <= tmp_var; --
    end process;
    -- flow through binary operator CONCAT_u9_u73_3652_inst
    process(CONCAT_u1_u9_3648_wire, CONCAT_u32_u64_3651_wire) -- 
      variable tmp_var : std_logic_vector(72 downto 0); -- 
    begin -- 
      ApConcat_proc(CONCAT_u1_u9_3648_wire, CONCAT_u32_u64_3651_wire, tmp_var);
      command_3653 <= tmp_var; --
    end process;
    -- shared call operator group (0) : call_stmt_3656_call 
    access_memory_call_group_0: Block -- 
      signal data_in: std_logic_vector(72 downto 0);
      signal data_out: std_logic_vector(32 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      signal reqR_unguarded, ackR_unguarded, reqL_unguarded, ackL_unguarded : BooleanArray( 0 downto 0);
      signal reqL_unregulated, ackL_unregulated : BooleanArray( 0 downto 0);
      signal guard_vector : std_logic_vector( 0 downto 0);
      constant inBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant outBUFs : IntegerArray(0 downto 0) := (0 => 1);
      constant guardFlags : BooleanArray(0 downto 0) := (0 => false);
      constant guardBuffering: IntegerArray(0 downto 0)  := (0 => 2);
      -- 
    begin -- 
      reqL_unguarded(0) <= call_stmt_3656_call_req_0;
      call_stmt_3656_call_ack_0 <= ackL_unguarded(0);
      reqR_unguarded(0) <= call_stmt_3656_call_req_1;
      call_stmt_3656_call_ack_1 <= ackR_unguarded(0);
      guard_vector(0)  <=  '1';
      reqL <= reqL_unregulated;
      ackL_unregulated <= ackL;
      access_memory_call_group_0_gI: SplitGuardInterface generic map(name => "access_memory_call_group_0_gI", nreqs => 1, buffering => guardBuffering, use_guards => guardFlags,  sample_only => false,  update_only => false) -- 
        port map(clk => clk, reset => reset,
        sr_in => reqL_unguarded,
        sr_out => reqL_unregulated,
        sa_in => ackL_unregulated,
        sa_out => ackL_unguarded,
        cr_in => reqR_unguarded,
        cr_out => reqR,
        ca_in => ackR,
        ca_out => ackR_unguarded,
        guards => guard_vector); -- 
      data_in <= command_3653;
      ret_stat_3656 <= data_out(32 downto 0);
      CallReq: InputMuxWithBuffering -- 
        generic map (name => "InputMuxWithBuffering",
        iwidth => 73,
        owidth => 73,
        buffering => inBUFs,
        full_rate =>  false,
        twidth => 1,
        nreqs => 1,
        registered_output => false,
        no_arbitration => false)
        port map ( -- 
          reqL => reqL , 
          ackL => ackL , 
          dataL => data_in, 
          reqR => access_memory_call_reqs(0),
          ackR => access_memory_call_acks(0),
          dataR => access_memory_call_data(72 downto 0),
          tagR => access_memory_call_tag(0 downto 0),
          clk => clk, reset => reset -- 
        ); -- 
      CallComplete: OutputDemuxBaseWithBuffering -- 
        generic map ( -- 
          iwidth => 33,
          owidth => 33,
          detailed_buffering_per_output => outBUFs, 
          full_rate => false, 
          twidth => 1,
          name => "OutputDemuxBaseWithBuffering",
          nreqs => 1) -- 
        port map ( -- 
          reqR => reqR , 
          ackR => ackR , 
          dataR => data_out, 
          reqL => access_memory_return_acks(0), -- cross-over
          ackL => access_memory_return_reqs(0), -- cross-over
          dataL => access_memory_return_data(32 downto 0),
          tagL => access_memory_return_tag(0 downto 0),
          clk => clk,
          reset => reset -- 
        ); -- 
      -- 
    end Block; -- call group 0
    -- 
  end Block; -- data_path
  -- 
end write_to_memory_arch;
library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library aHiR_ieee_proposed;
use aHiR_ieee_proposed.math_utility_pkg.all;
use aHiR_ieee_proposed.fixed_pkg.all;
use aHiR_ieee_proposed.float_pkg.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
use ahir.floatoperatorpackage.all;
use ahir.utilities.all;
library cpu_ccu;
use cpu_ccu.ccu_global_package.all;
entity ccu is  -- system 
  port (-- 
    clk : in std_logic;
    reset : in std_logic;
    AJIT_to_ENV_processor_mode_pipe_read_data: out std_logic_vector(7 downto 0);
    AJIT_to_ENV_processor_mode_pipe_read_req : in std_logic_vector(0 downto 0);
    AJIT_to_ENV_processor_mode_pipe_read_ack : out std_logic_vector(0 downto 0);
    BROADCAST_INIT_PC: out std_logic_vector(31 downto 0);
    DCACHE_to_CPU_reset_ack_pipe_write_data: in std_logic_vector(0 downto 0);
    DCACHE_to_CPU_reset_ack_pipe_write_req : in std_logic_vector(0 downto 0);
    DCACHE_to_CPU_reset_ack_pipe_write_ack : out std_logic_vector(0 downto 0);
    ENV_to_AJIT_reset: in std_logic_vector(7 downto 0);
    ICACHE_to_CPU_reset_ack_pipe_write_data: in std_logic_vector(0 downto 0);
    ICACHE_to_CPU_reset_ack_pipe_write_req : in std_logic_vector(0 downto 0);
    ICACHE_to_CPU_reset_ack_pipe_write_ack : out std_logic_vector(0 downto 0);
    MMU_to_CPU_reset_ack_pipe_write_data: in std_logic_vector(0 downto 0);
    MMU_to_CPU_reset_ack_pipe_write_req : in std_logic_vector(0 downto 0);
    MMU_to_CPU_reset_ack_pipe_write_ack : out std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_DCACHE_reset_pipe_read_data: out std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_DCACHE_reset_pipe_read_req : in std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_DCACHE_reset_pipe_read_ack : out std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_ICACHE_reset_pipe_read_data: out std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_ICACHE_reset_pipe_read_req : in std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_ICACHE_reset_pipe_read_ack : out std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_MMU_reset_pipe_read_data: out std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_MMU_reset_pipe_read_req : in std_logic_vector(0 downto 0);
    NOBLOCK_CPU_to_MMU_reset_pipe_read_ack : out std_logic_vector(0 downto 0);
    ccu_to_debug_interface_pipe_read_data: out std_logic_vector(32 downto 0);
    ccu_to_debug_interface_pipe_read_req : in std_logic_vector(0 downto 0);
    ccu_to_debug_interface_pipe_read_ack : out std_logic_vector(0 downto 0);
    ccu_to_teu_pipe_read_data: out std_logic_vector(106 downto 0);
    ccu_to_teu_pipe_read_req : in std_logic_vector(0 downto 0);
    ccu_to_teu_pipe_read_ack : out std_logic_vector(0 downto 0);
    ccu_to_teu_debug_command_pipe_read_data: out std_logic_vector(7 downto 0);
    ccu_to_teu_debug_command_pipe_read_req : in std_logic_vector(0 downto 0);
    ccu_to_teu_debug_command_pipe_read_ack : out std_logic_vector(0 downto 0);
    ccu_to_teu_fpunit_register_access_command_pipe_read_data: out std_logic_vector(39 downto 0);
    ccu_to_teu_fpunit_register_access_command_pipe_read_req : in std_logic_vector(0 downto 0);
    ccu_to_teu_fpunit_register_access_command_pipe_read_ack : out std_logic_vector(0 downto 0);
    ccu_to_teu_iunit_register_access_command_pipe_read_data: out std_logic_vector(41 downto 0);
    ccu_to_teu_iunit_register_access_command_pipe_read_req : in std_logic_vector(0 downto 0);
    ccu_to_teu_iunit_register_access_command_pipe_read_ack : out std_logic_vector(0 downto 0);
    ccu_to_teu_load_store_command_pipe_read_data: out std_logic_vector(72 downto 0);
    ccu_to_teu_load_store_command_pipe_read_req : in std_logic_vector(0 downto 0);
    ccu_to_teu_load_store_command_pipe_read_ack : out std_logic_vector(0 downto 0);
    debug_interface_to_ccu_pipe_write_data: in std_logic_vector(32 downto 0);
    debug_interface_to_ccu_pipe_write_req : in std_logic_vector(0 downto 0);
    debug_interface_to_ccu_pipe_write_ack : out std_logic_vector(0 downto 0);
    teu_debug_to_ccu_response_pipe_write_data: in std_logic_vector(0 downto 0);
    teu_debug_to_ccu_response_pipe_write_req : in std_logic_vector(0 downto 0);
    teu_debug_to_ccu_response_pipe_write_ack : out std_logic_vector(0 downto 0);
    teu_to_ccu_pipe_write_data: in std_logic_vector(225 downto 0);
    teu_to_ccu_pipe_write_req : in std_logic_vector(0 downto 0);
    teu_to_ccu_pipe_write_ack : out std_logic_vector(0 downto 0);
    teu_to_ccu_fpunit_register_access_response_pipe_write_data: in std_logic_vector(32 downto 0);
    teu_to_ccu_fpunit_register_access_response_pipe_write_req : in std_logic_vector(0 downto 0);
    teu_to_ccu_fpunit_register_access_response_pipe_write_ack : out std_logic_vector(0 downto 0);
    teu_to_ccu_iunit_register_access_response_pipe_write_data: in std_logic_vector(31 downto 0);
    teu_to_ccu_iunit_register_access_response_pipe_write_req : in std_logic_vector(0 downto 0);
    teu_to_ccu_iunit_register_access_response_pipe_write_ack : out std_logic_vector(0 downto 0);
    teu_to_ccu_load_store_response_pipe_write_data: in std_logic_vector(32 downto 0);
    teu_to_ccu_load_store_response_pipe_write_req : in std_logic_vector(0 downto 0);
    teu_to_ccu_load_store_response_pipe_write_ack : out std_logic_vector(0 downto 0)); -- 
  -- 
end entity; 
architecture ccu_arch  of ccu is -- system-architecture 
  -- interface signals to connect to memory space memory_space_1
  -- declarations related to module access_ccu_to_teu_debug
  component access_ccu_to_teu_debug is -- 
    generic (tag_length : integer); 
    port ( -- 
      command : in  std_logic_vector(39 downto 0);
      response : out  std_logic_vector(0 downto 0);
      teu_debug_to_ccu_response_pipe_read_req : out  std_logic_vector(0 downto 0);
      teu_debug_to_ccu_response_pipe_read_ack : in   std_logic_vector(0 downto 0);
      teu_debug_to_ccu_response_pipe_read_data : in   std_logic_vector(0 downto 0);
      ccu_to_teu_debug_command_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_to_teu_debug_command_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_to_teu_debug_command_pipe_write_data : out  std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module access_ccu_to_teu_debug
  signal access_ccu_to_teu_debug_command :  std_logic_vector(39 downto 0);
  signal access_ccu_to_teu_debug_response :  std_logic_vector(0 downto 0);
  signal access_ccu_to_teu_debug_in_args    : std_logic_vector(39 downto 0);
  signal access_ccu_to_teu_debug_out_args   : std_logic_vector(0 downto 0);
  signal access_ccu_to_teu_debug_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal access_ccu_to_teu_debug_tag_out   : std_logic_vector(1 downto 0);
  signal access_ccu_to_teu_debug_start_req : std_logic;
  signal access_ccu_to_teu_debug_start_ack : std_logic;
  signal access_ccu_to_teu_debug_fin_req   : std_logic;
  signal access_ccu_to_teu_debug_fin_ack : std_logic;
  -- caller side aggregated signals for module access_ccu_to_teu_debug
  signal access_ccu_to_teu_debug_call_reqs: std_logic_vector(0 downto 0);
  signal access_ccu_to_teu_debug_call_acks: std_logic_vector(0 downto 0);
  signal access_ccu_to_teu_debug_return_reqs: std_logic_vector(0 downto 0);
  signal access_ccu_to_teu_debug_return_acks: std_logic_vector(0 downto 0);
  signal access_ccu_to_teu_debug_call_data: std_logic_vector(39 downto 0);
  signal access_ccu_to_teu_debug_call_tag: std_logic_vector(0 downto 0);
  signal access_ccu_to_teu_debug_return_data: std_logic_vector(0 downto 0);
  signal access_ccu_to_teu_debug_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module access_fpunit_registers
  component access_fpunit_registers is -- 
    generic (tag_length : integer); 
    port ( -- 
      command : in  std_logic_vector(38 downto 0);
      response : out  std_logic_vector(32 downto 0);
      teu_to_ccu_fpunit_register_access_response_pipe_read_req : out  std_logic_vector(0 downto 0);
      teu_to_ccu_fpunit_register_access_response_pipe_read_ack : in   std_logic_vector(0 downto 0);
      teu_to_ccu_fpunit_register_access_response_pipe_read_data : in   std_logic_vector(32 downto 0);
      ccu_to_teu_fpunit_register_access_command_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_to_teu_fpunit_register_access_command_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_to_teu_fpunit_register_access_command_pipe_write_data : out  std_logic_vector(39 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module access_fpunit_registers
  signal access_fpunit_registers_command :  std_logic_vector(38 downto 0);
  signal access_fpunit_registers_response :  std_logic_vector(32 downto 0);
  signal access_fpunit_registers_in_args    : std_logic_vector(38 downto 0);
  signal access_fpunit_registers_out_args   : std_logic_vector(32 downto 0);
  signal access_fpunit_registers_tag_in    : std_logic_vector(2 downto 0) := (others => '0');
  signal access_fpunit_registers_tag_out   : std_logic_vector(2 downto 0);
  signal access_fpunit_registers_start_req : std_logic;
  signal access_fpunit_registers_start_ack : std_logic;
  signal access_fpunit_registers_fin_req   : std_logic;
  signal access_fpunit_registers_fin_ack : std_logic;
  -- caller side aggregated signals for module access_fpunit_registers
  signal access_fpunit_registers_call_reqs: std_logic_vector(1 downto 0);
  signal access_fpunit_registers_call_acks: std_logic_vector(1 downto 0);
  signal access_fpunit_registers_return_reqs: std_logic_vector(1 downto 0);
  signal access_fpunit_registers_return_acks: std_logic_vector(1 downto 0);
  signal access_fpunit_registers_call_data: std_logic_vector(77 downto 0);
  signal access_fpunit_registers_call_tag: std_logic_vector(1 downto 0);
  signal access_fpunit_registers_return_data: std_logic_vector(65 downto 0);
  signal access_fpunit_registers_return_tag: std_logic_vector(1 downto 0);
  -- declarations related to module access_iunit_registers
  component access_iunit_registers is -- 
    generic (tag_length : integer); 
    port ( -- 
      cmd_word : in  std_logic_vector(40 downto 0);
      response_word : out  std_logic_vector(31 downto 0);
      teu_to_ccu_iunit_register_access_response_pipe_read_req : out  std_logic_vector(0 downto 0);
      teu_to_ccu_iunit_register_access_response_pipe_read_ack : in   std_logic_vector(0 downto 0);
      teu_to_ccu_iunit_register_access_response_pipe_read_data : in   std_logic_vector(31 downto 0);
      ccu_to_teu_iunit_register_access_command_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_to_teu_iunit_register_access_command_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_to_teu_iunit_register_access_command_pipe_write_data : out  std_logic_vector(41 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module access_iunit_registers
  signal access_iunit_registers_cmd_word :  std_logic_vector(40 downto 0);
  signal access_iunit_registers_response_word :  std_logic_vector(31 downto 0);
  signal access_iunit_registers_in_args    : std_logic_vector(40 downto 0);
  signal access_iunit_registers_out_args   : std_logic_vector(31 downto 0);
  signal access_iunit_registers_tag_in    : std_logic_vector(4 downto 0) := (others => '0');
  signal access_iunit_registers_tag_out   : std_logic_vector(4 downto 0);
  signal access_iunit_registers_start_req : std_logic;
  signal access_iunit_registers_start_ack : std_logic;
  signal access_iunit_registers_fin_req   : std_logic;
  signal access_iunit_registers_fin_ack : std_logic;
  -- caller side aggregated signals for module access_iunit_registers
  signal access_iunit_registers_call_reqs: std_logic_vector(2 downto 0);
  signal access_iunit_registers_call_acks: std_logic_vector(2 downto 0);
  signal access_iunit_registers_return_reqs: std_logic_vector(2 downto 0);
  signal access_iunit_registers_return_acks: std_logic_vector(2 downto 0);
  signal access_iunit_registers_call_data: std_logic_vector(122 downto 0);
  signal access_iunit_registers_call_tag: std_logic_vector(8 downto 0);
  signal access_iunit_registers_return_data: std_logic_vector(95 downto 0);
  signal access_iunit_registers_return_tag: std_logic_vector(8 downto 0);
  -- declarations related to module access_memory
  component access_memory is -- 
    generic (tag_length : integer); 
    port ( -- 
      command : in  std_logic_vector(72 downto 0);
      response : out  std_logic_vector(32 downto 0);
      teu_to_ccu_load_store_response_pipe_read_req : out  std_logic_vector(0 downto 0);
      teu_to_ccu_load_store_response_pipe_read_ack : in   std_logic_vector(0 downto 0);
      teu_to_ccu_load_store_response_pipe_read_data : in   std_logic_vector(32 downto 0);
      ccu_to_teu_load_store_command_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_to_teu_load_store_command_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_to_teu_load_store_command_pipe_write_data : out  std_logic_vector(72 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module access_memory
  signal access_memory_command :  std_logic_vector(72 downto 0);
  signal access_memory_response :  std_logic_vector(32 downto 0);
  signal access_memory_in_args    : std_logic_vector(72 downto 0);
  signal access_memory_out_args   : std_logic_vector(32 downto 0);
  signal access_memory_tag_in    : std_logic_vector(2 downto 0) := (others => '0');
  signal access_memory_tag_out   : std_logic_vector(2 downto 0);
  signal access_memory_start_req : std_logic;
  signal access_memory_start_ack : std_logic;
  signal access_memory_fin_req   : std_logic;
  signal access_memory_fin_ack : std_logic;
  -- caller side aggregated signals for module access_memory
  signal access_memory_call_reqs: std_logic_vector(1 downto 0);
  signal access_memory_call_acks: std_logic_vector(1 downto 0);
  signal access_memory_return_reqs: std_logic_vector(1 downto 0);
  signal access_memory_return_acks: std_logic_vector(1 downto 0);
  signal access_memory_call_data: std_logic_vector(145 downto 0);
  signal access_memory_call_tag: std_logic_vector(1 downto 0);
  signal access_memory_return_data: std_logic_vector(65 downto 0);
  signal access_memory_return_tag: std_logic_vector(1 downto 0);
  -- declarations related to module advancePC
  -- declarations related to module calculatePostTrapRegisterValues
  -- declarations related to module ccu_daemon
  component ccu_daemon is -- 
    generic (tag_length : integer); 
    port ( -- 
      ccu_start_pipe_read_req : out  std_logic_vector(0 downto 0);
      ccu_start_pipe_read_ack : in   std_logic_vector(0 downto 0);
      ccu_start_pipe_read_data : in   std_logic_vector(0 downto 0);
      teu_to_ccu_pipe_read_req : out  std_logic_vector(0 downto 0);
      teu_to_ccu_pipe_read_ack : in   std_logic_vector(0 downto 0);
      teu_to_ccu_pipe_read_data : in   std_logic_vector(225 downto 0);
      DBG_TO_CCU_INIT_NPC_SIG : in std_logic_vector(31 downto 0);
      DBG_TO_CCU_INIT_PC_SIG : in std_logic_vector(31 downto 0);
      DBG_TO_CCU_INIT_PSR_SIG : in std_logic_vector(31 downto 0);
      ccu_to_ccu_reset : in std_logic_vector(7 downto 0);
      AJIT_to_ENV_processor_mode_pipe_write_req : out  std_logic_vector(0 downto 0);
      AJIT_to_ENV_processor_mode_pipe_write_ack : in   std_logic_vector(0 downto 0);
      AJIT_to_ENV_processor_mode_pipe_write_data : out  std_logic_vector(7 downto 0);
      BROADCAST_INIT_PC_pipe_write_req : out  std_logic_vector(0 downto 0);
      BROADCAST_INIT_PC_pipe_write_ack : in   std_logic_vector(0 downto 0);
      BROADCAST_INIT_PC_pipe_write_data : out  std_logic_vector(31 downto 0);
      CCU_TO_DBG_MODE_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
      CCU_TO_DBG_MODE_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
      CCU_TO_DBG_MODE_SIG_pipe_write_data : out  std_logic_vector(3 downto 0);
      ccu_to_teu_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_to_teu_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_to_teu_pipe_write_data : out  std_logic_vector(106 downto 0);
      reset_dcache_icache_mmu_call_reqs : out  std_logic_vector(0 downto 0);
      reset_dcache_icache_mmu_call_acks : in   std_logic_vector(0 downto 0);
      reset_dcache_icache_mmu_call_tag  :  out  std_logic_vector(0 downto 0);
      reset_dcache_icache_mmu_return_reqs : out  std_logic_vector(0 downto 0);
      reset_dcache_icache_mmu_return_acks : in   std_logic_vector(0 downto 0);
      reset_dcache_icache_mmu_return_tag :  in   std_logic_vector(0 downto 0);
      access_iunit_registers_call_reqs : out  std_logic_vector(0 downto 0);
      access_iunit_registers_call_acks : in   std_logic_vector(0 downto 0);
      access_iunit_registers_call_data : out  std_logic_vector(40 downto 0);
      access_iunit_registers_call_tag  :  out  std_logic_vector(2 downto 0);
      access_iunit_registers_return_reqs : out  std_logic_vector(0 downto 0);
      access_iunit_registers_return_acks : in   std_logic_vector(0 downto 0);
      access_iunit_registers_return_data : in   std_logic_vector(31 downto 0);
      access_iunit_registers_return_tag :  in   std_logic_vector(2 downto 0);
      queryDebugger_call_reqs : out  std_logic_vector(0 downto 0);
      queryDebugger_call_acks : in   std_logic_vector(0 downto 0);
      queryDebugger_call_data : out  std_logic_vector(109 downto 0);
      queryDebugger_call_tag  :  out  std_logic_vector(0 downto 0);
      queryDebugger_return_reqs : out  std_logic_vector(0 downto 0);
      queryDebugger_return_acks : in   std_logic_vector(0 downto 0);
      queryDebugger_return_data : in   std_logic_vector(97 downto 0);
      queryDebugger_return_tag :  in   std_logic_vector(0 downto 0);
      ccu_debug_initialize_call_reqs : out  std_logic_vector(0 downto 0);
      ccu_debug_initialize_call_acks : in   std_logic_vector(0 downto 0);
      ccu_debug_initialize_call_tag  :  out  std_logic_vector(0 downto 0);
      ccu_debug_initialize_return_reqs : out  std_logic_vector(0 downto 0);
      ccu_debug_initialize_return_acks : in   std_logic_vector(0 downto 0);
      ccu_debug_initialize_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module ccu_daemon
  signal ccu_daemon_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal ccu_daemon_tag_out   : std_logic_vector(1 downto 0);
  signal ccu_daemon_start_req : std_logic;
  signal ccu_daemon_start_ack : std_logic;
  signal ccu_daemon_fin_req   : std_logic;
  signal ccu_daemon_fin_ack : std_logic;
  -- declarations related to module ccu_debug_daemon
  component ccu_debug_daemon is -- 
    generic (tag_length : integer); 
    port ( -- 
      ccu_daemon_to_ccu_debug_daemon_pipe_read_req : out  std_logic_vector(0 downto 0);
      ccu_daemon_to_ccu_debug_daemon_pipe_read_ack : in   std_logic_vector(0 downto 0);
      ccu_daemon_to_ccu_debug_daemon_pipe_read_data : in   std_logic_vector(32 downto 0);
      debug_interface_to_ccu_pipe_read_req : out  std_logic_vector(0 downto 0);
      debug_interface_to_ccu_pipe_read_ack : in   std_logic_vector(0 downto 0);
      debug_interface_to_ccu_pipe_read_data : in   std_logic_vector(32 downto 0);
      CCU_TO_DBG_MODE_SIG : in std_logic_vector(3 downto 0);
      init_npc : in std_logic_vector(31 downto 0);
      init_pc : in std_logic_vector(31 downto 0);
      init_psr : in std_logic_vector(31 downto 0);
      DBG_TO_CCU_RESET_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
      DBG_TO_CCU_RESET_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
      DBG_TO_CCU_RESET_SIG_pipe_write_data : out  std_logic_vector(4 downto 0);
      DBG_TO_CCU_INIT_NPC_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_NPC_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_NPC_SIG_pipe_write_data : out  std_logic_vector(31 downto 0);
      DBG_TO_CCU_INIT_PC_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_PC_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_PC_SIG_pipe_write_data : out  std_logic_vector(31 downto 0);
      DBG_TO_CCU_INIT_PSR_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_PSR_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_PSR_SIG_pipe_write_data : out  std_logic_vector(31 downto 0);
      ccu_debug_daemon_to_ccu_daemon_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_debug_daemon_to_ccu_daemon_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_debug_daemon_to_ccu_daemon_pipe_write_data : out  std_logic_vector(31 downto 0);
      ccu_to_debug_interface_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_to_debug_interface_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_to_debug_interface_pipe_write_data : out  std_logic_vector(32 downto 0);
      init_npc_pipe_write_req : out  std_logic_vector(0 downto 0);
      init_npc_pipe_write_ack : in   std_logic_vector(0 downto 0);
      init_npc_pipe_write_data : out  std_logic_vector(31 downto 0);
      init_pc_pipe_write_req : out  std_logic_vector(0 downto 0);
      init_pc_pipe_write_ack : in   std_logic_vector(0 downto 0);
      init_pc_pipe_write_data : out  std_logic_vector(31 downto 0);
      init_psr_pipe_write_req : out  std_logic_vector(0 downto 0);
      init_psr_pipe_write_ack : in   std_logic_vector(0 downto 0);
      init_psr_pipe_write_data : out  std_logic_vector(31 downto 0);
      read_fpunit_register_call_reqs : out  std_logic_vector(0 downto 0);
      read_fpunit_register_call_acks : in   std_logic_vector(0 downto 0);
      read_fpunit_register_call_data : out  std_logic_vector(5 downto 0);
      read_fpunit_register_call_tag  :  out  std_logic_vector(0 downto 0);
      read_fpunit_register_return_reqs : out  std_logic_vector(0 downto 0);
      read_fpunit_register_return_acks : in   std_logic_vector(0 downto 0);
      read_fpunit_register_return_data : in   std_logic_vector(31 downto 0);
      read_fpunit_register_return_tag :  in   std_logic_vector(0 downto 0);
      write_iunit_register_call_reqs : out  std_logic_vector(0 downto 0);
      write_iunit_register_call_acks : in   std_logic_vector(0 downto 0);
      write_iunit_register_call_data : out  std_logic_vector(39 downto 0);
      write_iunit_register_call_tag  :  out  std_logic_vector(0 downto 0);
      write_iunit_register_return_reqs : out  std_logic_vector(0 downto 0);
      write_iunit_register_return_acks : in   std_logic_vector(0 downto 0);
      write_iunit_register_return_data : in   std_logic_vector(0 downto 0);
      write_iunit_register_return_tag :  in   std_logic_vector(0 downto 0);
      read_iunit_register_call_reqs : out  std_logic_vector(0 downto 0);
      read_iunit_register_call_acks : in   std_logic_vector(0 downto 0);
      read_iunit_register_call_data : out  std_logic_vector(7 downto 0);
      read_iunit_register_call_tag  :  out  std_logic_vector(0 downto 0);
      read_iunit_register_return_reqs : out  std_logic_vector(0 downto 0);
      read_iunit_register_return_acks : in   std_logic_vector(0 downto 0);
      read_iunit_register_return_data : in   std_logic_vector(31 downto 0);
      read_iunit_register_return_tag :  in   std_logic_vector(0 downto 0);
      write_fpunit_register_call_reqs : out  std_logic_vector(0 downto 0);
      write_fpunit_register_call_acks : in   std_logic_vector(0 downto 0);
      write_fpunit_register_call_data : out  std_logic_vector(37 downto 0);
      write_fpunit_register_call_tag  :  out  std_logic_vector(0 downto 0);
      write_fpunit_register_return_reqs : out  std_logic_vector(0 downto 0);
      write_fpunit_register_return_acks : in   std_logic_vector(0 downto 0);
      write_fpunit_register_return_data : in   std_logic_vector(0 downto 0);
      write_fpunit_register_return_tag :  in   std_logic_vector(0 downto 0);
      read_from_memory_call_reqs : out  std_logic_vector(0 downto 0);
      read_from_memory_call_acks : in   std_logic_vector(0 downto 0);
      read_from_memory_call_data : out  std_logic_vector(39 downto 0);
      read_from_memory_call_tag  :  out  std_logic_vector(0 downto 0);
      read_from_memory_return_reqs : out  std_logic_vector(0 downto 0);
      read_from_memory_return_acks : in   std_logic_vector(0 downto 0);
      read_from_memory_return_data : in   std_logic_vector(32 downto 0);
      read_from_memory_return_tag :  in   std_logic_vector(0 downto 0);
      write_to_memory_call_reqs : out  std_logic_vector(0 downto 0);
      write_to_memory_call_acks : in   std_logic_vector(0 downto 0);
      write_to_memory_call_data : out  std_logic_vector(71 downto 0);
      write_to_memory_call_tag  :  out  std_logic_vector(0 downto 0);
      write_to_memory_return_reqs : out  std_logic_vector(0 downto 0);
      write_to_memory_return_acks : in   std_logic_vector(0 downto 0);
      write_to_memory_return_data : in   std_logic_vector(0 downto 0);
      write_to_memory_return_tag :  in   std_logic_vector(0 downto 0);
      send_ccu_to_teu_debug_call_reqs : out  std_logic_vector(0 downto 0);
      send_ccu_to_teu_debug_call_acks : in   std_logic_vector(0 downto 0);
      send_ccu_to_teu_debug_call_data : out  std_logic_vector(38 downto 0);
      send_ccu_to_teu_debug_call_tag  :  out  std_logic_vector(0 downto 0);
      send_ccu_to_teu_debug_return_reqs : out  std_logic_vector(0 downto 0);
      send_ccu_to_teu_debug_return_acks : in   std_logic_vector(0 downto 0);
      send_ccu_to_teu_debug_return_data : in   std_logic_vector(0 downto 0);
      send_ccu_to_teu_debug_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module ccu_debug_daemon
  signal ccu_debug_daemon_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal ccu_debug_daemon_tag_out   : std_logic_vector(1 downto 0);
  signal ccu_debug_daemon_start_req : std_logic;
  signal ccu_debug_daemon_start_ack : std_logic;
  signal ccu_debug_daemon_fin_req   : std_logic;
  signal ccu_debug_daemon_fin_ack : std_logic;
  -- declarations related to module ccu_debug_initialize
  component ccu_debug_initialize is -- 
    generic (tag_length : integer); 
    port ( -- 
      DBG_TO_CCU_RESET_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
      DBG_TO_CCU_RESET_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
      DBG_TO_CCU_RESET_SIG_pipe_write_data : out  std_logic_vector(4 downto 0);
      DBG_TO_CCU_INIT_NPC_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_NPC_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_NPC_SIG_pipe_write_data : out  std_logic_vector(31 downto 0);
      DBG_TO_CCU_INIT_PC_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_PC_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_PC_SIG_pipe_write_data : out  std_logic_vector(31 downto 0);
      DBG_TO_CCU_INIT_PSR_SIG_pipe_write_req : out  std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_PSR_SIG_pipe_write_ack : in   std_logic_vector(0 downto 0);
      DBG_TO_CCU_INIT_PSR_SIG_pipe_write_data : out  std_logic_vector(31 downto 0);
      init_npc_pipe_write_req : out  std_logic_vector(0 downto 0);
      init_npc_pipe_write_ack : in   std_logic_vector(0 downto 0);
      init_npc_pipe_write_data : out  std_logic_vector(31 downto 0);
      init_pc_pipe_write_req : out  std_logic_vector(0 downto 0);
      init_pc_pipe_write_ack : in   std_logic_vector(0 downto 0);
      init_pc_pipe_write_data : out  std_logic_vector(31 downto 0);
      init_psr_pipe_write_req : out  std_logic_vector(0 downto 0);
      init_psr_pipe_write_ack : in   std_logic_vector(0 downto 0);
      init_psr_pipe_write_data : out  std_logic_vector(31 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module ccu_debug_initialize
  signal ccu_debug_initialize_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal ccu_debug_initialize_tag_out   : std_logic_vector(1 downto 0);
  signal ccu_debug_initialize_start_req : std_logic;
  signal ccu_debug_initialize_start_ack : std_logic;
  signal ccu_debug_initialize_fin_req   : std_logic;
  signal ccu_debug_initialize_fin_ack : std_logic;
  -- caller side aggregated signals for module ccu_debug_initialize
  signal ccu_debug_initialize_call_reqs: std_logic_vector(0 downto 0);
  signal ccu_debug_initialize_call_acks: std_logic_vector(0 downto 0);
  signal ccu_debug_initialize_return_reqs: std_logic_vector(0 downto 0);
  signal ccu_debug_initialize_return_acks: std_logic_vector(0 downto 0);
  signal ccu_debug_initialize_call_tag: std_logic_vector(0 downto 0);
  signal ccu_debug_initialize_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module construct_send_ccu_to_teu_args
  -- declarations related to module decode_cpu_resets
  -- declarations related to module decode_debug_command
  -- declarations related to module init_processor_state
  -- declarations related to module queryDebugger
  component queryDebugger is -- 
    generic (tag_length : integer); 
    port ( -- 
      first_connect_flag : in  std_logic_vector(0 downto 0);
      i_machine_error : in  std_logic_vector(0 downto 0);
      i_exception_found : in  std_logic_vector(0 downto 0);
      i_interrupt_found : in  std_logic_vector(0 downto 0);
      i_annul_instr : in  std_logic_vector(0 downto 0);
      i_debug_break_on_traps : in  std_logic_vector(0 downto 0);
      i_dbg_status : in  std_logic_vector(7 downto 0);
      i_PC : in  std_logic_vector(31 downto 0);
      i_NPC : in  std_logic_vector(31 downto 0);
      i_PSR : in  std_logic_vector(31 downto 0);
      o_annul_instr : out  std_logic_vector(0 downto 0);
      o_ignore_bp : out  std_logic_vector(0 downto 0);
      o_PC : out  std_logic_vector(31 downto 0);
      o_NPC : out  std_logic_vector(31 downto 0);
      o_PSR : out  std_logic_vector(31 downto 0);
      recv_ccu_debug_daemon_to_ccu_daemon_call_reqs : out  std_logic_vector(0 downto 0);
      recv_ccu_debug_daemon_to_ccu_daemon_call_acks : in   std_logic_vector(0 downto 0);
      recv_ccu_debug_daemon_to_ccu_daemon_call_tag  :  out  std_logic_vector(0 downto 0);
      recv_ccu_debug_daemon_to_ccu_daemon_return_reqs : out  std_logic_vector(0 downto 0);
      recv_ccu_debug_daemon_to_ccu_daemon_return_acks : in   std_logic_vector(0 downto 0);
      recv_ccu_debug_daemon_to_ccu_daemon_return_data : in   std_logic_vector(95 downto 0);
      recv_ccu_debug_daemon_to_ccu_daemon_return_tag :  in   std_logic_vector(0 downto 0);
      send_ccu_daemon_to_ccu_debug_daemon_call_reqs : out  std_logic_vector(0 downto 0);
      send_ccu_daemon_to_ccu_debug_daemon_call_acks : in   std_logic_vector(0 downto 0);
      send_ccu_daemon_to_ccu_debug_daemon_call_data : out  std_logic_vector(127 downto 0);
      send_ccu_daemon_to_ccu_debug_daemon_call_tag  :  out  std_logic_vector(0 downto 0);
      send_ccu_daemon_to_ccu_debug_daemon_return_reqs : out  std_logic_vector(0 downto 0);
      send_ccu_daemon_to_ccu_debug_daemon_return_acks : in   std_logic_vector(0 downto 0);
      send_ccu_daemon_to_ccu_debug_daemon_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module queryDebugger
  signal queryDebugger_first_connect_flag :  std_logic_vector(0 downto 0);
  signal queryDebugger_i_machine_error :  std_logic_vector(0 downto 0);
  signal queryDebugger_i_exception_found :  std_logic_vector(0 downto 0);
  signal queryDebugger_i_interrupt_found :  std_logic_vector(0 downto 0);
  signal queryDebugger_i_annul_instr :  std_logic_vector(0 downto 0);
  signal queryDebugger_i_debug_break_on_traps :  std_logic_vector(0 downto 0);
  signal queryDebugger_i_dbg_status :  std_logic_vector(7 downto 0);
  signal queryDebugger_i_PC :  std_logic_vector(31 downto 0);
  signal queryDebugger_i_NPC :  std_logic_vector(31 downto 0);
  signal queryDebugger_i_PSR :  std_logic_vector(31 downto 0);
  signal queryDebugger_o_annul_instr :  std_logic_vector(0 downto 0);
  signal queryDebugger_o_ignore_bp :  std_logic_vector(0 downto 0);
  signal queryDebugger_o_PC :  std_logic_vector(31 downto 0);
  signal queryDebugger_o_NPC :  std_logic_vector(31 downto 0);
  signal queryDebugger_o_PSR :  std_logic_vector(31 downto 0);
  signal queryDebugger_in_args    : std_logic_vector(109 downto 0);
  signal queryDebugger_out_args   : std_logic_vector(97 downto 0);
  signal queryDebugger_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal queryDebugger_tag_out   : std_logic_vector(1 downto 0);
  signal queryDebugger_start_req : std_logic;
  signal queryDebugger_start_ack : std_logic;
  signal queryDebugger_fin_req   : std_logic;
  signal queryDebugger_fin_ack : std_logic;
  -- caller side aggregated signals for module queryDebugger
  signal queryDebugger_call_reqs: std_logic_vector(0 downto 0);
  signal queryDebugger_call_acks: std_logic_vector(0 downto 0);
  signal queryDebugger_return_reqs: std_logic_vector(0 downto 0);
  signal queryDebugger_return_acks: std_logic_vector(0 downto 0);
  signal queryDebugger_call_data: std_logic_vector(109 downto 0);
  signal queryDebugger_call_tag: std_logic_vector(0 downto 0);
  signal queryDebugger_return_data: std_logic_vector(97 downto 0);
  signal queryDebugger_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module read_fpunit_register
  component read_fpunit_register is -- 
    generic (tag_length : integer); 
    port ( -- 
      fsr_flag : in  std_logic_vector(0 downto 0);
      reg_id : in  std_logic_vector(4 downto 0);
      ret_val : out  std_logic_vector(31 downto 0);
      access_fpunit_registers_call_reqs : out  std_logic_vector(0 downto 0);
      access_fpunit_registers_call_acks : in   std_logic_vector(0 downto 0);
      access_fpunit_registers_call_data : out  std_logic_vector(38 downto 0);
      access_fpunit_registers_call_tag  :  out  std_logic_vector(0 downto 0);
      access_fpunit_registers_return_reqs : out  std_logic_vector(0 downto 0);
      access_fpunit_registers_return_acks : in   std_logic_vector(0 downto 0);
      access_fpunit_registers_return_data : in   std_logic_vector(32 downto 0);
      access_fpunit_registers_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module read_fpunit_register
  signal read_fpunit_register_fsr_flag :  std_logic_vector(0 downto 0);
  signal read_fpunit_register_reg_id :  std_logic_vector(4 downto 0);
  signal read_fpunit_register_ret_val :  std_logic_vector(31 downto 0);
  signal read_fpunit_register_in_args    : std_logic_vector(5 downto 0);
  signal read_fpunit_register_out_args   : std_logic_vector(31 downto 0);
  signal read_fpunit_register_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal read_fpunit_register_tag_out   : std_logic_vector(1 downto 0);
  signal read_fpunit_register_start_req : std_logic;
  signal read_fpunit_register_start_ack : std_logic;
  signal read_fpunit_register_fin_req   : std_logic;
  signal read_fpunit_register_fin_ack : std_logic;
  -- caller side aggregated signals for module read_fpunit_register
  signal read_fpunit_register_call_reqs: std_logic_vector(0 downto 0);
  signal read_fpunit_register_call_acks: std_logic_vector(0 downto 0);
  signal read_fpunit_register_return_reqs: std_logic_vector(0 downto 0);
  signal read_fpunit_register_return_acks: std_logic_vector(0 downto 0);
  signal read_fpunit_register_call_data: std_logic_vector(5 downto 0);
  signal read_fpunit_register_call_tag: std_logic_vector(0 downto 0);
  signal read_fpunit_register_return_data: std_logic_vector(31 downto 0);
  signal read_fpunit_register_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module read_from_memory
  component read_from_memory is -- 
    generic (tag_length : integer); 
    port ( -- 
      asi : in  std_logic_vector(7 downto 0);
      addr : in  std_logic_vector(31 downto 0);
      err_flag : out  std_logic_vector(0 downto 0);
      data : out  std_logic_vector(31 downto 0);
      access_memory_call_reqs : out  std_logic_vector(0 downto 0);
      access_memory_call_acks : in   std_logic_vector(0 downto 0);
      access_memory_call_data : out  std_logic_vector(72 downto 0);
      access_memory_call_tag  :  out  std_logic_vector(0 downto 0);
      access_memory_return_reqs : out  std_logic_vector(0 downto 0);
      access_memory_return_acks : in   std_logic_vector(0 downto 0);
      access_memory_return_data : in   std_logic_vector(32 downto 0);
      access_memory_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module read_from_memory
  signal read_from_memory_asi :  std_logic_vector(7 downto 0);
  signal read_from_memory_addr :  std_logic_vector(31 downto 0);
  signal read_from_memory_err_flag :  std_logic_vector(0 downto 0);
  signal read_from_memory_data :  std_logic_vector(31 downto 0);
  signal read_from_memory_in_args    : std_logic_vector(39 downto 0);
  signal read_from_memory_out_args   : std_logic_vector(32 downto 0);
  signal read_from_memory_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal read_from_memory_tag_out   : std_logic_vector(1 downto 0);
  signal read_from_memory_start_req : std_logic;
  signal read_from_memory_start_ack : std_logic;
  signal read_from_memory_fin_req   : std_logic;
  signal read_from_memory_fin_ack : std_logic;
  -- caller side aggregated signals for module read_from_memory
  signal read_from_memory_call_reqs: std_logic_vector(0 downto 0);
  signal read_from_memory_call_acks: std_logic_vector(0 downto 0);
  signal read_from_memory_return_reqs: std_logic_vector(0 downto 0);
  signal read_from_memory_return_acks: std_logic_vector(0 downto 0);
  signal read_from_memory_call_data: std_logic_vector(39 downto 0);
  signal read_from_memory_call_tag: std_logic_vector(0 downto 0);
  signal read_from_memory_return_data: std_logic_vector(32 downto 0);
  signal read_from_memory_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module read_iunit_register
  component read_iunit_register is -- 
    generic (tag_length : integer); 
    port ( -- 
      reg_type : in  std_logic_vector(2 downto 0);
      reg_id : in  std_logic_vector(4 downto 0);
      ret_val : out  std_logic_vector(31 downto 0);
      access_iunit_registers_call_reqs : out  std_logic_vector(0 downto 0);
      access_iunit_registers_call_acks : in   std_logic_vector(0 downto 0);
      access_iunit_registers_call_data : out  std_logic_vector(40 downto 0);
      access_iunit_registers_call_tag  :  out  std_logic_vector(2 downto 0);
      access_iunit_registers_return_reqs : out  std_logic_vector(0 downto 0);
      access_iunit_registers_return_acks : in   std_logic_vector(0 downto 0);
      access_iunit_registers_return_data : in   std_logic_vector(31 downto 0);
      access_iunit_registers_return_tag :  in   std_logic_vector(2 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module read_iunit_register
  signal read_iunit_register_reg_type :  std_logic_vector(2 downto 0);
  signal read_iunit_register_reg_id :  std_logic_vector(4 downto 0);
  signal read_iunit_register_ret_val :  std_logic_vector(31 downto 0);
  signal read_iunit_register_in_args    : std_logic_vector(7 downto 0);
  signal read_iunit_register_out_args   : std_logic_vector(31 downto 0);
  signal read_iunit_register_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal read_iunit_register_tag_out   : std_logic_vector(1 downto 0);
  signal read_iunit_register_start_req : std_logic;
  signal read_iunit_register_start_ack : std_logic;
  signal read_iunit_register_fin_req   : std_logic;
  signal read_iunit_register_fin_ack : std_logic;
  -- caller side aggregated signals for module read_iunit_register
  signal read_iunit_register_call_reqs: std_logic_vector(0 downto 0);
  signal read_iunit_register_call_acks: std_logic_vector(0 downto 0);
  signal read_iunit_register_return_reqs: std_logic_vector(0 downto 0);
  signal read_iunit_register_return_acks: std_logic_vector(0 downto 0);
  signal read_iunit_register_call_data: std_logic_vector(7 downto 0);
  signal read_iunit_register_call_tag: std_logic_vector(0 downto 0);
  signal read_iunit_register_return_data: std_logic_vector(31 downto 0);
  signal read_iunit_register_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module recv_ccu_debug_daemon_to_ccu_daemon
  component recv_ccu_debug_daemon_to_ccu_daemon is -- 
    generic (tag_length : integer); 
    port ( -- 
      pc : out  std_logic_vector(31 downto 0);
      npc : out  std_logic_vector(31 downto 0);
      psr : out  std_logic_vector(31 downto 0);
      ccu_debug_daemon_to_ccu_daemon_pipe_read_req : out  std_logic_vector(0 downto 0);
      ccu_debug_daemon_to_ccu_daemon_pipe_read_ack : in   std_logic_vector(0 downto 0);
      ccu_debug_daemon_to_ccu_daemon_pipe_read_data : in   std_logic_vector(31 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module recv_ccu_debug_daemon_to_ccu_daemon
  signal recv_ccu_debug_daemon_to_ccu_daemon_pc :  std_logic_vector(31 downto 0);
  signal recv_ccu_debug_daemon_to_ccu_daemon_npc :  std_logic_vector(31 downto 0);
  signal recv_ccu_debug_daemon_to_ccu_daemon_psr :  std_logic_vector(31 downto 0);
  signal recv_ccu_debug_daemon_to_ccu_daemon_out_args   : std_logic_vector(95 downto 0);
  signal recv_ccu_debug_daemon_to_ccu_daemon_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal recv_ccu_debug_daemon_to_ccu_daemon_tag_out   : std_logic_vector(1 downto 0);
  signal recv_ccu_debug_daemon_to_ccu_daemon_start_req : std_logic;
  signal recv_ccu_debug_daemon_to_ccu_daemon_start_ack : std_logic;
  signal recv_ccu_debug_daemon_to_ccu_daemon_fin_req   : std_logic;
  signal recv_ccu_debug_daemon_to_ccu_daemon_fin_ack : std_logic;
  -- caller side aggregated signals for module recv_ccu_debug_daemon_to_ccu_daemon
  signal recv_ccu_debug_daemon_to_ccu_daemon_call_reqs: std_logic_vector(0 downto 0);
  signal recv_ccu_debug_daemon_to_ccu_daemon_call_acks: std_logic_vector(0 downto 0);
  signal recv_ccu_debug_daemon_to_ccu_daemon_return_reqs: std_logic_vector(0 downto 0);
  signal recv_ccu_debug_daemon_to_ccu_daemon_return_acks: std_logic_vector(0 downto 0);
  signal recv_ccu_debug_daemon_to_ccu_daemon_call_tag: std_logic_vector(0 downto 0);
  signal recv_ccu_debug_daemon_to_ccu_daemon_return_data: std_logic_vector(95 downto 0);
  signal recv_ccu_debug_daemon_to_ccu_daemon_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module reset_dcache_icache_mmu
  component reset_dcache_icache_mmu is -- 
    generic (tag_length : integer); 
    port ( -- 
      DCACHE_to_CPU_reset_ack_pipe_read_req : out  std_logic_vector(0 downto 0);
      DCACHE_to_CPU_reset_ack_pipe_read_ack : in   std_logic_vector(0 downto 0);
      DCACHE_to_CPU_reset_ack_pipe_read_data : in   std_logic_vector(0 downto 0);
      ICACHE_to_CPU_reset_ack_pipe_read_req : out  std_logic_vector(0 downto 0);
      ICACHE_to_CPU_reset_ack_pipe_read_ack : in   std_logic_vector(0 downto 0);
      ICACHE_to_CPU_reset_ack_pipe_read_data : in   std_logic_vector(0 downto 0);
      MMU_to_CPU_reset_ack_pipe_read_req : out  std_logic_vector(0 downto 0);
      MMU_to_CPU_reset_ack_pipe_read_ack : in   std_logic_vector(0 downto 0);
      MMU_to_CPU_reset_ack_pipe_read_data : in   std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_DCACHE_reset_pipe_write_req : out  std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_DCACHE_reset_pipe_write_ack : in   std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_DCACHE_reset_pipe_write_data : out  std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_ICACHE_reset_pipe_write_req : out  std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_ICACHE_reset_pipe_write_ack : in   std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_ICACHE_reset_pipe_write_data : out  std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_MMU_reset_pipe_write_req : out  std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_MMU_reset_pipe_write_ack : in   std_logic_vector(0 downto 0);
      NOBLOCK_CPU_to_MMU_reset_pipe_write_data : out  std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module reset_dcache_icache_mmu
  signal reset_dcache_icache_mmu_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal reset_dcache_icache_mmu_tag_out   : std_logic_vector(1 downto 0);
  signal reset_dcache_icache_mmu_start_req : std_logic;
  signal reset_dcache_icache_mmu_start_ack : std_logic;
  signal reset_dcache_icache_mmu_fin_req   : std_logic;
  signal reset_dcache_icache_mmu_fin_ack : std_logic;
  -- caller side aggregated signals for module reset_dcache_icache_mmu
  signal reset_dcache_icache_mmu_call_reqs: std_logic_vector(0 downto 0);
  signal reset_dcache_icache_mmu_call_acks: std_logic_vector(0 downto 0);
  signal reset_dcache_icache_mmu_return_reqs: std_logic_vector(0 downto 0);
  signal reset_dcache_icache_mmu_return_acks: std_logic_vector(0 downto 0);
  signal reset_dcache_icache_mmu_call_tag: std_logic_vector(0 downto 0);
  signal reset_dcache_icache_mmu_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module reset_replicator_daemon
  component reset_replicator_daemon is -- 
    generic (tag_length : integer); 
    port ( -- 
      DBG_TO_CCU_RESET_SIG : in std_logic_vector(4 downto 0);
      ENV_to_AJIT_reset : in std_logic_vector(7 downto 0);
      ccu_start_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_start_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_start_pipe_write_data : out  std_logic_vector(0 downto 0);
      ccu_to_ccu_reset_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_to_ccu_reset_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_to_ccu_reset_pipe_write_data : out  std_logic_vector(7 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module reset_replicator_daemon
  signal reset_replicator_daemon_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal reset_replicator_daemon_tag_out   : std_logic_vector(1 downto 0);
  signal reset_replicator_daemon_start_req : std_logic;
  signal reset_replicator_daemon_start_ack : std_logic;
  signal reset_replicator_daemon_fin_req   : std_logic;
  signal reset_replicator_daemon_fin_ack : std_logic;
  -- declarations related to module selectTrap
  -- declarations related to module send_ccu_daemon_to_ccu_debug_daemon
  component send_ccu_daemon_to_ccu_debug_daemon is -- 
    generic (tag_length : integer); 
    port ( -- 
      command : in  std_logic_vector(31 downto 0);
      pc : in  std_logic_vector(31 downto 0);
      npc : in  std_logic_vector(31 downto 0);
      psr : in  std_logic_vector(31 downto 0);
      ccu_daemon_to_ccu_debug_daemon_pipe_write_req : out  std_logic_vector(0 downto 0);
      ccu_daemon_to_ccu_debug_daemon_pipe_write_ack : in   std_logic_vector(0 downto 0);
      ccu_daemon_to_ccu_debug_daemon_pipe_write_data : out  std_logic_vector(32 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module send_ccu_daemon_to_ccu_debug_daemon
  signal send_ccu_daemon_to_ccu_debug_daemon_command :  std_logic_vector(31 downto 0);
  signal send_ccu_daemon_to_ccu_debug_daemon_pc :  std_logic_vector(31 downto 0);
  signal send_ccu_daemon_to_ccu_debug_daemon_npc :  std_logic_vector(31 downto 0);
  signal send_ccu_daemon_to_ccu_debug_daemon_psr :  std_logic_vector(31 downto 0);
  signal send_ccu_daemon_to_ccu_debug_daemon_in_args    : std_logic_vector(127 downto 0);
  signal send_ccu_daemon_to_ccu_debug_daemon_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal send_ccu_daemon_to_ccu_debug_daemon_tag_out   : std_logic_vector(1 downto 0);
  signal send_ccu_daemon_to_ccu_debug_daemon_start_req : std_logic;
  signal send_ccu_daemon_to_ccu_debug_daemon_start_ack : std_logic;
  signal send_ccu_daemon_to_ccu_debug_daemon_fin_req   : std_logic;
  signal send_ccu_daemon_to_ccu_debug_daemon_fin_ack : std_logic;
  -- caller side aggregated signals for module send_ccu_daemon_to_ccu_debug_daemon
  signal send_ccu_daemon_to_ccu_debug_daemon_call_reqs: std_logic_vector(0 downto 0);
  signal send_ccu_daemon_to_ccu_debug_daemon_call_acks: std_logic_vector(0 downto 0);
  signal send_ccu_daemon_to_ccu_debug_daemon_return_reqs: std_logic_vector(0 downto 0);
  signal send_ccu_daemon_to_ccu_debug_daemon_return_acks: std_logic_vector(0 downto 0);
  signal send_ccu_daemon_to_ccu_debug_daemon_call_data: std_logic_vector(127 downto 0);
  signal send_ccu_daemon_to_ccu_debug_daemon_call_tag: std_logic_vector(0 downto 0);
  signal send_ccu_daemon_to_ccu_debug_daemon_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module send_ccu_to_teu_debug
  component send_ccu_to_teu_debug is -- 
    generic (tag_length : integer); 
    port ( -- 
      opcode : in  std_logic_vector(2 downto 0);
      watch_reg_type : in  std_logic_vector(1 downto 0);
      reg_id : in  std_logic_vector(1 downto 0);
      reg_val : in  std_logic_vector(31 downto 0);
      err : out  std_logic_vector(0 downto 0);
      access_ccu_to_teu_debug_call_reqs : out  std_logic_vector(0 downto 0);
      access_ccu_to_teu_debug_call_acks : in   std_logic_vector(0 downto 0);
      access_ccu_to_teu_debug_call_data : out  std_logic_vector(39 downto 0);
      access_ccu_to_teu_debug_call_tag  :  out  std_logic_vector(0 downto 0);
      access_ccu_to_teu_debug_return_reqs : out  std_logic_vector(0 downto 0);
      access_ccu_to_teu_debug_return_acks : in   std_logic_vector(0 downto 0);
      access_ccu_to_teu_debug_return_data : in   std_logic_vector(0 downto 0);
      access_ccu_to_teu_debug_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module send_ccu_to_teu_debug
  signal send_ccu_to_teu_debug_opcode :  std_logic_vector(2 downto 0);
  signal send_ccu_to_teu_debug_watch_reg_type :  std_logic_vector(1 downto 0);
  signal send_ccu_to_teu_debug_reg_id :  std_logic_vector(1 downto 0);
  signal send_ccu_to_teu_debug_reg_val :  std_logic_vector(31 downto 0);
  signal send_ccu_to_teu_debug_err :  std_logic_vector(0 downto 0);
  signal send_ccu_to_teu_debug_in_args    : std_logic_vector(38 downto 0);
  signal send_ccu_to_teu_debug_out_args   : std_logic_vector(0 downto 0);
  signal send_ccu_to_teu_debug_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal send_ccu_to_teu_debug_tag_out   : std_logic_vector(1 downto 0);
  signal send_ccu_to_teu_debug_start_req : std_logic;
  signal send_ccu_to_teu_debug_start_ack : std_logic;
  signal send_ccu_to_teu_debug_fin_req   : std_logic;
  signal send_ccu_to_teu_debug_fin_ack : std_logic;
  -- caller side aggregated signals for module send_ccu_to_teu_debug
  signal send_ccu_to_teu_debug_call_reqs: std_logic_vector(0 downto 0);
  signal send_ccu_to_teu_debug_call_acks: std_logic_vector(0 downto 0);
  signal send_ccu_to_teu_debug_return_reqs: std_logic_vector(0 downto 0);
  signal send_ccu_to_teu_debug_return_acks: std_logic_vector(0 downto 0);
  signal send_ccu_to_teu_debug_call_data: std_logic_vector(38 downto 0);
  signal send_ccu_to_teu_debug_call_tag: std_logic_vector(0 downto 0);
  signal send_ccu_to_teu_debug_return_data: std_logic_vector(0 downto 0);
  signal send_ccu_to_teu_debug_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module write_fpunit_register
  component write_fpunit_register is -- 
    generic (tag_length : integer); 
    port ( -- 
      fsr_flag : in  std_logic_vector(0 downto 0);
      reg_id : in  std_logic_vector(4 downto 0);
      reg_val : in  std_logic_vector(31 downto 0);
      err : out  std_logic_vector(0 downto 0);
      access_fpunit_registers_call_reqs : out  std_logic_vector(0 downto 0);
      access_fpunit_registers_call_acks : in   std_logic_vector(0 downto 0);
      access_fpunit_registers_call_data : out  std_logic_vector(38 downto 0);
      access_fpunit_registers_call_tag  :  out  std_logic_vector(0 downto 0);
      access_fpunit_registers_return_reqs : out  std_logic_vector(0 downto 0);
      access_fpunit_registers_return_acks : in   std_logic_vector(0 downto 0);
      access_fpunit_registers_return_data : in   std_logic_vector(32 downto 0);
      access_fpunit_registers_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module write_fpunit_register
  signal write_fpunit_register_fsr_flag :  std_logic_vector(0 downto 0);
  signal write_fpunit_register_reg_id :  std_logic_vector(4 downto 0);
  signal write_fpunit_register_reg_val :  std_logic_vector(31 downto 0);
  signal write_fpunit_register_err :  std_logic_vector(0 downto 0);
  signal write_fpunit_register_in_args    : std_logic_vector(37 downto 0);
  signal write_fpunit_register_out_args   : std_logic_vector(0 downto 0);
  signal write_fpunit_register_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal write_fpunit_register_tag_out   : std_logic_vector(1 downto 0);
  signal write_fpunit_register_start_req : std_logic;
  signal write_fpunit_register_start_ack : std_logic;
  signal write_fpunit_register_fin_req   : std_logic;
  signal write_fpunit_register_fin_ack : std_logic;
  -- caller side aggregated signals for module write_fpunit_register
  signal write_fpunit_register_call_reqs: std_logic_vector(0 downto 0);
  signal write_fpunit_register_call_acks: std_logic_vector(0 downto 0);
  signal write_fpunit_register_return_reqs: std_logic_vector(0 downto 0);
  signal write_fpunit_register_return_acks: std_logic_vector(0 downto 0);
  signal write_fpunit_register_call_data: std_logic_vector(37 downto 0);
  signal write_fpunit_register_call_tag: std_logic_vector(0 downto 0);
  signal write_fpunit_register_return_data: std_logic_vector(0 downto 0);
  signal write_fpunit_register_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module write_iunit_register
  component write_iunit_register is -- 
    generic (tag_length : integer); 
    port ( -- 
      reg_type : in  std_logic_vector(2 downto 0);
      reg_id : in  std_logic_vector(4 downto 0);
      reg_val : in  std_logic_vector(31 downto 0);
      ignore : out  std_logic_vector(0 downto 0);
      access_iunit_registers_call_reqs : out  std_logic_vector(0 downto 0);
      access_iunit_registers_call_acks : in   std_logic_vector(0 downto 0);
      access_iunit_registers_call_data : out  std_logic_vector(40 downto 0);
      access_iunit_registers_call_tag  :  out  std_logic_vector(2 downto 0);
      access_iunit_registers_return_reqs : out  std_logic_vector(0 downto 0);
      access_iunit_registers_return_acks : in   std_logic_vector(0 downto 0);
      access_iunit_registers_return_data : in   std_logic_vector(31 downto 0);
      access_iunit_registers_return_tag :  in   std_logic_vector(2 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module write_iunit_register
  signal write_iunit_register_reg_type :  std_logic_vector(2 downto 0);
  signal write_iunit_register_reg_id :  std_logic_vector(4 downto 0);
  signal write_iunit_register_reg_val :  std_logic_vector(31 downto 0);
  signal write_iunit_register_ignore :  std_logic_vector(0 downto 0);
  signal write_iunit_register_in_args    : std_logic_vector(39 downto 0);
  signal write_iunit_register_out_args   : std_logic_vector(0 downto 0);
  signal write_iunit_register_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal write_iunit_register_tag_out   : std_logic_vector(1 downto 0);
  signal write_iunit_register_start_req : std_logic;
  signal write_iunit_register_start_ack : std_logic;
  signal write_iunit_register_fin_req   : std_logic;
  signal write_iunit_register_fin_ack : std_logic;
  -- caller side aggregated signals for module write_iunit_register
  signal write_iunit_register_call_reqs: std_logic_vector(0 downto 0);
  signal write_iunit_register_call_acks: std_logic_vector(0 downto 0);
  signal write_iunit_register_return_reqs: std_logic_vector(0 downto 0);
  signal write_iunit_register_return_acks: std_logic_vector(0 downto 0);
  signal write_iunit_register_call_data: std_logic_vector(39 downto 0);
  signal write_iunit_register_call_tag: std_logic_vector(0 downto 0);
  signal write_iunit_register_return_data: std_logic_vector(0 downto 0);
  signal write_iunit_register_return_tag: std_logic_vector(0 downto 0);
  -- declarations related to module write_to_memory
  component write_to_memory is -- 
    generic (tag_length : integer); 
    port ( -- 
      asi : in  std_logic_vector(7 downto 0);
      addr : in  std_logic_vector(31 downto 0);
      data : in  std_logic_vector(31 downto 0);
      err_flag : out  std_logic_vector(0 downto 0);
      access_memory_call_reqs : out  std_logic_vector(0 downto 0);
      access_memory_call_acks : in   std_logic_vector(0 downto 0);
      access_memory_call_data : out  std_logic_vector(72 downto 0);
      access_memory_call_tag  :  out  std_logic_vector(0 downto 0);
      access_memory_return_reqs : out  std_logic_vector(0 downto 0);
      access_memory_return_acks : in   std_logic_vector(0 downto 0);
      access_memory_return_data : in   std_logic_vector(32 downto 0);
      access_memory_return_tag :  in   std_logic_vector(0 downto 0);
      tag_in: in std_logic_vector(tag_length-1 downto 0);
      tag_out: out std_logic_vector(tag_length-1 downto 0) ;
      clk : in std_logic;
      reset : in std_logic;
      start_req : in std_logic;
      start_ack : out std_logic;
      fin_req : in std_logic;
      fin_ack   : out std_logic-- 
    );
    -- 
  end component;
  -- argument signals for module write_to_memory
  signal write_to_memory_asi :  std_logic_vector(7 downto 0);
  signal write_to_memory_addr :  std_logic_vector(31 downto 0);
  signal write_to_memory_data :  std_logic_vector(31 downto 0);
  signal write_to_memory_err_flag :  std_logic_vector(0 downto 0);
  signal write_to_memory_in_args    : std_logic_vector(71 downto 0);
  signal write_to_memory_out_args   : std_logic_vector(0 downto 0);
  signal write_to_memory_tag_in    : std_logic_vector(1 downto 0) := (others => '0');
  signal write_to_memory_tag_out   : std_logic_vector(1 downto 0);
  signal write_to_memory_start_req : std_logic;
  signal write_to_memory_start_ack : std_logic;
  signal write_to_memory_fin_req   : std_logic;
  signal write_to_memory_fin_ack : std_logic;
  -- caller side aggregated signals for module write_to_memory
  signal write_to_memory_call_reqs: std_logic_vector(0 downto 0);
  signal write_to_memory_call_acks: std_logic_vector(0 downto 0);
  signal write_to_memory_return_reqs: std_logic_vector(0 downto 0);
  signal write_to_memory_return_acks: std_logic_vector(0 downto 0);
  signal write_to_memory_call_data: std_logic_vector(71 downto 0);
  signal write_to_memory_call_tag: std_logic_vector(0 downto 0);
  signal write_to_memory_return_data: std_logic_vector(0 downto 0);
  signal write_to_memory_return_tag: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe AJIT_to_ENV_processor_mode
  signal AJIT_to_ENV_processor_mode_pipe_write_data: std_logic_vector(7 downto 0);
  signal AJIT_to_ENV_processor_mode_pipe_write_req: std_logic_vector(0 downto 0);
  signal AJIT_to_ENV_processor_mode_pipe_write_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe BROADCAST_INIT_PC
  signal BROADCAST_INIT_PC_pipe_write_data: std_logic_vector(31 downto 0);
  signal BROADCAST_INIT_PC_pipe_write_req: std_logic_vector(0 downto 0);
  signal BROADCAST_INIT_PC_pipe_write_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe CCU_TO_DBG_MODE_SIG
  signal CCU_TO_DBG_MODE_SIG_pipe_write_data: std_logic_vector(3 downto 0);
  signal CCU_TO_DBG_MODE_SIG_pipe_write_req: std_logic_vector(0 downto 0);
  signal CCU_TO_DBG_MODE_SIG_pipe_write_ack: std_logic_vector(0 downto 0);
  -- signal decl. for read from internal signal pipe CCU_TO_DBG_MODE_SIG
  signal CCU_TO_DBG_MODE_SIG: std_logic_vector(3 downto 0);
  -- aggregate signals for write to pipe DBG_TO_CCU_INIT_NPC_SIG
  signal DBG_TO_CCU_INIT_NPC_SIG_pipe_write_data: std_logic_vector(63 downto 0);
  signal DBG_TO_CCU_INIT_NPC_SIG_pipe_write_req: std_logic_vector(1 downto 0);
  signal DBG_TO_CCU_INIT_NPC_SIG_pipe_write_ack: std_logic_vector(1 downto 0);
  -- signal decl. for read from internal signal pipe DBG_TO_CCU_INIT_NPC_SIG
  signal DBG_TO_CCU_INIT_NPC_SIG: std_logic_vector(31 downto 0);
  -- aggregate signals for write to pipe DBG_TO_CCU_INIT_PC_SIG
  signal DBG_TO_CCU_INIT_PC_SIG_pipe_write_data: std_logic_vector(63 downto 0);
  signal DBG_TO_CCU_INIT_PC_SIG_pipe_write_req: std_logic_vector(1 downto 0);
  signal DBG_TO_CCU_INIT_PC_SIG_pipe_write_ack: std_logic_vector(1 downto 0);
  -- signal decl. for read from internal signal pipe DBG_TO_CCU_INIT_PC_SIG
  signal DBG_TO_CCU_INIT_PC_SIG: std_logic_vector(31 downto 0);
  -- aggregate signals for write to pipe DBG_TO_CCU_INIT_PSR_SIG
  signal DBG_TO_CCU_INIT_PSR_SIG_pipe_write_data: std_logic_vector(63 downto 0);
  signal DBG_TO_CCU_INIT_PSR_SIG_pipe_write_req: std_logic_vector(1 downto 0);
  signal DBG_TO_CCU_INIT_PSR_SIG_pipe_write_ack: std_logic_vector(1 downto 0);
  -- signal decl. for read from internal signal pipe DBG_TO_CCU_INIT_PSR_SIG
  signal DBG_TO_CCU_INIT_PSR_SIG: std_logic_vector(31 downto 0);
  -- aggregate signals for write to pipe DBG_TO_CCU_RESET_SIG
  signal DBG_TO_CCU_RESET_SIG_pipe_write_data: std_logic_vector(9 downto 0);
  signal DBG_TO_CCU_RESET_SIG_pipe_write_req: std_logic_vector(1 downto 0);
  signal DBG_TO_CCU_RESET_SIG_pipe_write_ack: std_logic_vector(1 downto 0);
  -- signal decl. for read from internal signal pipe DBG_TO_CCU_RESET_SIG
  signal DBG_TO_CCU_RESET_SIG: std_logic_vector(4 downto 0);
  -- aggregate signals for read from pipe DCACHE_to_CPU_reset_ack
  signal DCACHE_to_CPU_reset_ack_pipe_read_data: std_logic_vector(0 downto 0);
  signal DCACHE_to_CPU_reset_ack_pipe_read_req: std_logic_vector(0 downto 0);
  signal DCACHE_to_CPU_reset_ack_pipe_read_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for read from pipe ICACHE_to_CPU_reset_ack
  signal ICACHE_to_CPU_reset_ack_pipe_read_data: std_logic_vector(0 downto 0);
  signal ICACHE_to_CPU_reset_ack_pipe_read_req: std_logic_vector(0 downto 0);
  signal ICACHE_to_CPU_reset_ack_pipe_read_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for read from pipe MMU_to_CPU_reset_ack
  signal MMU_to_CPU_reset_ack_pipe_read_data: std_logic_vector(0 downto 0);
  signal MMU_to_CPU_reset_ack_pipe_read_req: std_logic_vector(0 downto 0);
  signal MMU_to_CPU_reset_ack_pipe_read_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe NOBLOCK_CPU_to_DCACHE_reset
  signal NOBLOCK_CPU_to_DCACHE_reset_pipe_write_data: std_logic_vector(0 downto 0);
  signal NOBLOCK_CPU_to_DCACHE_reset_pipe_write_req: std_logic_vector(0 downto 0);
  signal NOBLOCK_CPU_to_DCACHE_reset_pipe_write_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe NOBLOCK_CPU_to_ICACHE_reset
  signal NOBLOCK_CPU_to_ICACHE_reset_pipe_write_data: std_logic_vector(0 downto 0);
  signal NOBLOCK_CPU_to_ICACHE_reset_pipe_write_req: std_logic_vector(0 downto 0);
  signal NOBLOCK_CPU_to_ICACHE_reset_pipe_write_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe NOBLOCK_CPU_to_MMU_reset
  signal NOBLOCK_CPU_to_MMU_reset_pipe_write_data: std_logic_vector(0 downto 0);
  signal NOBLOCK_CPU_to_MMU_reset_pipe_write_req: std_logic_vector(0 downto 0);
  signal NOBLOCK_CPU_to_MMU_reset_pipe_write_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe ccu_daemon_to_ccu_debug_daemon
  signal ccu_daemon_to_ccu_debug_daemon_pipe_write_data: std_logic_vector(32 downto 0);
  signal ccu_daemon_to_ccu_debug_daemon_pipe_write_req: std_logic_vector(0 downto 0);
  signal ccu_daemon_to_ccu_debug_daemon_pipe_write_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for read from pipe ccu_daemon_to_ccu_debug_daemon
  signal ccu_daemon_to_ccu_debug_daemon_pipe_read_data: std_logic_vector(32 downto 0);
  signal ccu_daemon_to_ccu_debug_daemon_pipe_read_req: std_logic_vector(0 downto 0);
  signal ccu_daemon_to_ccu_debug_daemon_pipe_read_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe ccu_debug_daemon_to_ccu_daemon
  signal ccu_debug_daemon_to_ccu_daemon_pipe_write_data: std_logic_vector(31 downto 0);
  signal ccu_debug_daemon_to_ccu_daemon_pipe_write_req: std_logic_vector(0 downto 0);
  signal ccu_debug_daemon_to_ccu_daemon_pipe_write_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for read from pipe ccu_debug_daemon_to_ccu_daemon
  signal ccu_debug_daemon_to_ccu_daemon_pipe_read_data: std_logic_vector(31 downto 0);
  signal ccu_debug_daemon_to_ccu_daemon_pipe_read_req: std_logic_vector(0 downto 0);
  signal ccu_debug_daemon_to_ccu_daemon_pipe_read_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe ccu_start
  signal ccu_start_pipe_write_data: std_logic_vector(0 downto 0);
  signal ccu_start_pipe_write_req: std_logic_vector(0 downto 0);
  signal ccu_start_pipe_write_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for read from pipe ccu_start
  signal ccu_start_pipe_read_data: std_logic_vector(0 downto 0);
  signal ccu_start_pipe_read_req: std_logic_vector(0 downto 0);
  signal ccu_start_pipe_read_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe ccu_to_ccu_reset
  signal ccu_to_ccu_reset_pipe_write_data: std_logic_vector(7 downto 0);
  signal ccu_to_ccu_reset_pipe_write_req: std_logic_vector(0 downto 0);
  signal ccu_to_ccu_reset_pipe_write_ack: std_logic_vector(0 downto 0);
  -- signal decl. for read from internal signal pipe ccu_to_ccu_reset
  signal ccu_to_ccu_reset: std_logic_vector(7 downto 0);
  -- aggregate signals for write to pipe ccu_to_debug_interface
  signal ccu_to_debug_interface_pipe_write_data: std_logic_vector(32 downto 0);
  signal ccu_to_debug_interface_pipe_write_req: std_logic_vector(0 downto 0);
  signal ccu_to_debug_interface_pipe_write_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe ccu_to_teu
  signal ccu_to_teu_pipe_write_data: std_logic_vector(106 downto 0);
  signal ccu_to_teu_pipe_write_req: std_logic_vector(0 downto 0);
  signal ccu_to_teu_pipe_write_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe ccu_to_teu_debug_command
  signal ccu_to_teu_debug_command_pipe_write_data: std_logic_vector(7 downto 0);
  signal ccu_to_teu_debug_command_pipe_write_req: std_logic_vector(0 downto 0);
  signal ccu_to_teu_debug_command_pipe_write_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe ccu_to_teu_fpunit_register_access_command
  signal ccu_to_teu_fpunit_register_access_command_pipe_write_data: std_logic_vector(39 downto 0);
  signal ccu_to_teu_fpunit_register_access_command_pipe_write_req: std_logic_vector(0 downto 0);
  signal ccu_to_teu_fpunit_register_access_command_pipe_write_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe ccu_to_teu_iunit_register_access_command
  signal ccu_to_teu_iunit_register_access_command_pipe_write_data: std_logic_vector(41 downto 0);
  signal ccu_to_teu_iunit_register_access_command_pipe_write_req: std_logic_vector(0 downto 0);
  signal ccu_to_teu_iunit_register_access_command_pipe_write_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe ccu_to_teu_load_store_command
  signal ccu_to_teu_load_store_command_pipe_write_data: std_logic_vector(72 downto 0);
  signal ccu_to_teu_load_store_command_pipe_write_req: std_logic_vector(0 downto 0);
  signal ccu_to_teu_load_store_command_pipe_write_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for read from pipe debug_interface_to_ccu
  signal debug_interface_to_ccu_pipe_read_data: std_logic_vector(32 downto 0);
  signal debug_interface_to_ccu_pipe_read_req: std_logic_vector(0 downto 0);
  signal debug_interface_to_ccu_pipe_read_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for write to pipe init_npc
  signal init_npc_pipe_write_data: std_logic_vector(63 downto 0);
  signal init_npc_pipe_write_req: std_logic_vector(1 downto 0);
  signal init_npc_pipe_write_ack: std_logic_vector(1 downto 0);
  -- signal decl. for read from internal signal pipe init_npc
  signal init_npc: std_logic_vector(31 downto 0);
  -- aggregate signals for write to pipe init_pc
  signal init_pc_pipe_write_data: std_logic_vector(63 downto 0);
  signal init_pc_pipe_write_req: std_logic_vector(1 downto 0);
  signal init_pc_pipe_write_ack: std_logic_vector(1 downto 0);
  -- signal decl. for read from internal signal pipe init_pc
  signal init_pc: std_logic_vector(31 downto 0);
  -- aggregate signals for write to pipe init_psr
  signal init_psr_pipe_write_data: std_logic_vector(63 downto 0);
  signal init_psr_pipe_write_req: std_logic_vector(1 downto 0);
  signal init_psr_pipe_write_ack: std_logic_vector(1 downto 0);
  -- signal decl. for read from internal signal pipe init_psr
  signal init_psr: std_logic_vector(31 downto 0);
  -- aggregate signals for read from pipe teu_debug_to_ccu_response
  signal teu_debug_to_ccu_response_pipe_read_data: std_logic_vector(0 downto 0);
  signal teu_debug_to_ccu_response_pipe_read_req: std_logic_vector(0 downto 0);
  signal teu_debug_to_ccu_response_pipe_read_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for read from pipe teu_to_ccu
  signal teu_to_ccu_pipe_read_data: std_logic_vector(225 downto 0);
  signal teu_to_ccu_pipe_read_req: std_logic_vector(0 downto 0);
  signal teu_to_ccu_pipe_read_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for read from pipe teu_to_ccu_fpunit_register_access_response
  signal teu_to_ccu_fpunit_register_access_response_pipe_read_data: std_logic_vector(32 downto 0);
  signal teu_to_ccu_fpunit_register_access_response_pipe_read_req: std_logic_vector(0 downto 0);
  signal teu_to_ccu_fpunit_register_access_response_pipe_read_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for read from pipe teu_to_ccu_iunit_register_access_response
  signal teu_to_ccu_iunit_register_access_response_pipe_read_data: std_logic_vector(31 downto 0);
  signal teu_to_ccu_iunit_register_access_response_pipe_read_req: std_logic_vector(0 downto 0);
  signal teu_to_ccu_iunit_register_access_response_pipe_read_ack: std_logic_vector(0 downto 0);
  -- aggregate signals for read from pipe teu_to_ccu_load_store_response
  signal teu_to_ccu_load_store_response_pipe_read_data: std_logic_vector(32 downto 0);
  signal teu_to_ccu_load_store_response_pipe_read_req: std_logic_vector(0 downto 0);
  signal teu_to_ccu_load_store_response_pipe_read_ack: std_logic_vector(0 downto 0);
  -- gated clock signal declarations.
  -- 
begin -- 
  -- module access_ccu_to_teu_debug
  access_ccu_to_teu_debug_command <= access_ccu_to_teu_debug_in_args(39 downto 0);
  access_ccu_to_teu_debug_out_args <= access_ccu_to_teu_debug_response ;
  -- call arbiter for module access_ccu_to_teu_debug
  access_ccu_to_teu_debug_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 40,
      return_data_width => 1,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => access_ccu_to_teu_debug_call_reqs,
      call_acks => access_ccu_to_teu_debug_call_acks,
      return_reqs => access_ccu_to_teu_debug_return_reqs,
      return_acks => access_ccu_to_teu_debug_return_acks,
      call_data  => access_ccu_to_teu_debug_call_data,
      call_tag  => access_ccu_to_teu_debug_call_tag,
      return_tag  => access_ccu_to_teu_debug_return_tag,
      call_mtag => access_ccu_to_teu_debug_tag_in,
      return_mtag => access_ccu_to_teu_debug_tag_out,
      return_data =>access_ccu_to_teu_debug_return_data,
      call_mreq => access_ccu_to_teu_debug_start_req,
      call_mack => access_ccu_to_teu_debug_start_ack,
      return_mreq => access_ccu_to_teu_debug_fin_req,
      return_mack => access_ccu_to_teu_debug_fin_ack,
      call_mdata => access_ccu_to_teu_debug_in_args,
      return_mdata => access_ccu_to_teu_debug_out_args,
      clk => clk, 
      reset => reset --
    ); --
  access_ccu_to_teu_debug_instance:access_ccu_to_teu_debug-- 
    generic map(tag_length => 2)
    port map(-- 
      command => access_ccu_to_teu_debug_command,
      response => access_ccu_to_teu_debug_response,
      start_req => access_ccu_to_teu_debug_start_req,
      start_ack => access_ccu_to_teu_debug_start_ack,
      fin_req => access_ccu_to_teu_debug_fin_req,
      fin_ack => access_ccu_to_teu_debug_fin_ack,
      clk => clk,
      reset => reset,
      teu_debug_to_ccu_response_pipe_read_req => teu_debug_to_ccu_response_pipe_read_req(0 downto 0),
      teu_debug_to_ccu_response_pipe_read_ack => teu_debug_to_ccu_response_pipe_read_ack(0 downto 0),
      teu_debug_to_ccu_response_pipe_read_data => teu_debug_to_ccu_response_pipe_read_data(0 downto 0),
      ccu_to_teu_debug_command_pipe_write_req => ccu_to_teu_debug_command_pipe_write_req(0 downto 0),
      ccu_to_teu_debug_command_pipe_write_ack => ccu_to_teu_debug_command_pipe_write_ack(0 downto 0),
      ccu_to_teu_debug_command_pipe_write_data => ccu_to_teu_debug_command_pipe_write_data(7 downto 0),
      tag_in => access_ccu_to_teu_debug_tag_in,
      tag_out => access_ccu_to_teu_debug_tag_out-- 
    ); -- 
  -- module access_fpunit_registers
  access_fpunit_registers_command <= access_fpunit_registers_in_args(38 downto 0);
  access_fpunit_registers_out_args <= access_fpunit_registers_response ;
  -- call arbiter for module access_fpunit_registers
  access_fpunit_registers_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 2,
      call_data_width => 39,
      return_data_width => 33,
      callee_tag_length => 2,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => access_fpunit_registers_call_reqs,
      call_acks => access_fpunit_registers_call_acks,
      return_reqs => access_fpunit_registers_return_reqs,
      return_acks => access_fpunit_registers_return_acks,
      call_data  => access_fpunit_registers_call_data,
      call_tag  => access_fpunit_registers_call_tag,
      return_tag  => access_fpunit_registers_return_tag,
      call_mtag => access_fpunit_registers_tag_in,
      return_mtag => access_fpunit_registers_tag_out,
      return_data =>access_fpunit_registers_return_data,
      call_mreq => access_fpunit_registers_start_req,
      call_mack => access_fpunit_registers_start_ack,
      return_mreq => access_fpunit_registers_fin_req,
      return_mack => access_fpunit_registers_fin_ack,
      call_mdata => access_fpunit_registers_in_args,
      return_mdata => access_fpunit_registers_out_args,
      clk => clk, 
      reset => reset --
    ); --
  access_fpunit_registers_instance:access_fpunit_registers-- 
    generic map(tag_length => 3)
    port map(-- 
      command => access_fpunit_registers_command,
      response => access_fpunit_registers_response,
      start_req => access_fpunit_registers_start_req,
      start_ack => access_fpunit_registers_start_ack,
      fin_req => access_fpunit_registers_fin_req,
      fin_ack => access_fpunit_registers_fin_ack,
      clk => clk,
      reset => reset,
      teu_to_ccu_fpunit_register_access_response_pipe_read_req => teu_to_ccu_fpunit_register_access_response_pipe_read_req(0 downto 0),
      teu_to_ccu_fpunit_register_access_response_pipe_read_ack => teu_to_ccu_fpunit_register_access_response_pipe_read_ack(0 downto 0),
      teu_to_ccu_fpunit_register_access_response_pipe_read_data => teu_to_ccu_fpunit_register_access_response_pipe_read_data(32 downto 0),
      ccu_to_teu_fpunit_register_access_command_pipe_write_req => ccu_to_teu_fpunit_register_access_command_pipe_write_req(0 downto 0),
      ccu_to_teu_fpunit_register_access_command_pipe_write_ack => ccu_to_teu_fpunit_register_access_command_pipe_write_ack(0 downto 0),
      ccu_to_teu_fpunit_register_access_command_pipe_write_data => ccu_to_teu_fpunit_register_access_command_pipe_write_data(39 downto 0),
      tag_in => access_fpunit_registers_tag_in,
      tag_out => access_fpunit_registers_tag_out-- 
    ); -- 
  -- module access_iunit_registers
  access_iunit_registers_cmd_word <= access_iunit_registers_in_args(40 downto 0);
  access_iunit_registers_out_args <= access_iunit_registers_response_word ;
  -- call arbiter for module access_iunit_registers
  access_iunit_registers_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 3,
      call_data_width => 41,
      return_data_width => 32,
      callee_tag_length => 2,
      caller_tag_length => 3--
    )
    port map(-- 
      call_reqs => access_iunit_registers_call_reqs,
      call_acks => access_iunit_registers_call_acks,
      return_reqs => access_iunit_registers_return_reqs,
      return_acks => access_iunit_registers_return_acks,
      call_data  => access_iunit_registers_call_data,
      call_tag  => access_iunit_registers_call_tag,
      return_tag  => access_iunit_registers_return_tag,
      call_mtag => access_iunit_registers_tag_in,
      return_mtag => access_iunit_registers_tag_out,
      return_data =>access_iunit_registers_return_data,
      call_mreq => access_iunit_registers_start_req,
      call_mack => access_iunit_registers_start_ack,
      return_mreq => access_iunit_registers_fin_req,
      return_mack => access_iunit_registers_fin_ack,
      call_mdata => access_iunit_registers_in_args,
      return_mdata => access_iunit_registers_out_args,
      clk => clk, 
      reset => reset --
    ); --
  access_iunit_registers_instance:access_iunit_registers-- 
    generic map(tag_length => 5)
    port map(-- 
      cmd_word => access_iunit_registers_cmd_word,
      response_word => access_iunit_registers_response_word,
      start_req => access_iunit_registers_start_req,
      start_ack => access_iunit_registers_start_ack,
      fin_req => access_iunit_registers_fin_req,
      fin_ack => access_iunit_registers_fin_ack,
      clk => clk,
      reset => reset,
      teu_to_ccu_iunit_register_access_response_pipe_read_req => teu_to_ccu_iunit_register_access_response_pipe_read_req(0 downto 0),
      teu_to_ccu_iunit_register_access_response_pipe_read_ack => teu_to_ccu_iunit_register_access_response_pipe_read_ack(0 downto 0),
      teu_to_ccu_iunit_register_access_response_pipe_read_data => teu_to_ccu_iunit_register_access_response_pipe_read_data(31 downto 0),
      ccu_to_teu_iunit_register_access_command_pipe_write_req => ccu_to_teu_iunit_register_access_command_pipe_write_req(0 downto 0),
      ccu_to_teu_iunit_register_access_command_pipe_write_ack => ccu_to_teu_iunit_register_access_command_pipe_write_ack(0 downto 0),
      ccu_to_teu_iunit_register_access_command_pipe_write_data => ccu_to_teu_iunit_register_access_command_pipe_write_data(41 downto 0),
      tag_in => access_iunit_registers_tag_in,
      tag_out => access_iunit_registers_tag_out-- 
    ); -- 
  -- module access_memory
  access_memory_command <= access_memory_in_args(72 downto 0);
  access_memory_out_args <= access_memory_response ;
  -- call arbiter for module access_memory
  access_memory_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 2,
      call_data_width => 73,
      return_data_width => 33,
      callee_tag_length => 2,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => access_memory_call_reqs,
      call_acks => access_memory_call_acks,
      return_reqs => access_memory_return_reqs,
      return_acks => access_memory_return_acks,
      call_data  => access_memory_call_data,
      call_tag  => access_memory_call_tag,
      return_tag  => access_memory_return_tag,
      call_mtag => access_memory_tag_in,
      return_mtag => access_memory_tag_out,
      return_data =>access_memory_return_data,
      call_mreq => access_memory_start_req,
      call_mack => access_memory_start_ack,
      return_mreq => access_memory_fin_req,
      return_mack => access_memory_fin_ack,
      call_mdata => access_memory_in_args,
      return_mdata => access_memory_out_args,
      clk => clk, 
      reset => reset --
    ); --
  access_memory_instance:access_memory-- 
    generic map(tag_length => 3)
    port map(-- 
      command => access_memory_command,
      response => access_memory_response,
      start_req => access_memory_start_req,
      start_ack => access_memory_start_ack,
      fin_req => access_memory_fin_req,
      fin_ack => access_memory_fin_ack,
      clk => clk,
      reset => reset,
      teu_to_ccu_load_store_response_pipe_read_req => teu_to_ccu_load_store_response_pipe_read_req(0 downto 0),
      teu_to_ccu_load_store_response_pipe_read_ack => teu_to_ccu_load_store_response_pipe_read_ack(0 downto 0),
      teu_to_ccu_load_store_response_pipe_read_data => teu_to_ccu_load_store_response_pipe_read_data(32 downto 0),
      ccu_to_teu_load_store_command_pipe_write_req => ccu_to_teu_load_store_command_pipe_write_req(0 downto 0),
      ccu_to_teu_load_store_command_pipe_write_ack => ccu_to_teu_load_store_command_pipe_write_ack(0 downto 0),
      ccu_to_teu_load_store_command_pipe_write_data => ccu_to_teu_load_store_command_pipe_write_data(72 downto 0),
      tag_in => access_memory_tag_in,
      tag_out => access_memory_tag_out-- 
    ); -- 
  -- module ccu_daemon
  ccu_daemon_instance:ccu_daemon-- 
    generic map(tag_length => 2)
    port map(-- 
      start_req => ccu_daemon_start_req,
      start_ack => ccu_daemon_start_ack,
      fin_req => ccu_daemon_fin_req,
      fin_ack => ccu_daemon_fin_ack,
      clk => clk,
      reset => reset,
      DBG_TO_CCU_INIT_NPC_SIG => DBG_TO_CCU_INIT_NPC_SIG,
      DBG_TO_CCU_INIT_PC_SIG => DBG_TO_CCU_INIT_PC_SIG,
      DBG_TO_CCU_INIT_PSR_SIG => DBG_TO_CCU_INIT_PSR_SIG,
      ccu_start_pipe_read_req => ccu_start_pipe_read_req(0 downto 0),
      ccu_start_pipe_read_ack => ccu_start_pipe_read_ack(0 downto 0),
      ccu_start_pipe_read_data => ccu_start_pipe_read_data(0 downto 0),
      ccu_to_ccu_reset => ccu_to_ccu_reset,
      teu_to_ccu_pipe_read_req => teu_to_ccu_pipe_read_req(0 downto 0),
      teu_to_ccu_pipe_read_ack => teu_to_ccu_pipe_read_ack(0 downto 0),
      teu_to_ccu_pipe_read_data => teu_to_ccu_pipe_read_data(225 downto 0),
      AJIT_to_ENV_processor_mode_pipe_write_req => AJIT_to_ENV_processor_mode_pipe_write_req(0 downto 0),
      AJIT_to_ENV_processor_mode_pipe_write_ack => AJIT_to_ENV_processor_mode_pipe_write_ack(0 downto 0),
      AJIT_to_ENV_processor_mode_pipe_write_data => AJIT_to_ENV_processor_mode_pipe_write_data(7 downto 0),
      BROADCAST_INIT_PC_pipe_write_req => BROADCAST_INIT_PC_pipe_write_req(0 downto 0),
      BROADCAST_INIT_PC_pipe_write_ack => BROADCAST_INIT_PC_pipe_write_ack(0 downto 0),
      BROADCAST_INIT_PC_pipe_write_data => BROADCAST_INIT_PC_pipe_write_data(31 downto 0),
      CCU_TO_DBG_MODE_SIG_pipe_write_req => CCU_TO_DBG_MODE_SIG_pipe_write_req(0 downto 0),
      CCU_TO_DBG_MODE_SIG_pipe_write_ack => CCU_TO_DBG_MODE_SIG_pipe_write_ack(0 downto 0),
      CCU_TO_DBG_MODE_SIG_pipe_write_data => CCU_TO_DBG_MODE_SIG_pipe_write_data(3 downto 0),
      ccu_to_teu_pipe_write_req => ccu_to_teu_pipe_write_req(0 downto 0),
      ccu_to_teu_pipe_write_ack => ccu_to_teu_pipe_write_ack(0 downto 0),
      ccu_to_teu_pipe_write_data => ccu_to_teu_pipe_write_data(106 downto 0),
      access_iunit_registers_call_reqs => access_iunit_registers_call_reqs(2 downto 2),
      access_iunit_registers_call_acks => access_iunit_registers_call_acks(2 downto 2),
      access_iunit_registers_call_data => access_iunit_registers_call_data(122 downto 82),
      access_iunit_registers_call_tag => access_iunit_registers_call_tag(8 downto 6),
      access_iunit_registers_return_reqs => access_iunit_registers_return_reqs(2 downto 2),
      access_iunit_registers_return_acks => access_iunit_registers_return_acks(2 downto 2),
      access_iunit_registers_return_data => access_iunit_registers_return_data(95 downto 64),
      access_iunit_registers_return_tag => access_iunit_registers_return_tag(8 downto 6),
      ccu_debug_initialize_call_reqs => ccu_debug_initialize_call_reqs(0 downto 0),
      ccu_debug_initialize_call_acks => ccu_debug_initialize_call_acks(0 downto 0),
      ccu_debug_initialize_call_tag => ccu_debug_initialize_call_tag(0 downto 0),
      ccu_debug_initialize_return_reqs => ccu_debug_initialize_return_reqs(0 downto 0),
      ccu_debug_initialize_return_acks => ccu_debug_initialize_return_acks(0 downto 0),
      ccu_debug_initialize_return_tag => ccu_debug_initialize_return_tag(0 downto 0),
      reset_dcache_icache_mmu_call_reqs => reset_dcache_icache_mmu_call_reqs(0 downto 0),
      reset_dcache_icache_mmu_call_acks => reset_dcache_icache_mmu_call_acks(0 downto 0),
      reset_dcache_icache_mmu_call_tag => reset_dcache_icache_mmu_call_tag(0 downto 0),
      reset_dcache_icache_mmu_return_reqs => reset_dcache_icache_mmu_return_reqs(0 downto 0),
      reset_dcache_icache_mmu_return_acks => reset_dcache_icache_mmu_return_acks(0 downto 0),
      reset_dcache_icache_mmu_return_tag => reset_dcache_icache_mmu_return_tag(0 downto 0),
      queryDebugger_call_reqs => queryDebugger_call_reqs(0 downto 0),
      queryDebugger_call_acks => queryDebugger_call_acks(0 downto 0),
      queryDebugger_call_data => queryDebugger_call_data(109 downto 0),
      queryDebugger_call_tag => queryDebugger_call_tag(0 downto 0),
      queryDebugger_return_reqs => queryDebugger_return_reqs(0 downto 0),
      queryDebugger_return_acks => queryDebugger_return_acks(0 downto 0),
      queryDebugger_return_data => queryDebugger_return_data(97 downto 0),
      queryDebugger_return_tag => queryDebugger_return_tag(0 downto 0),
      tag_in => ccu_daemon_tag_in,
      tag_out => ccu_daemon_tag_out-- 
    ); -- 
  -- module will be run forever 
  ccu_daemon_tag_in <= (others => '0');
  ccu_daemon_auto_run: auto_run generic map(use_delay => true)  port map(clk => clk, reset => reset, start_req => ccu_daemon_start_req, start_ack => ccu_daemon_start_ack,  fin_req => ccu_daemon_fin_req,  fin_ack => ccu_daemon_fin_ack);
  -- module ccu_debug_daemon
  ccu_debug_daemon_instance:ccu_debug_daemon-- 
    generic map(tag_length => 2)
    port map(-- 
      start_req => ccu_debug_daemon_start_req,
      start_ack => ccu_debug_daemon_start_ack,
      fin_req => ccu_debug_daemon_fin_req,
      fin_ack => ccu_debug_daemon_fin_ack,
      clk => clk,
      reset => reset,
      CCU_TO_DBG_MODE_SIG => CCU_TO_DBG_MODE_SIG,
      ccu_daemon_to_ccu_debug_daemon_pipe_read_req => ccu_daemon_to_ccu_debug_daemon_pipe_read_req(0 downto 0),
      ccu_daemon_to_ccu_debug_daemon_pipe_read_ack => ccu_daemon_to_ccu_debug_daemon_pipe_read_ack(0 downto 0),
      ccu_daemon_to_ccu_debug_daemon_pipe_read_data => ccu_daemon_to_ccu_debug_daemon_pipe_read_data(32 downto 0),
      debug_interface_to_ccu_pipe_read_req => debug_interface_to_ccu_pipe_read_req(0 downto 0),
      debug_interface_to_ccu_pipe_read_ack => debug_interface_to_ccu_pipe_read_ack(0 downto 0),
      debug_interface_to_ccu_pipe_read_data => debug_interface_to_ccu_pipe_read_data(32 downto 0),
      init_npc => init_npc,
      init_pc => init_pc,
      init_psr => init_psr,
      DBG_TO_CCU_RESET_SIG_pipe_write_req => DBG_TO_CCU_RESET_SIG_pipe_write_req(0 downto 0),
      DBG_TO_CCU_RESET_SIG_pipe_write_ack => DBG_TO_CCU_RESET_SIG_pipe_write_ack(0 downto 0),
      DBG_TO_CCU_RESET_SIG_pipe_write_data => DBG_TO_CCU_RESET_SIG_pipe_write_data(4 downto 0),
      DBG_TO_CCU_INIT_NPC_SIG_pipe_write_req => DBG_TO_CCU_INIT_NPC_SIG_pipe_write_req(0 downto 0),
      DBG_TO_CCU_INIT_NPC_SIG_pipe_write_ack => DBG_TO_CCU_INIT_NPC_SIG_pipe_write_ack(0 downto 0),
      DBG_TO_CCU_INIT_NPC_SIG_pipe_write_data => DBG_TO_CCU_INIT_NPC_SIG_pipe_write_data(31 downto 0),
      DBG_TO_CCU_INIT_PC_SIG_pipe_write_req => DBG_TO_CCU_INIT_PC_SIG_pipe_write_req(0 downto 0),
      DBG_TO_CCU_INIT_PC_SIG_pipe_write_ack => DBG_TO_CCU_INIT_PC_SIG_pipe_write_ack(0 downto 0),
      DBG_TO_CCU_INIT_PC_SIG_pipe_write_data => DBG_TO_CCU_INIT_PC_SIG_pipe_write_data(31 downto 0),
      DBG_TO_CCU_INIT_PSR_SIG_pipe_write_req => DBG_TO_CCU_INIT_PSR_SIG_pipe_write_req(0 downto 0),
      DBG_TO_CCU_INIT_PSR_SIG_pipe_write_ack => DBG_TO_CCU_INIT_PSR_SIG_pipe_write_ack(0 downto 0),
      DBG_TO_CCU_INIT_PSR_SIG_pipe_write_data => DBG_TO_CCU_INIT_PSR_SIG_pipe_write_data(31 downto 0),
      ccu_debug_daemon_to_ccu_daemon_pipe_write_req => ccu_debug_daemon_to_ccu_daemon_pipe_write_req(0 downto 0),
      ccu_debug_daemon_to_ccu_daemon_pipe_write_ack => ccu_debug_daemon_to_ccu_daemon_pipe_write_ack(0 downto 0),
      ccu_debug_daemon_to_ccu_daemon_pipe_write_data => ccu_debug_daemon_to_ccu_daemon_pipe_write_data(31 downto 0),
      ccu_to_debug_interface_pipe_write_req => ccu_to_debug_interface_pipe_write_req(0 downto 0),
      ccu_to_debug_interface_pipe_write_ack => ccu_to_debug_interface_pipe_write_ack(0 downto 0),
      ccu_to_debug_interface_pipe_write_data => ccu_to_debug_interface_pipe_write_data(32 downto 0),
      init_npc_pipe_write_req => init_npc_pipe_write_req(0 downto 0),
      init_npc_pipe_write_ack => init_npc_pipe_write_ack(0 downto 0),
      init_npc_pipe_write_data => init_npc_pipe_write_data(31 downto 0),
      init_pc_pipe_write_req => init_pc_pipe_write_req(0 downto 0),
      init_pc_pipe_write_ack => init_pc_pipe_write_ack(0 downto 0),
      init_pc_pipe_write_data => init_pc_pipe_write_data(31 downto 0),
      init_psr_pipe_write_req => init_psr_pipe_write_req(0 downto 0),
      init_psr_pipe_write_ack => init_psr_pipe_write_ack(0 downto 0),
      init_psr_pipe_write_data => init_psr_pipe_write_data(31 downto 0),
      read_iunit_register_call_reqs => read_iunit_register_call_reqs(0 downto 0),
      read_iunit_register_call_acks => read_iunit_register_call_acks(0 downto 0),
      read_iunit_register_call_data => read_iunit_register_call_data(7 downto 0),
      read_iunit_register_call_tag => read_iunit_register_call_tag(0 downto 0),
      read_iunit_register_return_reqs => read_iunit_register_return_reqs(0 downto 0),
      read_iunit_register_return_acks => read_iunit_register_return_acks(0 downto 0),
      read_iunit_register_return_data => read_iunit_register_return_data(31 downto 0),
      read_iunit_register_return_tag => read_iunit_register_return_tag(0 downto 0),
      read_fpunit_register_call_reqs => read_fpunit_register_call_reqs(0 downto 0),
      read_fpunit_register_call_acks => read_fpunit_register_call_acks(0 downto 0),
      read_fpunit_register_call_data => read_fpunit_register_call_data(5 downto 0),
      read_fpunit_register_call_tag => read_fpunit_register_call_tag(0 downto 0),
      read_fpunit_register_return_reqs => read_fpunit_register_return_reqs(0 downto 0),
      read_fpunit_register_return_acks => read_fpunit_register_return_acks(0 downto 0),
      read_fpunit_register_return_data => read_fpunit_register_return_data(31 downto 0),
      read_fpunit_register_return_tag => read_fpunit_register_return_tag(0 downto 0),
      write_iunit_register_call_reqs => write_iunit_register_call_reqs(0 downto 0),
      write_iunit_register_call_acks => write_iunit_register_call_acks(0 downto 0),
      write_iunit_register_call_data => write_iunit_register_call_data(39 downto 0),
      write_iunit_register_call_tag => write_iunit_register_call_tag(0 downto 0),
      write_iunit_register_return_reqs => write_iunit_register_return_reqs(0 downto 0),
      write_iunit_register_return_acks => write_iunit_register_return_acks(0 downto 0),
      write_iunit_register_return_data => write_iunit_register_return_data(0 downto 0),
      write_iunit_register_return_tag => write_iunit_register_return_tag(0 downto 0),
      write_fpunit_register_call_reqs => write_fpunit_register_call_reqs(0 downto 0),
      write_fpunit_register_call_acks => write_fpunit_register_call_acks(0 downto 0),
      write_fpunit_register_call_data => write_fpunit_register_call_data(37 downto 0),
      write_fpunit_register_call_tag => write_fpunit_register_call_tag(0 downto 0),
      write_fpunit_register_return_reqs => write_fpunit_register_return_reqs(0 downto 0),
      write_fpunit_register_return_acks => write_fpunit_register_return_acks(0 downto 0),
      write_fpunit_register_return_data => write_fpunit_register_return_data(0 downto 0),
      write_fpunit_register_return_tag => write_fpunit_register_return_tag(0 downto 0),
      read_from_memory_call_reqs => read_from_memory_call_reqs(0 downto 0),
      read_from_memory_call_acks => read_from_memory_call_acks(0 downto 0),
      read_from_memory_call_data => read_from_memory_call_data(39 downto 0),
      read_from_memory_call_tag => read_from_memory_call_tag(0 downto 0),
      read_from_memory_return_reqs => read_from_memory_return_reqs(0 downto 0),
      read_from_memory_return_acks => read_from_memory_return_acks(0 downto 0),
      read_from_memory_return_data => read_from_memory_return_data(32 downto 0),
      read_from_memory_return_tag => read_from_memory_return_tag(0 downto 0),
      write_to_memory_call_reqs => write_to_memory_call_reqs(0 downto 0),
      write_to_memory_call_acks => write_to_memory_call_acks(0 downto 0),
      write_to_memory_call_data => write_to_memory_call_data(71 downto 0),
      write_to_memory_call_tag => write_to_memory_call_tag(0 downto 0),
      write_to_memory_return_reqs => write_to_memory_return_reqs(0 downto 0),
      write_to_memory_return_acks => write_to_memory_return_acks(0 downto 0),
      write_to_memory_return_data => write_to_memory_return_data(0 downto 0),
      write_to_memory_return_tag => write_to_memory_return_tag(0 downto 0),
      send_ccu_to_teu_debug_call_reqs => send_ccu_to_teu_debug_call_reqs(0 downto 0),
      send_ccu_to_teu_debug_call_acks => send_ccu_to_teu_debug_call_acks(0 downto 0),
      send_ccu_to_teu_debug_call_data => send_ccu_to_teu_debug_call_data(38 downto 0),
      send_ccu_to_teu_debug_call_tag => send_ccu_to_teu_debug_call_tag(0 downto 0),
      send_ccu_to_teu_debug_return_reqs => send_ccu_to_teu_debug_return_reqs(0 downto 0),
      send_ccu_to_teu_debug_return_acks => send_ccu_to_teu_debug_return_acks(0 downto 0),
      send_ccu_to_teu_debug_return_data => send_ccu_to_teu_debug_return_data(0 downto 0),
      send_ccu_to_teu_debug_return_tag => send_ccu_to_teu_debug_return_tag(0 downto 0),
      tag_in => ccu_debug_daemon_tag_in,
      tag_out => ccu_debug_daemon_tag_out-- 
    ); -- 
  -- module will be run forever 
  ccu_debug_daemon_tag_in <= (others => '0');
  ccu_debug_daemon_auto_run: auto_run generic map(use_delay => true)  port map(clk => clk, reset => reset, start_req => ccu_debug_daemon_start_req, start_ack => ccu_debug_daemon_start_ack,  fin_req => ccu_debug_daemon_fin_req,  fin_ack => ccu_debug_daemon_fin_ack);
  -- module ccu_debug_initialize
  -- call arbiter for module ccu_debug_initialize
  ccu_debug_initialize_arbiter: SplitCallArbiterNoInargsNoOutargs -- 
    generic map( --
      name => "SplitCallArbiterNoInargsNoOutargs", num_reqs => 1,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => ccu_debug_initialize_call_reqs,
      call_acks => ccu_debug_initialize_call_acks,
      return_reqs => ccu_debug_initialize_return_reqs,
      return_acks => ccu_debug_initialize_return_acks,
      call_tag  => ccu_debug_initialize_call_tag,
      return_tag  => ccu_debug_initialize_return_tag,
      call_mtag => ccu_debug_initialize_tag_in,
      return_mtag => ccu_debug_initialize_tag_out,
      call_mreq => ccu_debug_initialize_start_req,
      call_mack => ccu_debug_initialize_start_ack,
      return_mreq => ccu_debug_initialize_fin_req,
      return_mack => ccu_debug_initialize_fin_ack,
      clk => clk, 
      reset => reset --
    ); --
  ccu_debug_initialize_instance:ccu_debug_initialize-- 
    generic map(tag_length => 2)
    port map(-- 
      start_req => ccu_debug_initialize_start_req,
      start_ack => ccu_debug_initialize_start_ack,
      fin_req => ccu_debug_initialize_fin_req,
      fin_ack => ccu_debug_initialize_fin_ack,
      clk => clk,
      reset => reset,
      DBG_TO_CCU_RESET_SIG_pipe_write_req => DBG_TO_CCU_RESET_SIG_pipe_write_req(1 downto 1),
      DBG_TO_CCU_RESET_SIG_pipe_write_ack => DBG_TO_CCU_RESET_SIG_pipe_write_ack(1 downto 1),
      DBG_TO_CCU_RESET_SIG_pipe_write_data => DBG_TO_CCU_RESET_SIG_pipe_write_data(9 downto 5),
      DBG_TO_CCU_INIT_NPC_SIG_pipe_write_req => DBG_TO_CCU_INIT_NPC_SIG_pipe_write_req(1 downto 1),
      DBG_TO_CCU_INIT_NPC_SIG_pipe_write_ack => DBG_TO_CCU_INIT_NPC_SIG_pipe_write_ack(1 downto 1),
      DBG_TO_CCU_INIT_NPC_SIG_pipe_write_data => DBG_TO_CCU_INIT_NPC_SIG_pipe_write_data(63 downto 32),
      DBG_TO_CCU_INIT_PC_SIG_pipe_write_req => DBG_TO_CCU_INIT_PC_SIG_pipe_write_req(1 downto 1),
      DBG_TO_CCU_INIT_PC_SIG_pipe_write_ack => DBG_TO_CCU_INIT_PC_SIG_pipe_write_ack(1 downto 1),
      DBG_TO_CCU_INIT_PC_SIG_pipe_write_data => DBG_TO_CCU_INIT_PC_SIG_pipe_write_data(63 downto 32),
      DBG_TO_CCU_INIT_PSR_SIG_pipe_write_req => DBG_TO_CCU_INIT_PSR_SIG_pipe_write_req(1 downto 1),
      DBG_TO_CCU_INIT_PSR_SIG_pipe_write_ack => DBG_TO_CCU_INIT_PSR_SIG_pipe_write_ack(1 downto 1),
      DBG_TO_CCU_INIT_PSR_SIG_pipe_write_data => DBG_TO_CCU_INIT_PSR_SIG_pipe_write_data(63 downto 32),
      init_npc_pipe_write_req => init_npc_pipe_write_req(1 downto 1),
      init_npc_pipe_write_ack => init_npc_pipe_write_ack(1 downto 1),
      init_npc_pipe_write_data => init_npc_pipe_write_data(63 downto 32),
      init_pc_pipe_write_req => init_pc_pipe_write_req(1 downto 1),
      init_pc_pipe_write_ack => init_pc_pipe_write_ack(1 downto 1),
      init_pc_pipe_write_data => init_pc_pipe_write_data(63 downto 32),
      init_psr_pipe_write_req => init_psr_pipe_write_req(1 downto 1),
      init_psr_pipe_write_ack => init_psr_pipe_write_ack(1 downto 1),
      init_psr_pipe_write_data => init_psr_pipe_write_data(63 downto 32),
      tag_in => ccu_debug_initialize_tag_in,
      tag_out => ccu_debug_initialize_tag_out-- 
    ); -- 
  -- module queryDebugger
  queryDebugger_first_connect_flag <= queryDebugger_in_args(109 downto 109);
  queryDebugger_i_machine_error <= queryDebugger_in_args(108 downto 108);
  queryDebugger_i_exception_found <= queryDebugger_in_args(107 downto 107);
  queryDebugger_i_interrupt_found <= queryDebugger_in_args(106 downto 106);
  queryDebugger_i_annul_instr <= queryDebugger_in_args(105 downto 105);
  queryDebugger_i_debug_break_on_traps <= queryDebugger_in_args(104 downto 104);
  queryDebugger_i_dbg_status <= queryDebugger_in_args(103 downto 96);
  queryDebugger_i_PC <= queryDebugger_in_args(95 downto 64);
  queryDebugger_i_NPC <= queryDebugger_in_args(63 downto 32);
  queryDebugger_i_PSR <= queryDebugger_in_args(31 downto 0);
  queryDebugger_out_args <= queryDebugger_o_annul_instr & queryDebugger_o_ignore_bp & queryDebugger_o_PC & queryDebugger_o_NPC & queryDebugger_o_PSR ;
  -- call arbiter for module queryDebugger
  queryDebugger_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 110,
      return_data_width => 98,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => queryDebugger_call_reqs,
      call_acks => queryDebugger_call_acks,
      return_reqs => queryDebugger_return_reqs,
      return_acks => queryDebugger_return_acks,
      call_data  => queryDebugger_call_data,
      call_tag  => queryDebugger_call_tag,
      return_tag  => queryDebugger_return_tag,
      call_mtag => queryDebugger_tag_in,
      return_mtag => queryDebugger_tag_out,
      return_data =>queryDebugger_return_data,
      call_mreq => queryDebugger_start_req,
      call_mack => queryDebugger_start_ack,
      return_mreq => queryDebugger_fin_req,
      return_mack => queryDebugger_fin_ack,
      call_mdata => queryDebugger_in_args,
      return_mdata => queryDebugger_out_args,
      clk => clk, 
      reset => reset --
    ); --
  queryDebugger_instance:queryDebugger-- 
    generic map(tag_length => 2)
    port map(-- 
      first_connect_flag => queryDebugger_first_connect_flag,
      i_machine_error => queryDebugger_i_machine_error,
      i_exception_found => queryDebugger_i_exception_found,
      i_interrupt_found => queryDebugger_i_interrupt_found,
      i_annul_instr => queryDebugger_i_annul_instr,
      i_debug_break_on_traps => queryDebugger_i_debug_break_on_traps,
      i_dbg_status => queryDebugger_i_dbg_status,
      i_PC => queryDebugger_i_PC,
      i_NPC => queryDebugger_i_NPC,
      i_PSR => queryDebugger_i_PSR,
      o_annul_instr => queryDebugger_o_annul_instr,
      o_ignore_bp => queryDebugger_o_ignore_bp,
      o_PC => queryDebugger_o_PC,
      o_NPC => queryDebugger_o_NPC,
      o_PSR => queryDebugger_o_PSR,
      start_req => queryDebugger_start_req,
      start_ack => queryDebugger_start_ack,
      fin_req => queryDebugger_fin_req,
      fin_ack => queryDebugger_fin_ack,
      clk => clk,
      reset => reset,
      send_ccu_daemon_to_ccu_debug_daemon_call_reqs => send_ccu_daemon_to_ccu_debug_daemon_call_reqs(0 downto 0),
      send_ccu_daemon_to_ccu_debug_daemon_call_acks => send_ccu_daemon_to_ccu_debug_daemon_call_acks(0 downto 0),
      send_ccu_daemon_to_ccu_debug_daemon_call_data => send_ccu_daemon_to_ccu_debug_daemon_call_data(127 downto 0),
      send_ccu_daemon_to_ccu_debug_daemon_call_tag => send_ccu_daemon_to_ccu_debug_daemon_call_tag(0 downto 0),
      send_ccu_daemon_to_ccu_debug_daemon_return_reqs => send_ccu_daemon_to_ccu_debug_daemon_return_reqs(0 downto 0),
      send_ccu_daemon_to_ccu_debug_daemon_return_acks => send_ccu_daemon_to_ccu_debug_daemon_return_acks(0 downto 0),
      send_ccu_daemon_to_ccu_debug_daemon_return_tag => send_ccu_daemon_to_ccu_debug_daemon_return_tag(0 downto 0),
      recv_ccu_debug_daemon_to_ccu_daemon_call_reqs => recv_ccu_debug_daemon_to_ccu_daemon_call_reqs(0 downto 0),
      recv_ccu_debug_daemon_to_ccu_daemon_call_acks => recv_ccu_debug_daemon_to_ccu_daemon_call_acks(0 downto 0),
      recv_ccu_debug_daemon_to_ccu_daemon_call_tag => recv_ccu_debug_daemon_to_ccu_daemon_call_tag(0 downto 0),
      recv_ccu_debug_daemon_to_ccu_daemon_return_reqs => recv_ccu_debug_daemon_to_ccu_daemon_return_reqs(0 downto 0),
      recv_ccu_debug_daemon_to_ccu_daemon_return_acks => recv_ccu_debug_daemon_to_ccu_daemon_return_acks(0 downto 0),
      recv_ccu_debug_daemon_to_ccu_daemon_return_data => recv_ccu_debug_daemon_to_ccu_daemon_return_data(95 downto 0),
      recv_ccu_debug_daemon_to_ccu_daemon_return_tag => recv_ccu_debug_daemon_to_ccu_daemon_return_tag(0 downto 0),
      tag_in => queryDebugger_tag_in,
      tag_out => queryDebugger_tag_out-- 
    ); -- 
  -- module read_fpunit_register
  read_fpunit_register_fsr_flag <= read_fpunit_register_in_args(5 downto 5);
  read_fpunit_register_reg_id <= read_fpunit_register_in_args(4 downto 0);
  read_fpunit_register_out_args <= read_fpunit_register_ret_val ;
  -- call arbiter for module read_fpunit_register
  read_fpunit_register_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 6,
      return_data_width => 32,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => read_fpunit_register_call_reqs,
      call_acks => read_fpunit_register_call_acks,
      return_reqs => read_fpunit_register_return_reqs,
      return_acks => read_fpunit_register_return_acks,
      call_data  => read_fpunit_register_call_data,
      call_tag  => read_fpunit_register_call_tag,
      return_tag  => read_fpunit_register_return_tag,
      call_mtag => read_fpunit_register_tag_in,
      return_mtag => read_fpunit_register_tag_out,
      return_data =>read_fpunit_register_return_data,
      call_mreq => read_fpunit_register_start_req,
      call_mack => read_fpunit_register_start_ack,
      return_mreq => read_fpunit_register_fin_req,
      return_mack => read_fpunit_register_fin_ack,
      call_mdata => read_fpunit_register_in_args,
      return_mdata => read_fpunit_register_out_args,
      clk => clk, 
      reset => reset --
    ); --
  read_fpunit_register_instance:read_fpunit_register-- 
    generic map(tag_length => 2)
    port map(-- 
      fsr_flag => read_fpunit_register_fsr_flag,
      reg_id => read_fpunit_register_reg_id,
      ret_val => read_fpunit_register_ret_val,
      start_req => read_fpunit_register_start_req,
      start_ack => read_fpunit_register_start_ack,
      fin_req => read_fpunit_register_fin_req,
      fin_ack => read_fpunit_register_fin_ack,
      clk => clk,
      reset => reset,
      access_fpunit_registers_call_reqs => access_fpunit_registers_call_reqs(1 downto 1),
      access_fpunit_registers_call_acks => access_fpunit_registers_call_acks(1 downto 1),
      access_fpunit_registers_call_data => access_fpunit_registers_call_data(77 downto 39),
      access_fpunit_registers_call_tag => access_fpunit_registers_call_tag(1 downto 1),
      access_fpunit_registers_return_reqs => access_fpunit_registers_return_reqs(1 downto 1),
      access_fpunit_registers_return_acks => access_fpunit_registers_return_acks(1 downto 1),
      access_fpunit_registers_return_data => access_fpunit_registers_return_data(65 downto 33),
      access_fpunit_registers_return_tag => access_fpunit_registers_return_tag(1 downto 1),
      tag_in => read_fpunit_register_tag_in,
      tag_out => read_fpunit_register_tag_out-- 
    ); -- 
  -- module read_from_memory
  read_from_memory_asi <= read_from_memory_in_args(39 downto 32);
  read_from_memory_addr <= read_from_memory_in_args(31 downto 0);
  read_from_memory_out_args <= read_from_memory_err_flag & read_from_memory_data ;
  -- call arbiter for module read_from_memory
  read_from_memory_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 40,
      return_data_width => 33,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => read_from_memory_call_reqs,
      call_acks => read_from_memory_call_acks,
      return_reqs => read_from_memory_return_reqs,
      return_acks => read_from_memory_return_acks,
      call_data  => read_from_memory_call_data,
      call_tag  => read_from_memory_call_tag,
      return_tag  => read_from_memory_return_tag,
      call_mtag => read_from_memory_tag_in,
      return_mtag => read_from_memory_tag_out,
      return_data =>read_from_memory_return_data,
      call_mreq => read_from_memory_start_req,
      call_mack => read_from_memory_start_ack,
      return_mreq => read_from_memory_fin_req,
      return_mack => read_from_memory_fin_ack,
      call_mdata => read_from_memory_in_args,
      return_mdata => read_from_memory_out_args,
      clk => clk, 
      reset => reset --
    ); --
  read_from_memory_instance:read_from_memory-- 
    generic map(tag_length => 2)
    port map(-- 
      asi => read_from_memory_asi,
      addr => read_from_memory_addr,
      err_flag => read_from_memory_err_flag,
      data => read_from_memory_data,
      start_req => read_from_memory_start_req,
      start_ack => read_from_memory_start_ack,
      fin_req => read_from_memory_fin_req,
      fin_ack => read_from_memory_fin_ack,
      clk => clk,
      reset => reset,
      access_memory_call_reqs => access_memory_call_reqs(1 downto 1),
      access_memory_call_acks => access_memory_call_acks(1 downto 1),
      access_memory_call_data => access_memory_call_data(145 downto 73),
      access_memory_call_tag => access_memory_call_tag(1 downto 1),
      access_memory_return_reqs => access_memory_return_reqs(1 downto 1),
      access_memory_return_acks => access_memory_return_acks(1 downto 1),
      access_memory_return_data => access_memory_return_data(65 downto 33),
      access_memory_return_tag => access_memory_return_tag(1 downto 1),
      tag_in => read_from_memory_tag_in,
      tag_out => read_from_memory_tag_out-- 
    ); -- 
  -- module read_iunit_register
  read_iunit_register_reg_type <= read_iunit_register_in_args(7 downto 5);
  read_iunit_register_reg_id <= read_iunit_register_in_args(4 downto 0);
  read_iunit_register_out_args <= read_iunit_register_ret_val ;
  -- call arbiter for module read_iunit_register
  read_iunit_register_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 8,
      return_data_width => 32,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => read_iunit_register_call_reqs,
      call_acks => read_iunit_register_call_acks,
      return_reqs => read_iunit_register_return_reqs,
      return_acks => read_iunit_register_return_acks,
      call_data  => read_iunit_register_call_data,
      call_tag  => read_iunit_register_call_tag,
      return_tag  => read_iunit_register_return_tag,
      call_mtag => read_iunit_register_tag_in,
      return_mtag => read_iunit_register_tag_out,
      return_data =>read_iunit_register_return_data,
      call_mreq => read_iunit_register_start_req,
      call_mack => read_iunit_register_start_ack,
      return_mreq => read_iunit_register_fin_req,
      return_mack => read_iunit_register_fin_ack,
      call_mdata => read_iunit_register_in_args,
      return_mdata => read_iunit_register_out_args,
      clk => clk, 
      reset => reset --
    ); --
  read_iunit_register_instance:read_iunit_register-- 
    generic map(tag_length => 2)
    port map(-- 
      reg_type => read_iunit_register_reg_type,
      reg_id => read_iunit_register_reg_id,
      ret_val => read_iunit_register_ret_val,
      start_req => read_iunit_register_start_req,
      start_ack => read_iunit_register_start_ack,
      fin_req => read_iunit_register_fin_req,
      fin_ack => read_iunit_register_fin_ack,
      clk => clk,
      reset => reset,
      access_iunit_registers_call_reqs => access_iunit_registers_call_reqs(0 downto 0),
      access_iunit_registers_call_acks => access_iunit_registers_call_acks(0 downto 0),
      access_iunit_registers_call_data => access_iunit_registers_call_data(40 downto 0),
      access_iunit_registers_call_tag => access_iunit_registers_call_tag(2 downto 0),
      access_iunit_registers_return_reqs => access_iunit_registers_return_reqs(0 downto 0),
      access_iunit_registers_return_acks => access_iunit_registers_return_acks(0 downto 0),
      access_iunit_registers_return_data => access_iunit_registers_return_data(31 downto 0),
      access_iunit_registers_return_tag => access_iunit_registers_return_tag(2 downto 0),
      tag_in => read_iunit_register_tag_in,
      tag_out => read_iunit_register_tag_out-- 
    ); -- 
  -- module recv_ccu_debug_daemon_to_ccu_daemon
  recv_ccu_debug_daemon_to_ccu_daemon_out_args <= recv_ccu_debug_daemon_to_ccu_daemon_pc & recv_ccu_debug_daemon_to_ccu_daemon_npc & recv_ccu_debug_daemon_to_ccu_daemon_psr ;
  -- call arbiter for module recv_ccu_debug_daemon_to_ccu_daemon
  recv_ccu_debug_daemon_to_ccu_daemon_arbiter: SplitCallArbiterNoInargs -- 
    generic map( --
      name => "SplitCallArbiterNoInargs", num_reqs => 1,
      return_data_width => 96,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => recv_ccu_debug_daemon_to_ccu_daemon_call_reqs,
      call_acks => recv_ccu_debug_daemon_to_ccu_daemon_call_acks,
      return_reqs => recv_ccu_debug_daemon_to_ccu_daemon_return_reqs,
      return_acks => recv_ccu_debug_daemon_to_ccu_daemon_return_acks,
      call_tag  => recv_ccu_debug_daemon_to_ccu_daemon_call_tag,
      return_tag  => recv_ccu_debug_daemon_to_ccu_daemon_return_tag,
      call_mtag => recv_ccu_debug_daemon_to_ccu_daemon_tag_in,
      return_mtag => recv_ccu_debug_daemon_to_ccu_daemon_tag_out,
      return_data =>recv_ccu_debug_daemon_to_ccu_daemon_return_data,
      call_mreq => recv_ccu_debug_daemon_to_ccu_daemon_start_req,
      call_mack => recv_ccu_debug_daemon_to_ccu_daemon_start_ack,
      return_mreq => recv_ccu_debug_daemon_to_ccu_daemon_fin_req,
      return_mack => recv_ccu_debug_daemon_to_ccu_daemon_fin_ack,
      return_mdata => recv_ccu_debug_daemon_to_ccu_daemon_out_args,
      clk => clk, 
      reset => reset --
    ); --
  recv_ccu_debug_daemon_to_ccu_daemon_instance:recv_ccu_debug_daemon_to_ccu_daemon-- 
    generic map(tag_length => 2)
    port map(-- 
      pc => recv_ccu_debug_daemon_to_ccu_daemon_pc,
      npc => recv_ccu_debug_daemon_to_ccu_daemon_npc,
      psr => recv_ccu_debug_daemon_to_ccu_daemon_psr,
      start_req => recv_ccu_debug_daemon_to_ccu_daemon_start_req,
      start_ack => recv_ccu_debug_daemon_to_ccu_daemon_start_ack,
      fin_req => recv_ccu_debug_daemon_to_ccu_daemon_fin_req,
      fin_ack => recv_ccu_debug_daemon_to_ccu_daemon_fin_ack,
      clk => clk,
      reset => reset,
      ccu_debug_daemon_to_ccu_daemon_pipe_read_req => ccu_debug_daemon_to_ccu_daemon_pipe_read_req(0 downto 0),
      ccu_debug_daemon_to_ccu_daemon_pipe_read_ack => ccu_debug_daemon_to_ccu_daemon_pipe_read_ack(0 downto 0),
      ccu_debug_daemon_to_ccu_daemon_pipe_read_data => ccu_debug_daemon_to_ccu_daemon_pipe_read_data(31 downto 0),
      tag_in => recv_ccu_debug_daemon_to_ccu_daemon_tag_in,
      tag_out => recv_ccu_debug_daemon_to_ccu_daemon_tag_out-- 
    ); -- 
  -- module reset_dcache_icache_mmu
  -- call arbiter for module reset_dcache_icache_mmu
  reset_dcache_icache_mmu_arbiter: SplitCallArbiterNoInargsNoOutargs -- 
    generic map( --
      name => "SplitCallArbiterNoInargsNoOutargs", num_reqs => 1,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => reset_dcache_icache_mmu_call_reqs,
      call_acks => reset_dcache_icache_mmu_call_acks,
      return_reqs => reset_dcache_icache_mmu_return_reqs,
      return_acks => reset_dcache_icache_mmu_return_acks,
      call_tag  => reset_dcache_icache_mmu_call_tag,
      return_tag  => reset_dcache_icache_mmu_return_tag,
      call_mtag => reset_dcache_icache_mmu_tag_in,
      return_mtag => reset_dcache_icache_mmu_tag_out,
      call_mreq => reset_dcache_icache_mmu_start_req,
      call_mack => reset_dcache_icache_mmu_start_ack,
      return_mreq => reset_dcache_icache_mmu_fin_req,
      return_mack => reset_dcache_icache_mmu_fin_ack,
      clk => clk, 
      reset => reset --
    ); --
  reset_dcache_icache_mmu_instance:reset_dcache_icache_mmu-- 
    generic map(tag_length => 2)
    port map(-- 
      start_req => reset_dcache_icache_mmu_start_req,
      start_ack => reset_dcache_icache_mmu_start_ack,
      fin_req => reset_dcache_icache_mmu_fin_req,
      fin_ack => reset_dcache_icache_mmu_fin_ack,
      clk => clk,
      reset => reset,
      DCACHE_to_CPU_reset_ack_pipe_read_req => DCACHE_to_CPU_reset_ack_pipe_read_req(0 downto 0),
      DCACHE_to_CPU_reset_ack_pipe_read_ack => DCACHE_to_CPU_reset_ack_pipe_read_ack(0 downto 0),
      DCACHE_to_CPU_reset_ack_pipe_read_data => DCACHE_to_CPU_reset_ack_pipe_read_data(0 downto 0),
      ICACHE_to_CPU_reset_ack_pipe_read_req => ICACHE_to_CPU_reset_ack_pipe_read_req(0 downto 0),
      ICACHE_to_CPU_reset_ack_pipe_read_ack => ICACHE_to_CPU_reset_ack_pipe_read_ack(0 downto 0),
      ICACHE_to_CPU_reset_ack_pipe_read_data => ICACHE_to_CPU_reset_ack_pipe_read_data(0 downto 0),
      MMU_to_CPU_reset_ack_pipe_read_req => MMU_to_CPU_reset_ack_pipe_read_req(0 downto 0),
      MMU_to_CPU_reset_ack_pipe_read_ack => MMU_to_CPU_reset_ack_pipe_read_ack(0 downto 0),
      MMU_to_CPU_reset_ack_pipe_read_data => MMU_to_CPU_reset_ack_pipe_read_data(0 downto 0),
      NOBLOCK_CPU_to_DCACHE_reset_pipe_write_req => NOBLOCK_CPU_to_DCACHE_reset_pipe_write_req(0 downto 0),
      NOBLOCK_CPU_to_DCACHE_reset_pipe_write_ack => NOBLOCK_CPU_to_DCACHE_reset_pipe_write_ack(0 downto 0),
      NOBLOCK_CPU_to_DCACHE_reset_pipe_write_data => NOBLOCK_CPU_to_DCACHE_reset_pipe_write_data(0 downto 0),
      NOBLOCK_CPU_to_ICACHE_reset_pipe_write_req => NOBLOCK_CPU_to_ICACHE_reset_pipe_write_req(0 downto 0),
      NOBLOCK_CPU_to_ICACHE_reset_pipe_write_ack => NOBLOCK_CPU_to_ICACHE_reset_pipe_write_ack(0 downto 0),
      NOBLOCK_CPU_to_ICACHE_reset_pipe_write_data => NOBLOCK_CPU_to_ICACHE_reset_pipe_write_data(0 downto 0),
      NOBLOCK_CPU_to_MMU_reset_pipe_write_req => NOBLOCK_CPU_to_MMU_reset_pipe_write_req(0 downto 0),
      NOBLOCK_CPU_to_MMU_reset_pipe_write_ack => NOBLOCK_CPU_to_MMU_reset_pipe_write_ack(0 downto 0),
      NOBLOCK_CPU_to_MMU_reset_pipe_write_data => NOBLOCK_CPU_to_MMU_reset_pipe_write_data(0 downto 0),
      tag_in => reset_dcache_icache_mmu_tag_in,
      tag_out => reset_dcache_icache_mmu_tag_out-- 
    ); -- 
  -- module reset_replicator_daemon
  reset_replicator_daemon_instance:reset_replicator_daemon-- 
    generic map(tag_length => 2)
    port map(-- 
      start_req => reset_replicator_daemon_start_req,
      start_ack => reset_replicator_daemon_start_ack,
      fin_req => reset_replicator_daemon_fin_req,
      fin_ack => reset_replicator_daemon_fin_ack,
      clk => clk,
      reset => reset,
      DBG_TO_CCU_RESET_SIG => DBG_TO_CCU_RESET_SIG,
      ENV_to_AJIT_reset => ENV_to_AJIT_reset,
      ccu_start_pipe_write_req => ccu_start_pipe_write_req(0 downto 0),
      ccu_start_pipe_write_ack => ccu_start_pipe_write_ack(0 downto 0),
      ccu_start_pipe_write_data => ccu_start_pipe_write_data(0 downto 0),
      ccu_to_ccu_reset_pipe_write_req => ccu_to_ccu_reset_pipe_write_req(0 downto 0),
      ccu_to_ccu_reset_pipe_write_ack => ccu_to_ccu_reset_pipe_write_ack(0 downto 0),
      ccu_to_ccu_reset_pipe_write_data => ccu_to_ccu_reset_pipe_write_data(7 downto 0),
      tag_in => reset_replicator_daemon_tag_in,
      tag_out => reset_replicator_daemon_tag_out-- 
    ); -- 
  -- module will be run forever 
  reset_replicator_daemon_tag_in <= (others => '0');
  reset_replicator_daemon_auto_run: auto_run generic map(use_delay => true)  port map(clk => clk, reset => reset, start_req => reset_replicator_daemon_start_req, start_ack => reset_replicator_daemon_start_ack,  fin_req => reset_replicator_daemon_fin_req,  fin_ack => reset_replicator_daemon_fin_ack);
  -- module send_ccu_daemon_to_ccu_debug_daemon
  send_ccu_daemon_to_ccu_debug_daemon_command <= send_ccu_daemon_to_ccu_debug_daemon_in_args(127 downto 96);
  send_ccu_daemon_to_ccu_debug_daemon_pc <= send_ccu_daemon_to_ccu_debug_daemon_in_args(95 downto 64);
  send_ccu_daemon_to_ccu_debug_daemon_npc <= send_ccu_daemon_to_ccu_debug_daemon_in_args(63 downto 32);
  send_ccu_daemon_to_ccu_debug_daemon_psr <= send_ccu_daemon_to_ccu_debug_daemon_in_args(31 downto 0);
  -- call arbiter for module send_ccu_daemon_to_ccu_debug_daemon
  send_ccu_daemon_to_ccu_debug_daemon_arbiter: SplitCallArbiterNoOutargs -- 
    generic map( --
      name => "SplitCallArbiterNoOutargs", num_reqs => 1,
      call_data_width => 128,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => send_ccu_daemon_to_ccu_debug_daemon_call_reqs,
      call_acks => send_ccu_daemon_to_ccu_debug_daemon_call_acks,
      return_reqs => send_ccu_daemon_to_ccu_debug_daemon_return_reqs,
      return_acks => send_ccu_daemon_to_ccu_debug_daemon_return_acks,
      call_data  => send_ccu_daemon_to_ccu_debug_daemon_call_data,
      call_tag  => send_ccu_daemon_to_ccu_debug_daemon_call_tag,
      return_tag  => send_ccu_daemon_to_ccu_debug_daemon_return_tag,
      call_mtag => send_ccu_daemon_to_ccu_debug_daemon_tag_in,
      return_mtag => send_ccu_daemon_to_ccu_debug_daemon_tag_out,
      call_mreq => send_ccu_daemon_to_ccu_debug_daemon_start_req,
      call_mack => send_ccu_daemon_to_ccu_debug_daemon_start_ack,
      return_mreq => send_ccu_daemon_to_ccu_debug_daemon_fin_req,
      return_mack => send_ccu_daemon_to_ccu_debug_daemon_fin_ack,
      call_mdata => send_ccu_daemon_to_ccu_debug_daemon_in_args,
      clk => clk, 
      reset => reset --
    ); --
  send_ccu_daemon_to_ccu_debug_daemon_instance:send_ccu_daemon_to_ccu_debug_daemon-- 
    generic map(tag_length => 2)
    port map(-- 
      command => send_ccu_daemon_to_ccu_debug_daemon_command,
      pc => send_ccu_daemon_to_ccu_debug_daemon_pc,
      npc => send_ccu_daemon_to_ccu_debug_daemon_npc,
      psr => send_ccu_daemon_to_ccu_debug_daemon_psr,
      start_req => send_ccu_daemon_to_ccu_debug_daemon_start_req,
      start_ack => send_ccu_daemon_to_ccu_debug_daemon_start_ack,
      fin_req => send_ccu_daemon_to_ccu_debug_daemon_fin_req,
      fin_ack => send_ccu_daemon_to_ccu_debug_daemon_fin_ack,
      clk => clk,
      reset => reset,
      ccu_daemon_to_ccu_debug_daemon_pipe_write_req => ccu_daemon_to_ccu_debug_daemon_pipe_write_req(0 downto 0),
      ccu_daemon_to_ccu_debug_daemon_pipe_write_ack => ccu_daemon_to_ccu_debug_daemon_pipe_write_ack(0 downto 0),
      ccu_daemon_to_ccu_debug_daemon_pipe_write_data => ccu_daemon_to_ccu_debug_daemon_pipe_write_data(32 downto 0),
      tag_in => send_ccu_daemon_to_ccu_debug_daemon_tag_in,
      tag_out => send_ccu_daemon_to_ccu_debug_daemon_tag_out-- 
    ); -- 
  -- module send_ccu_to_teu_debug
  send_ccu_to_teu_debug_opcode <= send_ccu_to_teu_debug_in_args(38 downto 36);
  send_ccu_to_teu_debug_watch_reg_type <= send_ccu_to_teu_debug_in_args(35 downto 34);
  send_ccu_to_teu_debug_reg_id <= send_ccu_to_teu_debug_in_args(33 downto 32);
  send_ccu_to_teu_debug_reg_val <= send_ccu_to_teu_debug_in_args(31 downto 0);
  send_ccu_to_teu_debug_out_args <= send_ccu_to_teu_debug_err ;
  -- call arbiter for module send_ccu_to_teu_debug
  send_ccu_to_teu_debug_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 39,
      return_data_width => 1,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => send_ccu_to_teu_debug_call_reqs,
      call_acks => send_ccu_to_teu_debug_call_acks,
      return_reqs => send_ccu_to_teu_debug_return_reqs,
      return_acks => send_ccu_to_teu_debug_return_acks,
      call_data  => send_ccu_to_teu_debug_call_data,
      call_tag  => send_ccu_to_teu_debug_call_tag,
      return_tag  => send_ccu_to_teu_debug_return_tag,
      call_mtag => send_ccu_to_teu_debug_tag_in,
      return_mtag => send_ccu_to_teu_debug_tag_out,
      return_data =>send_ccu_to_teu_debug_return_data,
      call_mreq => send_ccu_to_teu_debug_start_req,
      call_mack => send_ccu_to_teu_debug_start_ack,
      return_mreq => send_ccu_to_teu_debug_fin_req,
      return_mack => send_ccu_to_teu_debug_fin_ack,
      call_mdata => send_ccu_to_teu_debug_in_args,
      return_mdata => send_ccu_to_teu_debug_out_args,
      clk => clk, 
      reset => reset --
    ); --
  send_ccu_to_teu_debug_instance:send_ccu_to_teu_debug-- 
    generic map(tag_length => 2)
    port map(-- 
      opcode => send_ccu_to_teu_debug_opcode,
      watch_reg_type => send_ccu_to_teu_debug_watch_reg_type,
      reg_id => send_ccu_to_teu_debug_reg_id,
      reg_val => send_ccu_to_teu_debug_reg_val,
      err => send_ccu_to_teu_debug_err,
      start_req => send_ccu_to_teu_debug_start_req,
      start_ack => send_ccu_to_teu_debug_start_ack,
      fin_req => send_ccu_to_teu_debug_fin_req,
      fin_ack => send_ccu_to_teu_debug_fin_ack,
      clk => clk,
      reset => reset,
      access_ccu_to_teu_debug_call_reqs => access_ccu_to_teu_debug_call_reqs(0 downto 0),
      access_ccu_to_teu_debug_call_acks => access_ccu_to_teu_debug_call_acks(0 downto 0),
      access_ccu_to_teu_debug_call_data => access_ccu_to_teu_debug_call_data(39 downto 0),
      access_ccu_to_teu_debug_call_tag => access_ccu_to_teu_debug_call_tag(0 downto 0),
      access_ccu_to_teu_debug_return_reqs => access_ccu_to_teu_debug_return_reqs(0 downto 0),
      access_ccu_to_teu_debug_return_acks => access_ccu_to_teu_debug_return_acks(0 downto 0),
      access_ccu_to_teu_debug_return_data => access_ccu_to_teu_debug_return_data(0 downto 0),
      access_ccu_to_teu_debug_return_tag => access_ccu_to_teu_debug_return_tag(0 downto 0),
      tag_in => send_ccu_to_teu_debug_tag_in,
      tag_out => send_ccu_to_teu_debug_tag_out-- 
    ); -- 
  -- module write_fpunit_register
  write_fpunit_register_fsr_flag <= write_fpunit_register_in_args(37 downto 37);
  write_fpunit_register_reg_id <= write_fpunit_register_in_args(36 downto 32);
  write_fpunit_register_reg_val <= write_fpunit_register_in_args(31 downto 0);
  write_fpunit_register_out_args <= write_fpunit_register_err ;
  -- call arbiter for module write_fpunit_register
  write_fpunit_register_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 38,
      return_data_width => 1,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => write_fpunit_register_call_reqs,
      call_acks => write_fpunit_register_call_acks,
      return_reqs => write_fpunit_register_return_reqs,
      return_acks => write_fpunit_register_return_acks,
      call_data  => write_fpunit_register_call_data,
      call_tag  => write_fpunit_register_call_tag,
      return_tag  => write_fpunit_register_return_tag,
      call_mtag => write_fpunit_register_tag_in,
      return_mtag => write_fpunit_register_tag_out,
      return_data =>write_fpunit_register_return_data,
      call_mreq => write_fpunit_register_start_req,
      call_mack => write_fpunit_register_start_ack,
      return_mreq => write_fpunit_register_fin_req,
      return_mack => write_fpunit_register_fin_ack,
      call_mdata => write_fpunit_register_in_args,
      return_mdata => write_fpunit_register_out_args,
      clk => clk, 
      reset => reset --
    ); --
  write_fpunit_register_instance:write_fpunit_register-- 
    generic map(tag_length => 2)
    port map(-- 
      fsr_flag => write_fpunit_register_fsr_flag,
      reg_id => write_fpunit_register_reg_id,
      reg_val => write_fpunit_register_reg_val,
      err => write_fpunit_register_err,
      start_req => write_fpunit_register_start_req,
      start_ack => write_fpunit_register_start_ack,
      fin_req => write_fpunit_register_fin_req,
      fin_ack => write_fpunit_register_fin_ack,
      clk => clk,
      reset => reset,
      access_fpunit_registers_call_reqs => access_fpunit_registers_call_reqs(0 downto 0),
      access_fpunit_registers_call_acks => access_fpunit_registers_call_acks(0 downto 0),
      access_fpunit_registers_call_data => access_fpunit_registers_call_data(38 downto 0),
      access_fpunit_registers_call_tag => access_fpunit_registers_call_tag(0 downto 0),
      access_fpunit_registers_return_reqs => access_fpunit_registers_return_reqs(0 downto 0),
      access_fpunit_registers_return_acks => access_fpunit_registers_return_acks(0 downto 0),
      access_fpunit_registers_return_data => access_fpunit_registers_return_data(32 downto 0),
      access_fpunit_registers_return_tag => access_fpunit_registers_return_tag(0 downto 0),
      tag_in => write_fpunit_register_tag_in,
      tag_out => write_fpunit_register_tag_out-- 
    ); -- 
  -- module write_iunit_register
  write_iunit_register_reg_type <= write_iunit_register_in_args(39 downto 37);
  write_iunit_register_reg_id <= write_iunit_register_in_args(36 downto 32);
  write_iunit_register_reg_val <= write_iunit_register_in_args(31 downto 0);
  write_iunit_register_out_args <= write_iunit_register_ignore ;
  -- call arbiter for module write_iunit_register
  write_iunit_register_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 40,
      return_data_width => 1,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => write_iunit_register_call_reqs,
      call_acks => write_iunit_register_call_acks,
      return_reqs => write_iunit_register_return_reqs,
      return_acks => write_iunit_register_return_acks,
      call_data  => write_iunit_register_call_data,
      call_tag  => write_iunit_register_call_tag,
      return_tag  => write_iunit_register_return_tag,
      call_mtag => write_iunit_register_tag_in,
      return_mtag => write_iunit_register_tag_out,
      return_data =>write_iunit_register_return_data,
      call_mreq => write_iunit_register_start_req,
      call_mack => write_iunit_register_start_ack,
      return_mreq => write_iunit_register_fin_req,
      return_mack => write_iunit_register_fin_ack,
      call_mdata => write_iunit_register_in_args,
      return_mdata => write_iunit_register_out_args,
      clk => clk, 
      reset => reset --
    ); --
  write_iunit_register_instance:write_iunit_register-- 
    generic map(tag_length => 2)
    port map(-- 
      reg_type => write_iunit_register_reg_type,
      reg_id => write_iunit_register_reg_id,
      reg_val => write_iunit_register_reg_val,
      ignore => write_iunit_register_ignore,
      start_req => write_iunit_register_start_req,
      start_ack => write_iunit_register_start_ack,
      fin_req => write_iunit_register_fin_req,
      fin_ack => write_iunit_register_fin_ack,
      clk => clk,
      reset => reset,
      access_iunit_registers_call_reqs => access_iunit_registers_call_reqs(1 downto 1),
      access_iunit_registers_call_acks => access_iunit_registers_call_acks(1 downto 1),
      access_iunit_registers_call_data => access_iunit_registers_call_data(81 downto 41),
      access_iunit_registers_call_tag => access_iunit_registers_call_tag(5 downto 3),
      access_iunit_registers_return_reqs => access_iunit_registers_return_reqs(1 downto 1),
      access_iunit_registers_return_acks => access_iunit_registers_return_acks(1 downto 1),
      access_iunit_registers_return_data => access_iunit_registers_return_data(63 downto 32),
      access_iunit_registers_return_tag => access_iunit_registers_return_tag(5 downto 3),
      tag_in => write_iunit_register_tag_in,
      tag_out => write_iunit_register_tag_out-- 
    ); -- 
  -- module write_to_memory
  write_to_memory_asi <= write_to_memory_in_args(71 downto 64);
  write_to_memory_addr <= write_to_memory_in_args(63 downto 32);
  write_to_memory_data <= write_to_memory_in_args(31 downto 0);
  write_to_memory_out_args <= write_to_memory_err_flag ;
  -- call arbiter for module write_to_memory
  write_to_memory_arbiter: SplitCallArbiter -- 
    generic map( --
      name => "SplitCallArbiter", num_reqs => 1,
      call_data_width => 72,
      return_data_width => 1,
      callee_tag_length => 1,
      caller_tag_length => 1--
    )
    port map(-- 
      call_reqs => write_to_memory_call_reqs,
      call_acks => write_to_memory_call_acks,
      return_reqs => write_to_memory_return_reqs,
      return_acks => write_to_memory_return_acks,
      call_data  => write_to_memory_call_data,
      call_tag  => write_to_memory_call_tag,
      return_tag  => write_to_memory_return_tag,
      call_mtag => write_to_memory_tag_in,
      return_mtag => write_to_memory_tag_out,
      return_data =>write_to_memory_return_data,
      call_mreq => write_to_memory_start_req,
      call_mack => write_to_memory_start_ack,
      return_mreq => write_to_memory_fin_req,
      return_mack => write_to_memory_fin_ack,
      call_mdata => write_to_memory_in_args,
      return_mdata => write_to_memory_out_args,
      clk => clk, 
      reset => reset --
    ); --
  write_to_memory_instance:write_to_memory-- 
    generic map(tag_length => 2)
    port map(-- 
      asi => write_to_memory_asi,
      addr => write_to_memory_addr,
      data => write_to_memory_data,
      err_flag => write_to_memory_err_flag,
      start_req => write_to_memory_start_req,
      start_ack => write_to_memory_start_ack,
      fin_req => write_to_memory_fin_req,
      fin_ack => write_to_memory_fin_ack,
      clk => clk,
      reset => reset,
      access_memory_call_reqs => access_memory_call_reqs(0 downto 0),
      access_memory_call_acks => access_memory_call_acks(0 downto 0),
      access_memory_call_data => access_memory_call_data(72 downto 0),
      access_memory_call_tag => access_memory_call_tag(0 downto 0),
      access_memory_return_reqs => access_memory_return_reqs(0 downto 0),
      access_memory_return_acks => access_memory_return_acks(0 downto 0),
      access_memory_return_data => access_memory_return_data(32 downto 0),
      access_memory_return_tag => access_memory_return_tag(0 downto 0),
      tag_in => write_to_memory_tag_in,
      tag_out => write_to_memory_tag_out-- 
    ); -- 
  AJIT_to_ENV_processor_mode_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe AJIT_to_ENV_processor_mode",
      num_reads => 1,
      num_writes => 1,
      data_width => 8,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => AJIT_to_ENV_processor_mode_pipe_read_req,
      read_ack => AJIT_to_ENV_processor_mode_pipe_read_ack,
      read_data => AJIT_to_ENV_processor_mode_pipe_read_data,
      write_req => AJIT_to_ENV_processor_mode_pipe_write_req,
      write_ack => AJIT_to_ENV_processor_mode_pipe_write_ack,
      write_data => AJIT_to_ENV_processor_mode_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  BROADCAST_INIT_PC_Signal: SignalBase -- 
    generic map( -- 
      name => "pipe BROADCAST_INIT_PC",
      volatile_flag => false,
      num_writes => 1,
      data_width => 32 --
    ) 
    port map( -- 
      read_data => BROADCAST_INIT_PC,
      write_req => BROADCAST_INIT_PC_pipe_write_req,
      write_ack => BROADCAST_INIT_PC_pipe_write_ack,
      write_data => BROADCAST_INIT_PC_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  CCU_TO_DBG_MODE_SIG_Signal: SignalBase -- 
    generic map( -- 
      name => "pipe CCU_TO_DBG_MODE_SIG",
      volatile_flag => false,
      num_writes => 1,
      data_width => 4 --
    ) 
    port map( -- 
      read_data => CCU_TO_DBG_MODE_SIG,
      write_req => CCU_TO_DBG_MODE_SIG_pipe_write_req,
      write_ack => CCU_TO_DBG_MODE_SIG_pipe_write_ack,
      write_data => CCU_TO_DBG_MODE_SIG_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  DBG_TO_CCU_INIT_NPC_SIG_Signal: SignalBase -- 
    generic map( -- 
      name => "pipe DBG_TO_CCU_INIT_NPC_SIG",
      volatile_flag => false,
      num_writes => 2,
      data_width => 32 --
    ) 
    port map( -- 
      read_data => DBG_TO_CCU_INIT_NPC_SIG,
      write_req => DBG_TO_CCU_INIT_NPC_SIG_pipe_write_req,
      write_ack => DBG_TO_CCU_INIT_NPC_SIG_pipe_write_ack,
      write_data => DBG_TO_CCU_INIT_NPC_SIG_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  DBG_TO_CCU_INIT_PC_SIG_Signal: SignalBase -- 
    generic map( -- 
      name => "pipe DBG_TO_CCU_INIT_PC_SIG",
      volatile_flag => false,
      num_writes => 2,
      data_width => 32 --
    ) 
    port map( -- 
      read_data => DBG_TO_CCU_INIT_PC_SIG,
      write_req => DBG_TO_CCU_INIT_PC_SIG_pipe_write_req,
      write_ack => DBG_TO_CCU_INIT_PC_SIG_pipe_write_ack,
      write_data => DBG_TO_CCU_INIT_PC_SIG_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  DBG_TO_CCU_INIT_PSR_SIG_Signal: SignalBase -- 
    generic map( -- 
      name => "pipe DBG_TO_CCU_INIT_PSR_SIG",
      volatile_flag => false,
      num_writes => 2,
      data_width => 32 --
    ) 
    port map( -- 
      read_data => DBG_TO_CCU_INIT_PSR_SIG,
      write_req => DBG_TO_CCU_INIT_PSR_SIG_pipe_write_req,
      write_ack => DBG_TO_CCU_INIT_PSR_SIG_pipe_write_ack,
      write_data => DBG_TO_CCU_INIT_PSR_SIG_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  DBG_TO_CCU_RESET_SIG_Signal: SignalBase -- 
    generic map( -- 
      name => "pipe DBG_TO_CCU_RESET_SIG",
      volatile_flag => false,
      num_writes => 2,
      data_width => 5 --
    ) 
    port map( -- 
      read_data => DBG_TO_CCU_RESET_SIG,
      write_req => DBG_TO_CCU_RESET_SIG_pipe_write_req,
      write_ack => DBG_TO_CCU_RESET_SIG_pipe_write_ack,
      write_data => DBG_TO_CCU_RESET_SIG_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  DCACHE_to_CPU_reset_ack_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe DCACHE_to_CPU_reset_ack",
      num_reads => 1,
      num_writes => 1,
      data_width => 1,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => DCACHE_to_CPU_reset_ack_pipe_read_req,
      read_ack => DCACHE_to_CPU_reset_ack_pipe_read_ack,
      read_data => DCACHE_to_CPU_reset_ack_pipe_read_data,
      write_req => DCACHE_to_CPU_reset_ack_pipe_write_req,
      write_ack => DCACHE_to_CPU_reset_ack_pipe_write_ack,
      write_data => DCACHE_to_CPU_reset_ack_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  -- input signal-pipe ENV_to_AJIT_reset accessed directly. 
  ICACHE_to_CPU_reset_ack_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe ICACHE_to_CPU_reset_ack",
      num_reads => 1,
      num_writes => 1,
      data_width => 1,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => ICACHE_to_CPU_reset_ack_pipe_read_req,
      read_ack => ICACHE_to_CPU_reset_ack_pipe_read_ack,
      read_data => ICACHE_to_CPU_reset_ack_pipe_read_data,
      write_req => ICACHE_to_CPU_reset_ack_pipe_write_req,
      write_ack => ICACHE_to_CPU_reset_ack_pipe_write_ack,
      write_data => ICACHE_to_CPU_reset_ack_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  MMU_to_CPU_reset_ack_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe MMU_to_CPU_reset_ack",
      num_reads => 1,
      num_writes => 1,
      data_width => 1,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => MMU_to_CPU_reset_ack_pipe_read_req,
      read_ack => MMU_to_CPU_reset_ack_pipe_read_ack,
      read_data => MMU_to_CPU_reset_ack_pipe_read_data,
      write_req => MMU_to_CPU_reset_ack_pipe_write_req,
      write_ack => MMU_to_CPU_reset_ack_pipe_write_ack,
      write_data => MMU_to_CPU_reset_ack_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  -- non-blocking pipe... Input-ports must have non-blocking-flag => true
  NOBLOCK_CPU_to_DCACHE_reset_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe NOBLOCK_CPU_to_DCACHE_reset",
      num_reads => 1,
      num_writes => 1,
      data_width => 1,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => NOBLOCK_CPU_to_DCACHE_reset_pipe_read_req,
      read_ack => NOBLOCK_CPU_to_DCACHE_reset_pipe_read_ack,
      read_data => NOBLOCK_CPU_to_DCACHE_reset_pipe_read_data,
      write_req => NOBLOCK_CPU_to_DCACHE_reset_pipe_write_req,
      write_ack => NOBLOCK_CPU_to_DCACHE_reset_pipe_write_ack,
      write_data => NOBLOCK_CPU_to_DCACHE_reset_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  -- non-blocking pipe... Input-ports must have non-blocking-flag => true
  NOBLOCK_CPU_to_ICACHE_reset_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe NOBLOCK_CPU_to_ICACHE_reset",
      num_reads => 1,
      num_writes => 1,
      data_width => 1,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => NOBLOCK_CPU_to_ICACHE_reset_pipe_read_req,
      read_ack => NOBLOCK_CPU_to_ICACHE_reset_pipe_read_ack,
      read_data => NOBLOCK_CPU_to_ICACHE_reset_pipe_read_data,
      write_req => NOBLOCK_CPU_to_ICACHE_reset_pipe_write_req,
      write_ack => NOBLOCK_CPU_to_ICACHE_reset_pipe_write_ack,
      write_data => NOBLOCK_CPU_to_ICACHE_reset_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  -- non-blocking pipe... Input-ports must have non-blocking-flag => true
  NOBLOCK_CPU_to_MMU_reset_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe NOBLOCK_CPU_to_MMU_reset",
      num_reads => 1,
      num_writes => 1,
      data_width => 1,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => NOBLOCK_CPU_to_MMU_reset_pipe_read_req,
      read_ack => NOBLOCK_CPU_to_MMU_reset_pipe_read_ack,
      read_data => NOBLOCK_CPU_to_MMU_reset_pipe_read_data,
      write_req => NOBLOCK_CPU_to_MMU_reset_pipe_write_req,
      write_ack => NOBLOCK_CPU_to_MMU_reset_pipe_write_ack,
      write_data => NOBLOCK_CPU_to_MMU_reset_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  -- non-blocking pipe... Input-ports must have non-blocking-flag => true
  ccu_daemon_to_ccu_debug_daemon_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe ccu_daemon_to_ccu_debug_daemon",
      num_reads => 1,
      num_writes => 1,
      data_width => 33,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 1 --
    )
    port map( -- 
      read_req => ccu_daemon_to_ccu_debug_daemon_pipe_read_req,
      read_ack => ccu_daemon_to_ccu_debug_daemon_pipe_read_ack,
      read_data => ccu_daemon_to_ccu_debug_daemon_pipe_read_data,
      write_req => ccu_daemon_to_ccu_debug_daemon_pipe_write_req,
      write_ack => ccu_daemon_to_ccu_debug_daemon_pipe_write_ack,
      write_data => ccu_daemon_to_ccu_debug_daemon_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  ccu_debug_daemon_to_ccu_daemon_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe ccu_debug_daemon_to_ccu_daemon",
      num_reads => 1,
      num_writes => 1,
      data_width => 32,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 1 --
    )
    port map( -- 
      read_req => ccu_debug_daemon_to_ccu_daemon_pipe_read_req,
      read_ack => ccu_debug_daemon_to_ccu_daemon_pipe_read_ack,
      read_data => ccu_debug_daemon_to_ccu_daemon_pipe_read_data,
      write_req => ccu_debug_daemon_to_ccu_daemon_pipe_write_req,
      write_ack => ccu_debug_daemon_to_ccu_daemon_pipe_write_ack,
      write_data => ccu_debug_daemon_to_ccu_daemon_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  ccu_start_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe ccu_start",
      num_reads => 1,
      num_writes => 1,
      data_width => 1,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 1 --
    )
    port map( -- 
      read_req => ccu_start_pipe_read_req,
      read_ack => ccu_start_pipe_read_ack,
      read_data => ccu_start_pipe_read_data,
      write_req => ccu_start_pipe_write_req,
      write_ack => ccu_start_pipe_write_ack,
      write_data => ccu_start_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  ccu_to_ccu_reset_Signal: SignalBase -- 
    generic map( -- 
      name => "pipe ccu_to_ccu_reset",
      volatile_flag => false,
      num_writes => 1,
      data_width => 8 --
    ) 
    port map( -- 
      read_data => ccu_to_ccu_reset,
      write_req => ccu_to_ccu_reset_pipe_write_req,
      write_ack => ccu_to_ccu_reset_pipe_write_ack,
      write_data => ccu_to_ccu_reset_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  -- non-blocking pipe... Input-ports must have non-blocking-flag => true
  ccu_to_debug_interface_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe ccu_to_debug_interface",
      num_reads => 1,
      num_writes => 1,
      data_width => 33,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => ccu_to_debug_interface_pipe_read_req,
      read_ack => ccu_to_debug_interface_pipe_read_ack,
      read_data => ccu_to_debug_interface_pipe_read_data,
      write_req => ccu_to_debug_interface_pipe_write_req,
      write_ack => ccu_to_debug_interface_pipe_write_ack,
      write_data => ccu_to_debug_interface_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  -- non-blocking pipe... Input-ports must have non-blocking-flag => true
  ccu_to_teu_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe ccu_to_teu",
      num_reads => 1,
      num_writes => 1,
      data_width => 107,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => ccu_to_teu_pipe_read_req,
      read_ack => ccu_to_teu_pipe_read_ack,
      read_data => ccu_to_teu_pipe_read_data,
      write_req => ccu_to_teu_pipe_write_req,
      write_ack => ccu_to_teu_pipe_write_ack,
      write_data => ccu_to_teu_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  ccu_to_teu_debug_command_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe ccu_to_teu_debug_command",
      num_reads => 1,
      num_writes => 1,
      data_width => 8,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => ccu_to_teu_debug_command_pipe_read_req,
      read_ack => ccu_to_teu_debug_command_pipe_read_ack,
      read_data => ccu_to_teu_debug_command_pipe_read_data,
      write_req => ccu_to_teu_debug_command_pipe_write_req,
      write_ack => ccu_to_teu_debug_command_pipe_write_ack,
      write_data => ccu_to_teu_debug_command_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  -- non-blocking pipe... Input-ports must have non-blocking-flag => true
  ccu_to_teu_fpunit_register_access_command_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe ccu_to_teu_fpunit_register_access_command",
      num_reads => 1,
      num_writes => 1,
      data_width => 40,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => ccu_to_teu_fpunit_register_access_command_pipe_read_req,
      read_ack => ccu_to_teu_fpunit_register_access_command_pipe_read_ack,
      read_data => ccu_to_teu_fpunit_register_access_command_pipe_read_data,
      write_req => ccu_to_teu_fpunit_register_access_command_pipe_write_req,
      write_ack => ccu_to_teu_fpunit_register_access_command_pipe_write_ack,
      write_data => ccu_to_teu_fpunit_register_access_command_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  -- non-blocking pipe... Input-ports must have non-blocking-flag => true
  ccu_to_teu_iunit_register_access_command_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe ccu_to_teu_iunit_register_access_command",
      num_reads => 1,
      num_writes => 1,
      data_width => 42,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => ccu_to_teu_iunit_register_access_command_pipe_read_req,
      read_ack => ccu_to_teu_iunit_register_access_command_pipe_read_ack,
      read_data => ccu_to_teu_iunit_register_access_command_pipe_read_data,
      write_req => ccu_to_teu_iunit_register_access_command_pipe_write_req,
      write_ack => ccu_to_teu_iunit_register_access_command_pipe_write_ack,
      write_data => ccu_to_teu_iunit_register_access_command_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  ccu_to_teu_load_store_command_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe ccu_to_teu_load_store_command",
      num_reads => 1,
      num_writes => 1,
      data_width => 73,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => ccu_to_teu_load_store_command_pipe_read_req,
      read_ack => ccu_to_teu_load_store_command_pipe_read_ack,
      read_data => ccu_to_teu_load_store_command_pipe_read_data,
      write_req => ccu_to_teu_load_store_command_pipe_write_req,
      write_ack => ccu_to_teu_load_store_command_pipe_write_ack,
      write_data => ccu_to_teu_load_store_command_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  -- non-blocking pipe... Input-ports must have non-blocking-flag => true
  debug_interface_to_ccu_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe debug_interface_to_ccu",
      num_reads => 1,
      num_writes => 1,
      data_width => 33,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => debug_interface_to_ccu_pipe_read_req,
      read_ack => debug_interface_to_ccu_pipe_read_ack,
      read_data => debug_interface_to_ccu_pipe_read_data,
      write_req => debug_interface_to_ccu_pipe_write_req,
      write_ack => debug_interface_to_ccu_pipe_write_ack,
      write_data => debug_interface_to_ccu_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  init_npc_Signal: SignalBase -- 
    generic map( -- 
      name => "pipe init_npc",
      volatile_flag => false,
      num_writes => 2,
      data_width => 32 --
    ) 
    port map( -- 
      read_data => init_npc,
      write_req => init_npc_pipe_write_req,
      write_ack => init_npc_pipe_write_ack,
      write_data => init_npc_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  init_pc_Signal: SignalBase -- 
    generic map( -- 
      name => "pipe init_pc",
      volatile_flag => false,
      num_writes => 2,
      data_width => 32 --
    ) 
    port map( -- 
      read_data => init_pc,
      write_req => init_pc_pipe_write_req,
      write_ack => init_pc_pipe_write_ack,
      write_data => init_pc_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  init_psr_Signal: SignalBase -- 
    generic map( -- 
      name => "pipe init_psr",
      volatile_flag => false,
      num_writes => 2,
      data_width => 32 --
    ) 
    port map( -- 
      read_data => init_psr,
      write_req => init_psr_pipe_write_req,
      write_ack => init_psr_pipe_write_ack,
      write_data => init_psr_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  teu_debug_to_ccu_response_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe teu_debug_to_ccu_response",
      num_reads => 1,
      num_writes => 1,
      data_width => 1,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => teu_debug_to_ccu_response_pipe_read_req,
      read_ack => teu_debug_to_ccu_response_pipe_read_ack,
      read_data => teu_debug_to_ccu_response_pipe_read_data,
      write_req => teu_debug_to_ccu_response_pipe_write_req,
      write_ack => teu_debug_to_ccu_response_pipe_write_ack,
      write_data => teu_debug_to_ccu_response_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  teu_to_ccu_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe teu_to_ccu",
      num_reads => 1,
      num_writes => 1,
      data_width => 226,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => teu_to_ccu_pipe_read_req,
      read_ack => teu_to_ccu_pipe_read_ack,
      read_data => teu_to_ccu_pipe_read_data,
      write_req => teu_to_ccu_pipe_write_req,
      write_ack => teu_to_ccu_pipe_write_ack,
      write_data => teu_to_ccu_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  teu_to_ccu_fpunit_register_access_response_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe teu_to_ccu_fpunit_register_access_response",
      num_reads => 1,
      num_writes => 1,
      data_width => 33,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => teu_to_ccu_fpunit_register_access_response_pipe_read_req,
      read_ack => teu_to_ccu_fpunit_register_access_response_pipe_read_ack,
      read_data => teu_to_ccu_fpunit_register_access_response_pipe_read_data,
      write_req => teu_to_ccu_fpunit_register_access_response_pipe_write_req,
      write_ack => teu_to_ccu_fpunit_register_access_response_pipe_write_ack,
      write_data => teu_to_ccu_fpunit_register_access_response_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  teu_to_ccu_iunit_register_access_response_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe teu_to_ccu_iunit_register_access_response",
      num_reads => 1,
      num_writes => 1,
      data_width => 32,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => teu_to_ccu_iunit_register_access_response_pipe_read_req,
      read_ack => teu_to_ccu_iunit_register_access_response_pipe_read_ack,
      read_data => teu_to_ccu_iunit_register_access_response_pipe_read_data,
      write_req => teu_to_ccu_iunit_register_access_response_pipe_write_req,
      write_ack => teu_to_ccu_iunit_register_access_response_pipe_write_ack,
      write_data => teu_to_ccu_iunit_register_access_response_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  teu_to_ccu_load_store_response_Pipe: PipeBase -- 
    generic map( -- 
      name => "pipe teu_to_ccu_load_store_response",
      num_reads => 1,
      num_writes => 1,
      data_width => 33,
      lifo_mode => false,
      full_rate => false,
      shift_register_mode => false,
      bypass => false,
      depth => 0 --
    )
    port map( -- 
      read_req => teu_to_ccu_load_store_response_pipe_read_req,
      read_ack => teu_to_ccu_load_store_response_pipe_read_ack,
      read_data => teu_to_ccu_load_store_response_pipe_read_data,
      write_req => teu_to_ccu_load_store_response_pipe_write_req,
      write_ack => teu_to_ccu_load_store_response_pipe_write_ack,
      write_data => teu_to_ccu_load_store_response_pipe_write_data,
      clk => clk,reset => reset -- 
    ); -- 
  -- gated clock generators 
  -- 
end ccu_arch;
